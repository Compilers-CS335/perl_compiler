PLY: PARSE DEBUG START

State  : 0
Stack  : . LexToken(VARIABLE,'$x',4,34)
Action : Shift and goto state 29

State  : 29
Stack  : VARIABLE . LexToken(ASSIGNMENT_OP,'=',4,37)
Action : Shift and goto state 83

State  : 83
Stack  : VARIABLE ASSIGNMENT_OP . LexToken(NUMBER,7,4,39)
Action : Shift and goto state 51

State  : 51
Stack  : VARIABLE ASSIGNMENT_OP NUMBER . LexToken(SEMICOLON,';',4,40)
Action : Reduce rule [number -> NUMBER] with [7] and goto state 55
Result : <dict @ 0x7fb424263168> ({'type': 'NUMBER', 'value': 7})

State  : 43
Stack  : VARIABLE ASSIGNMENT_OP number . LexToken(SEMICOLON,';',4,40)
Action : Reduce rule [term -> number] with [<dict @ 0x7fb424263168>] and goto state 60
Result : <dict @ 0x7fb424263168> ({'place': 'temp1', 'type': 'NUMBER', 'va ...)

State  : 55
Stack  : VARIABLE ASSIGNMENT_OP term . LexToken(SEMICOLON,';',4,40)
Action : Reduce rule [expression -> term] with [<dict @ 0x7fb424263168>] and goto state 69
Result : <dict @ 0x7fb424263168> ({'place': 'temp1', 'type': 'NUMBER', 'va ...)

State  : 141
Stack  : VARIABLE ASSIGNMENT_OP expression . LexToken(SEMICOLON,';',4,40)
Action : Shift and goto state 190

State  : 190
Stack  : VARIABLE ASSIGNMENT_OP expression SEMICOLON . LexToken(VARIABLE,'$y',5,42)
Action : Reduce rule [assignment -> VARIABLE ASSIGNMENT_OP expression SEMICOLON] with ['$x','=',<dict @ 0x7fb424263168>,';'] and goto state 36
Result : <dict @ 0x7fb4242637f8> ({'endlist': [], 'beginlist': [], 'type': ...)

State  : 25
Stack  : assignment . LexToken(VARIABLE,'$y',5,42)
Action : Reduce rule [empty -> <empty>] with [] and goto state 6
Result : <NoneType @ 0x920190> (None)

State  : 35
Stack  : assignment empty . LexToken(VARIABLE,'$y',5,42)
Action : Reduce rule [Marker -> empty] with [None] and goto state 86
Result : <dict @ 0x7fb424260e88> ({'quad': 2})

State  : 76
Stack  : assignment Marker . LexToken(VARIABLE,'$y',5,42)
Action : Reduce rule [statement -> assignment Marker] with [<dict @ 0x7fb4242637f8>,{'quad': 2}] and goto state 7
Result : <dict @ 0x7fb424263910> ({'endlist': [], 'beginlist': [], 'type': ...)

State  : 20
Stack  : statement . LexToken(VARIABLE,'$y',5,42)
Action : Shift and goto state 29

State  : 29
Stack  : statement VARIABLE . LexToken(ASSIGNMENT_OP,'=',5,45)
Action : Shift and goto state 83

State  : 83
Stack  : statement VARIABLE ASSIGNMENT_OP . LexToken(NUMBER,7,5,47)
Action : Shift and goto state 51

State  : 51
Stack  : statement VARIABLE ASSIGNMENT_OP NUMBER . LexToken(SEMICOLON,';',5,48)
Action : Reduce rule [number -> NUMBER] with [7] and goto state 55
Result : <dict @ 0x7fb4242635c8> ({'type': 'NUMBER', 'value': 7})

State  : 43
Stack  : statement VARIABLE ASSIGNMENT_OP number . LexToken(SEMICOLON,';',5,48)
Action : Reduce rule [term -> number] with [<dict @ 0x7fb4242635c8>] and goto state 60
Result : <dict @ 0x7fb4242635c8> ({'place': 'temp2', 'type': 'NUMBER', 'va ...)

State  : 55
Stack  : statement VARIABLE ASSIGNMENT_OP term . LexToken(SEMICOLON,';',5,48)
Action : Reduce rule [expression -> term] with [<dict @ 0x7fb4242635c8>] and goto state 69
Result : <dict @ 0x7fb4242635c8> ({'place': 'temp2', 'type': 'NUMBER', 'va ...)

State  : 141
Stack  : statement VARIABLE ASSIGNMENT_OP expression . LexToken(SEMICOLON,';',5,48)
Action : Shift and goto state 190

State  : 190
Stack  : statement VARIABLE ASSIGNMENT_OP expression SEMICOLON . LexToken(IF,'if',8,82)
Action : Reduce rule [assignment -> VARIABLE ASSIGNMENT_OP expression SEMICOLON] with ['$y','=',<dict @ 0x7fb4242635c8>,';'] and goto state 36
Result : <dict @ 0x7fb424263c58> ({'endlist': [], 'beginlist': [], 'type': ...)

State  : 25
Stack  : statement assignment . LexToken(IF,'if',8,82)
Action : Reduce rule [empty -> <empty>] with [] and goto state 6
Result : <NoneType @ 0x920190> (None)

State  : 35
Stack  : statement assignment empty . LexToken(IF,'if',8,82)
Action : Reduce rule [Marker -> empty] with [None] and goto state 86
Result : <dict @ 0x7fb424263168> ({'quad': 4})

State  : 76
Stack  : statement assignment Marker . LexToken(IF,'if',8,82)
Action : Reduce rule [statement -> assignment Marker] with [<dict @ 0x7fb424263c58>,{'quad': 4}] and goto state 7
Result : <dict @ 0x7fb424263d70> ({'endlist': [], 'beginlist': [], 'type': ...)

State  : 20
Stack  : statement statement . LexToken(IF,'if',8,82)
Action : Shift and goto state 32

State  : 32
Stack  : statement statement IF . LexToken(OPEN_PARANTHESIS,'(',8,85)
Action : Shift and goto state 87

State  : 87
Stack  : statement statement IF OPEN_PARANTHESIS . LexToken(VARIABLE,'$x',8,86)
Action : Shift and goto state 54

State  : 54
Stack  : statement statement IF OPEN_PARANTHESIS VARIABLE . LexToken(EQUALS_OP,'==',8,89)
Action : Reduce rule [term -> VARIABLE] with ['$x'] and goto state 62
Result : <dict @ 0x7fb424260e88> ({'type': 'NUMBER', 'place': '$x'})

State  : 55
Stack  : statement statement IF OPEN_PARANTHESIS term . LexToken(EQUALS_OP,'==',8,89)
Action : Reduce rule [expression -> term] with [<dict @ 0x7fb424260e88>] and goto state 69
Result : <dict @ 0x7fb424260e88> ({'type': 'NUMBER', 'place': '$x'})

State  : 144
Stack  : statement statement IF OPEN_PARANTHESIS expression . LexToken(EQUALS_OP,'==',8,89)
Action : Shift and goto state 106

State  : 106
Stack  : statement statement IF OPEN_PARANTHESIS expression EQUALS_OP . LexToken(NUMBER,7,8,92)
Action : Shift and goto state 51

State  : 51
Stack  : statement statement IF OPEN_PARANTHESIS expression EQUALS_OP NUMBER . LexToken(CLOSE_PARANTHESIS,')',8,93)
Action : Reduce rule [number -> NUMBER] with [7] and goto state 55
Result : <dict @ 0x7fb424263e88> ({'type': 'NUMBER', 'value': 7})

State  : 43
Stack  : statement statement IF OPEN_PARANTHESIS expression EQUALS_OP number . LexToken(CLOSE_PARANTHESIS,')',8,93)
Action : Reduce rule [term -> number] with [<dict @ 0x7fb424263e88>] and goto state 60
Result : <dict @ 0x7fb424263e88> ({'place': 'temp3', 'type': 'NUMBER', 'va ...)

State  : 55
Stack  : statement statement IF OPEN_PARANTHESIS expression EQUALS_OP term . LexToken(CLOSE_PARANTHESIS,')',8,93)
Action : Reduce rule [expression -> term] with [<dict @ 0x7fb424263e88>] and goto state 69
Result : <dict @ 0x7fb424263e88> ({'place': 'temp3', 'type': 'NUMBER', 'va ...)

State  : 157
Stack  : statement statement IF OPEN_PARANTHESIS expression EQUALS_OP expression . LexToken(CLOSE_PARANTHESIS,')',8,93)
Action : Reduce rule [expression -> expression EQUALS_OP expression] with [<dict @ 0x7fb424260e88>,'==',<dict @ 0x7fb424263e88>] and goto state 80
Result : <dict @ 0x7fb42426a050> ({'truelist': [5], 'place': 'temp4', 'typ ...)

State  : 144
Stack  : statement statement IF OPEN_PARANTHESIS expression . LexToken(CLOSE_PARANTHESIS,')',8,93)
Action : Shift and goto state 193

State  : 193
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS . LexToken(BLOCK_BEGIN,'{',8,95)
Action : Reduce rule [empty -> <empty>] with [] and goto state 6
Result : <NoneType @ 0x920190> (None)

State  : 207
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS empty . LexToken(BLOCK_BEGIN,'{',8,95)
Action : Reduce rule [Markerif -> empty] with [None] and goto state 28
Result : <dict @ 0x7fb42426a168> ({'truelist': [6], 'falselist': [7]})

State  : 208
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif . LexToken(BLOCK_BEGIN,'{',8,95)
Action : Reduce rule [empty -> <empty>] with [] and goto state 6
Result : <NoneType @ 0x920190> (None)

State  : 35
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif empty . LexToken(BLOCK_BEGIN,'{',8,95)
Action : Reduce rule [Marker -> empty] with [None] and goto state 86
Result : <dict @ 0x7fb42426a4b0> ({'quad': 8})

State  : 213
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif Marker . LexToken(BLOCK_BEGIN,'{',8,95)
Action : Shift and goto state 6

State  : 6
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif Marker BLOCK_BEGIN . LexToken(PRINT,'print',9,98)
Action : Shift and goto state 8

State  : 8
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif Marker BLOCK_BEGIN PRINT . LexToken(STRING,"'$x is equal to 7!'",9,104)
Action : Shift and goto state 48

State  : 48
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif Marker BLOCK_BEGIN PRINT STRING . LexToken(SEMICOLON,';',9,123)
Action : Reduce rule [string -> STRING] with [<str @ 0x7fb424299ed8>] and goto state 53
Result : <dict @ 0x7fb424263e88> ({'type': 'STRING', 'value': "'$x is equa ...)

State  : 46
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif Marker BLOCK_BEGIN PRINT string . LexToken(SEMICOLON,';',9,123)
Action : Reduce rule [term -> string] with [<dict @ 0x7fb424263e88>] and goto state 61
Result : <dict @ 0x7fb424263e88> ({'place': 'temp5', 'type': 'STRING', 'va ...)

State  : 55
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif Marker BLOCK_BEGIN PRINT term . LexToken(SEMICOLON,';',9,123)
Action : Reduce rule [expression -> term] with [<dict @ 0x7fb424263e88>] and goto state 69
Result : <dict @ 0x7fb424263e88> ({'place': 'temp5', 'type': 'STRING', 'va ...)

State  : 59
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif Marker BLOCK_BEGIN PRINT expression . LexToken(SEMICOLON,';',9,123)
Action : Shift and goto state 107

State  : 107
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif Marker BLOCK_BEGIN PRINT expression SEMICOLON . LexToken(PRINT,'print',10,126)
Action : Reduce rule [printStatement -> PRINT expression SEMICOLON] with ['print',<dict @ 0x7fb424263e88>,';'] and goto state 34
Result : <dict @ 0x7fb42426a910> ({'endlist': [], 'beginlist': [], 'type': ...)

State  : 21
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif Marker BLOCK_BEGIN printStatement . LexToken(PRINT,'print',10,126)
Action : Reduce rule [empty -> <empty>] with [] and goto state 6
Result : <NoneType @ 0x920190> (None)

State  : 35
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif Marker BLOCK_BEGIN printStatement empty . LexToken(PRINT,'print',10,126)
Action : Reduce rule [Marker -> empty] with [None] and goto state 86
Result : <dict @ 0x7fb42426a6e0> ({'quad': 10})

State  : 72
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif Marker BLOCK_BEGIN printStatement Marker . LexToken(PRINT,'print',10,126)
Action : Reduce rule [statement -> printStatement Marker] with [<dict @ 0x7fb42426a910>,{'quad': 10}] and goto state 13
Result : <dict @ 0x7fb42426ac58> ({'endlist': [], 'beginlist': [], 'type': ...)

State  : 20
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif Marker BLOCK_BEGIN statement . LexToken(PRINT,'print',10,126)
Action : Shift and goto state 8

State  : 8
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif Marker BLOCK_BEGIN statement PRINT . LexToken(RES_STRING,'"\\n"',10,132)
Action : Shift and goto state 50

State  : 50
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif Marker BLOCK_BEGIN statement PRINT RES_STRING . LexToken(SEMICOLON,';',10,136)
Action : Reduce rule [string -> RES_STRING] with ['"\\n"'] and goto state 54
Result : <dict @ 0x7fb42426ab40> ({'type': 'RES_STRING', 'value': '"\\n"'})

State  : 46
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif Marker BLOCK_BEGIN statement PRINT string . LexToken(SEMICOLON,';',10,136)
Action : Reduce rule [term -> string] with [<dict @ 0x7fb42426ab40>] and goto state 61
Result : <dict @ 0x7fb42426ab40> ({'place': 'temp6', 'type': 'RES_STRING', ...)

State  : 55
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif Marker BLOCK_BEGIN statement PRINT term . LexToken(SEMICOLON,';',10,136)
Action : Reduce rule [expression -> term] with [<dict @ 0x7fb42426ab40>] and goto state 69
Result : <dict @ 0x7fb42426ab40> ({'place': 'temp6', 'type': 'RES_STRING', ...)

State  : 59
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif Marker BLOCK_BEGIN statement PRINT expression . LexToken(SEMICOLON,';',10,136)
Action : Shift and goto state 107

State  : 107
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif Marker BLOCK_BEGIN statement PRINT expression SEMICOLON . LexToken(BLOCK_ENDS,'}',11,138)
Action : Reduce rule [printStatement -> PRINT expression SEMICOLON] with ['print',<dict @ 0x7fb42426ab40>,';'] and goto state 34
Result : <dict @ 0x7fb42426a910> ({'endlist': [], 'beginlist': [], 'type': ...)

State  : 21
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif Marker BLOCK_BEGIN statement printStatement . LexToken(BLOCK_ENDS,'}',11,138)
Action : Reduce rule [empty -> <empty>] with [] and goto state 6
Result : <NoneType @ 0x920190> (None)

State  : 35
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif Marker BLOCK_BEGIN statement printStatement empty . LexToken(BLOCK_ENDS,'}',11,138)
Action : Reduce rule [Marker -> empty] with [None] and goto state 86
Result : <dict @ 0x7fb42426ad70> ({'quad': 12})

State  : 72
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif Marker BLOCK_BEGIN statement printStatement Marker . LexToken(BLOCK_ENDS,'}',11,138)
Action : Reduce rule [statement -> printStatement Marker] with [<dict @ 0x7fb42426a910>,{'quad': 12}] and goto state 13
Result : <dict @ 0x7fb42426c050> ({'endlist': [], 'beginlist': [], 'type': ...)

State  : 20
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif Marker BLOCK_BEGIN statement statement . LexToken(BLOCK_ENDS,'}',11,138)
Action : Reduce rule [statements -> statement] with [<dict @ 0x7fb42426c050>] and goto state 5
Result : <dict @ 0x7fb42426c050> ({'endlist': [], 'beginlist': [], 'type': ...)

State  : 71
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif Marker BLOCK_BEGIN statement statements . LexToken(BLOCK_ENDS,'}',11,138)
Action : Reduce rule [statements -> statement statements] with [<dict @ 0x7fb42426ac58>,<dict @ 0x7fb42426c050>] and goto state 4
Result : <dict @ 0x7fb4242635c8> ({'beginlist': [], 'endlist': []})

State  : 39
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif Marker BLOCK_BEGIN statements . LexToken(BLOCK_ENDS,'}',11,138)
Action : Shift and goto state 89

State  : 89
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif Marker BLOCK_BEGIN statements BLOCK_ENDS . LexToken(VARIABLE,'$x',12,140)
Action : Reduce rule [block -> BLOCK_BEGIN statements BLOCK_ENDS] with ['{',<dict @ 0x7fb4242635c8>,'}'] and goto state 3
Result : <dict @ 0x7fb4242635c8> ({'beginlist': [], 'endlist': []})

State  : 217
Stack  : statement statement IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif Marker block . LexToken(VARIABLE,'$x',12,140)
Action : Reduce rule [ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif Marker block] with ['if','(',<dict @ 0x7fb42426a050>,')',<dict @ 0x7fb42426a168>,{'quad': 8},<dict @ 0x7fb4242635c8>] and goto state 26
Result : <dict @ 0x7fb42426a398> ({'endlist': [], 'beginlist': [], 'type': ...)

State  : 10
Stack  : statement statement ifthen . LexToken(VARIABLE,'$x',12,140)
Action : Reduce rule [empty -> <empty>] with [] and goto state 6
Result : <NoneType @ 0x920190> (None)

State  : 35
Stack  : statement statement ifthen empty . LexToken(VARIABLE,'$x',12,140)
Action : Reduce rule [Marker -> empty] with [None] and goto state 86
Result : <dict @ 0x7fb42426a7f8> ({'quad': 12})

State  : 62
Stack  : statement statement ifthen Marker . LexToken(VARIABLE,'$x',12,140)
Action : Reduce rule [statement -> ifthen Marker] with [<dict @ 0x7fb42426a398>,{'quad': 12}] and goto state 17
Result : <dict @ 0x7fb42426a6e0> ({'endlist': [], 'beginlist': [], 'type': ...)

State  : 20
Stack  : statement statement statement . LexToken(VARIABLE,'$x',12,140)
Action : Shift and goto state 29

State  : 29
Stack  : statement statement statement VARIABLE . LexToken(ASSIGNMENT_OP,'=',12,142)
Action : Shift and goto state 83

State  : 83
Stack  : statement statement statement VARIABLE ASSIGNMENT_OP . LexToken(NUMBER,3,12,143)
Action : Shift and goto state 51

State  : 51
Stack  : statement statement statement VARIABLE ASSIGNMENT_OP NUMBER . LexToken(SEMICOLON,';',12,144)
Action : Reduce rule [number -> NUMBER] with [3] and goto state 55
Result : <dict @ 0x7fb42426aa28> ({'type': 'NUMBER', 'value': 3})

State  : 43
Stack  : statement statement statement VARIABLE ASSIGNMENT_OP number . LexToken(SEMICOLON,';',12,144)
Action : Reduce rule [term -> number] with [<dict @ 0x7fb42426aa28>] and goto state 60
Result : <dict @ 0x7fb42426aa28> ({'place': 'temp7', 'type': 'NUMBER', 'va ...)

State  : 55
Stack  : statement statement statement VARIABLE ASSIGNMENT_OP term . LexToken(SEMICOLON,';',12,144)
Action : Reduce rule [expression -> term] with [<dict @ 0x7fb42426aa28>] and goto state 69
Result : <dict @ 0x7fb42426aa28> ({'place': 'temp7', 'type': 'NUMBER', 'va ...)

State  : 141
Stack  : statement statement statement VARIABLE ASSIGNMENT_OP expression . LexToken(SEMICOLON,';',12,144)
Action : Shift and goto state 190

State  : 190
Stack  : statement statement statement VARIABLE ASSIGNMENT_OP expression SEMICOLON . LexToken(PRINT,'print',13,146)
Action : Reduce rule [assignment -> VARIABLE ASSIGNMENT_OP expression SEMICOLON] with ['$x','=',<dict @ 0x7fb42426aa28>,';'] and goto state 36
Result : <dict @ 0x7fb424263c58> ({'endlist': [], 'beginlist': [], 'type': ...)

State  : 25
Stack  : statement statement statement assignment . LexToken(PRINT,'print',13,146)
Action : Reduce rule [empty -> <empty>] with [] and goto state 6
Result : <NoneType @ 0x920190> (None)

State  : 35
Stack  : statement statement statement assignment empty . LexToken(PRINT,'print',13,146)
Action : Reduce rule [Marker -> empty] with [None] and goto state 86
Result : <dict @ 0x7fb42426a050> ({'quad': 14})

State  : 76
Stack  : statement statement statement assignment Marker . LexToken(PRINT,'print',13,146)
Action : Reduce rule [statement -> assignment Marker] with [<dict @ 0x7fb424263c58>,{'quad': 14}] and goto state 7
Result : <dict @ 0x7fb42426a168> ({'endlist': [], 'beginlist': [], 'type': ...)

State  : 20
Stack  : statement statement statement statement . LexToken(PRINT,'print',13,146)
Action : Shift and goto state 8

State  : 8
Stack  : statement statement statement statement PRINT . LexToken(VARIABLE,'$x',13,152)
Action : Shift and goto state 54

State  : 54
Stack  : statement statement statement statement PRINT VARIABLE . LexToken(SEMICOLON,';',13,154)
Action : Reduce rule [term -> VARIABLE] with ['$x'] and goto state 62
Result : <dict @ 0x7fb42426a7f8> ({'type': 'NUMBER', 'place': '$x'})

State  : 55
Stack  : statement statement statement statement PRINT term . LexToken(SEMICOLON,';',13,154)
Action : Reduce rule [expression -> term] with [<dict @ 0x7fb42426a7f8>] and goto state 69
Result : <dict @ 0x7fb42426a7f8> ({'type': 'NUMBER', 'place': '$x'})

State  : 59
Stack  : statement statement statement statement PRINT expression . LexToken(SEMICOLON,';',13,154)
Action : Shift and goto state 107

State  : 107
Stack  : statement statement statement statement PRINT expression SEMICOLON . $end
Action : Reduce rule [printStatement -> PRINT expression SEMICOLON] with ['print',<dict @ 0x7fb42426a7f8>,';'] and goto state 34
Result : <dict @ 0x7fb42426aa28> ({'endlist': [], 'beginlist': [], 'type': ...)

State  : 21
Stack  : statement statement statement statement printStatement . $end
Action : Reduce rule [empty -> <empty>] with [] and goto state 6
Result : <NoneType @ 0x920190> (None)

State  : 35
Stack  : statement statement statement statement printStatement empty . $end
Action : Reduce rule [Marker -> empty] with [None] and goto state 86
Result : <dict @ 0x7fb424263a28> ({'quad': 15})

State  : 72
Stack  : statement statement statement statement printStatement Marker . $end
Action : Reduce rule [statement -> printStatement Marker] with [<dict @ 0x7fb42426aa28>,{'quad': 15}] and goto state 13
Result : <dict @ 0x7fb42426a050> ({'endlist': [], 'beginlist': [], 'type': ...)

State  : 20
Stack  : statement statement statement statement statement . $end
Action : Reduce rule [statements -> statement] with [<dict @ 0x7fb42426a050>] and goto state 5
Result : <dict @ 0x7fb42426a050> ({'endlist': [], 'beginlist': [], 'type': ...)

State  : 71
Stack  : statement statement statement statement statements . $end
Action : Reduce rule [statements -> statement statements] with [<dict @ 0x7fb42426a168>,<dict @ 0x7fb42426a050>] and goto state 4
Result : <dict @ 0x7fb424263c58> ({'beginlist': [], 'endlist': []})

State  : 71
Stack  : statement statement statement statements . $end
Action : Reduce rule [statements -> statement statements] with [<dict @ 0x7fb42426a6e0>,<dict @ 0x7fb424263c58>] and goto state 4
Result : <dict @ 0x7fb42426a398> ({'beginlist': [], 'endlist': []})

State  : 71
Stack  : statement statement statements . $end
Action : Reduce rule [statements -> statement statements] with [<dict @ 0x7fb424263d70>,<dict @ 0x7fb42426a398>] and goto state 4
Result : <dict @ 0x7fb4242635c8> ({'beginlist': [], 'endlist': []})

State  : 71
Stack  : statement statements . $end
Action : Reduce rule [statements -> statement statements] with [<dict @ 0x7fb424263910>,<dict @ 0x7fb4242635c8>] and goto state 4
Result : <dict @ 0x7fb4242637f8> ({'beginlist': [], 'endlist': []})

State  : 3
Stack  : statements . $end
Action : Reduce rule [start -> statements] with [<dict @ 0x7fb4242637f8>] and goto state 2
Result : <dict @ 0x7fb4242637f8> ({'beginlist': [], 'endlist': []})

State  : 17
Stack  : start . $end
Done   : Returning <dict @ 0x7fb4242637f8> ({'beginlist': [], 'endlist': []})
PLY: PARSE DEBUG END
