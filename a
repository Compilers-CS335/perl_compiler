PLY: PARSE DEBUG START

State  : 0
Stack  : . LexToken(BLOCK_BEGIN,'{',2,1)
Action : Shift and goto state 48

State  : 48
Stack  : BLOCK_BEGIN . LexToken(PRINT,'print',3,4)
Action : Shift and goto state 17

State  : 17
Stack  : BLOCK_BEGIN PRINT . LexToken(OPEN_PARANTHESIS,'(',3,10)
Action : Shift and goto state 77

State  : 77
Stack  : BLOCK_BEGIN PRINT OPEN_PARANTHESIS . LexToken(STRING,'\'2 is an even number/\\/\\\\\\" and then tab \\t newline \\n\'',3,11)
Action : Shift and goto state 52

State  : 52
Stack  : BLOCK_BEGIN PRINT OPEN_PARANTHESIS STRING . LexToken(CLOSE_PARANTHESIS,')',3,66)
Action : Reduce rule [string -> STRING] with [<str @ 0x7f4ae5812690>] and goto state 76
Result : <dict @ 0x7f4ae7034280> ({'type': 'STRING', 'value': '\'2 is an e ...)

State  : 49
Stack  : BLOCK_BEGIN PRINT OPEN_PARANTHESIS string . LexToken(CLOSE_PARANTHESIS,')',3,66)
Action : Reduce rule [term -> string] with [<dict @ 0x7f4ae7034280>] and goto state 84
Result : <dict @ 0x7f4ae7034280> ({'place': 'temp1', 'type': 'STRING', 'va ...)

State  : 13
Stack  : BLOCK_BEGIN PRINT OPEN_PARANTHESIS term . LexToken(CLOSE_PARANTHESIS,')',3,66)
Action : Reduce rule [expression -> term] with [<dict @ 0x7f4ae7034280>] and goto state 96
Result : <dict @ 0x7f4ae7034280> ({'place': 'temp1', 'type': 'STRING', 'va ...)

State  : 146
Stack  : BLOCK_BEGIN PRINT OPEN_PARANTHESIS expression . LexToken(CLOSE_PARANTHESIS,')',3,66)
Action : Shift and goto state 208

State  : 208
Stack  : BLOCK_BEGIN PRINT OPEN_PARANTHESIS expression CLOSE_PARANTHESIS . LexToken(SEMICOLON,';',3,67)
Action : Shift and goto state 234

State  : 234
Stack  : BLOCK_BEGIN PRINT OPEN_PARANTHESIS expression CLOSE_PARANTHESIS SEMICOLON . LexToken(BLOCK_ENDS,'}',4,69)
Action : Reduce rule [printStatement -> PRINT OPEN_PARANTHESIS expression CLOSE_PARANTHESIS SEMICOLON] with ['print','(',<dict @ 0x7f4ae7034280>,')',';'] and goto state 51
Result : <dict @ 0x7f4ae70344b0> ({'endlist': [], 'beginlist': [], 'type': ...)

State  : 20
Stack  : BLOCK_BEGIN printStatement . LexToken(BLOCK_ENDS,'}',4,69)
Action : Reduce rule [empty -> <empty>] with [] and goto state 6
Result : <NoneType @ 0x920190> (None)

State  : 60
Stack  : BLOCK_BEGIN printStatement empty . LexToken(BLOCK_ENDS,'}',4,69)
Action : Reduce rule [Marker -> empty] with [None] and goto state 113
Result : <dict @ 0x7f4ae7034168> ({'quad': 2})

State  : 80
Stack  : BLOCK_BEGIN printStatement Marker . LexToken(BLOCK_ENDS,'}',4,69)
Action : Reduce rule [statement -> printStatement Marker] with [<dict @ 0x7f4ae70344b0>,{'quad': 2}] and goto state 14
Result : <dict @ 0x7f4ae7034a28> ({'endlist': [], 'beginlist': [], 'type': ...)

State  : 37
Stack  : BLOCK_BEGIN statement . LexToken(BLOCK_ENDS,'}',4,69)
Action : Reduce rule [statements -> statement] with [<dict @ 0x7f4ae7034a28>] and goto state 5
Result : <dict @ 0x7f4ae7034a28> ({'endlist': [], 'beginlist': [], 'type': ...)

State  : 129
Stack  : BLOCK_BEGIN statements . LexToken(BLOCK_ENDS,'}',4,69)
Action : Shift and goto state 195

State  : 195
Stack  : BLOCK_BEGIN statements BLOCK_ENDS . $end
Action : Reduce rule [block -> BLOCK_BEGIN statements BLOCK_ENDS] with ['{',<dict @ 0x7f4ae7034a28>,'}'] and goto state 3
Result : <dict @ 0x7f4ae7034a28> ({'endlist': [], 'beginlist': [], 'type': ...)

State  : 24
Stack  : block . $end
Action : Reduce rule [start -> block] with [<dict @ 0x7f4ae7034a28>] and goto state 1
Result : <dict @ 0x7f4ae7034a28> ({'endlist': [], 'beginlist': [], 'type': ...)

State  : 35
Stack  : start . $end
Done   : Returning <dict @ 0x7f4ae7034a28> ({'endlist': [], 'beginlist': [], 'type': ...)
PLY: PARSE DEBUG END
