Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    FORMAT
    COMMENT
    TRANSLATION
    GOTO
    FOREACH
    ELSIF
    SUBSTITUTE
    SELECT
    FILE_HANDLING_OPTIONS
    COLON
    UNLESS
    UNTIL
    WHITESPACE
    USER_INPUT_OP
    QUESTION_MARK
    REDO
    WRITE
    MATCH
    DO
    SYSTEM_COMMAND
    CONTINUE

Grammar

Rule 0     S' -> start
Rule 1     start -> block
Rule 2     start -> statements
Rule 3     block -> BLOCK_BEGIN statements BLOCK_ENDS
Rule 4     statements -> statement statements
Rule 5     statements -> statement
Rule 6     empty -> <empty>
Rule 7     statement -> assignment
Rule 8     statement -> declaration
Rule 9     statement -> returnStatement
Rule 10    statement -> functionCall
Rule 11    statement -> whileStatement
Rule 12    statement -> forStatement
Rule 13    statement -> printStatement
Rule 14    statement -> functionStatement
Rule 15    statement -> lastStatement
Rule 16    statement -> nextStatement
Rule 17    statement -> ifthen
Rule 18    statement -> ifthenelse
Rule 19    statement -> useStatement
Rule 20    statement -> switchStatement
Rule 21    useStatement -> USE IDENTIFIER SEMICOLON
Rule 22    switchStatement -> SWITCH lefthandside BLOCK_BEGIN caselist BLOCK_ENDS
Rule 23    caselist -> CASE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block caselist
Rule 24    caselist -> ELSE block
Rule 25    caselist -> empty
Rule 26    ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
Rule 27    ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block
Rule 28    lastStatement -> LAST SEMICOLON
Rule 29    nextStatement -> NEXT SEMICOLON
Rule 30    functionStatement -> SUB IDENTIFIER block
Rule 31    printStatement -> PRINT OPEN_PARANTHESIS string CLOSE_PARANTHESIS SEMICOLON
Rule 32    printStatement -> PRINT string SEMICOLON
Rule 33    printStatement -> PRINT expression SEMICOLON
Rule 34    returnStatement -> RETURN expression SEMICOLON
Rule 35    assignment -> lefthandside assignmenttype expression SEMICOLON
Rule 36    assignmenttype -> ADV_ASSIGNMENT_OP
Rule 37    assignmenttype -> ASSIGNMENT_OP
Rule 38    lefthandside -> PRIVATE type decList
Rule 39    lefthandside -> PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
Rule 40    lefthandside -> LOCAL type decList
Rule 41    lefthandside -> LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
Rule 42    lefthandside -> OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
Rule 43    lefthandside -> type
Rule 44    declaration -> lefthandside SEMICOLON
Rule 45    decList -> COMMA type decList
Rule 46    decList -> empty
Rule 47    functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON
Rule 48    parameters -> expression COMMA parameters
Rule 49    parameters -> expression
Rule 50    parameters -> empty
Rule 51    whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
Rule 52    forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block
Rule 53    string -> STRING
Rule 54    string -> RES_STRING
Rule 55    number -> NUMBER
Rule 56    number -> SCI_NOT
Rule 57    number -> FLOAT
Rule 58    number -> HEXADECIMAL
Rule 59    number -> OCTAL
Rule 60    variable -> VARIABLE
Rule 61    variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
Rule 62    variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS
Rule 63    term -> number
Rule 64    term -> type
Rule 65    term -> variable
Rule 66    term -> string
Rule 67    term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
Rule 68    type -> ARRAY
Rule 69    type -> HASH
Rule 70    type -> variable
Rule 71    expression -> PLUS_OP expression
Rule 72    expression -> MINUS_OP expression
Rule 73    expression -> BIT_FLIP expression
Rule 74    expression -> NOT_OP expression
Rule 75    expression -> INCREMENT_OP expression
Rule 76    expression -> DECREMENT_OP expression
Rule 77    expression -> expression INCREMENT_OP
Rule 78    expression -> expression DECREMENT_OP
Rule 79    expression -> empty
Rule 80    expression -> term
Rule 81    expression -> expression OR_STR_OP expression
Rule 82    expression -> expression XOR_STR_OP expression
Rule 83    expression -> expression AND_STR_OP expression
Rule 84    expression -> expression NOT_STR_OP expression
Rule 85    expression -> expression COMMA expression
Rule 86    expression -> expression ASSOCIATE_OP expression
Rule 87    expression -> expression ADV_ASSIGNMENT_OP expression
Rule 88    expression -> expression ASSIGNMENT_OP expression
Rule 89    expression -> expression RANGE_OP expression
Rule 90    expression -> expression OR_OP expression
Rule 91    expression -> expression AND_OP expression
Rule 92    expression -> expression BIT_OR expression
Rule 93    expression -> expression BIT_XOR expression
Rule 94    expression -> expression BIT_AND expression
Rule 95    expression -> expression EQUALS_OP expression
Rule 96    expression -> expression NOT_EQUALS_OP expression
Rule 97    expression -> expression COMPARE_OP expression
Rule 98    expression -> expression GREATER_OP expression
Rule 99    expression -> expression LESS_OP expression
Rule 100   expression -> expression GREATER_EQUAL_OP expression
Rule 101   expression -> expression LESS_EQUAL_OP expression
Rule 102   expression -> expression BIT_RIGHT_SHIFT expression
Rule 103   expression -> expression BIT_LEFT_SHIFT expression
Rule 104   expression -> expression PLUS_OP expression
Rule 105   expression -> expression MINUS_OP expression
Rule 106   expression -> expression CONCATENATE expression
Rule 107   expression -> expression MULTIPLICATION_OP expression
Rule 108   expression -> expression DIVISION_OP expression
Rule 109   expression -> expression MODULUS_OP expression
Rule 110   expression -> expression REP_OP expression
Rule 111   expression -> expression SEARCH_MODIFY expression
Rule 112   expression -> expression SEARCH_MODIFY_NEG expression
Rule 113   expression -> expression EXPONENT_OP expression

Terminals, with rules where they appear

ADV_ASSIGNMENT_OP    : 36 87
AND_OP               : 91
AND_STR_OP           : 83
ARRAY                : 68
ASSIGNMENT_OP        : 37 88
ASSOCIATE_OP         : 86
BIT_AND              : 94
BIT_FLIP             : 73
BIT_LEFT_SHIFT       : 103
BIT_OR               : 92
BIT_RIGHT_SHIFT      : 102
BIT_XOR              : 93
BLOCK_BEGIN          : 3 22 62
BLOCK_ENDS           : 3 22 62
CASE                 : 23
CLOSE_BRACKET        : 61
CLOSE_PARANTHESIS    : 23 26 27 31 39 41 42 47 51 52 67
COLON                : 
COMMA                : 45 48 85
COMMENT              : 
COMPARE_OP           : 97
CONCATENATE          : 106
CONTINUE             : 
DECREMENT_OP         : 76 78
DIVISION_OP          : 108
DO                   : 
ELSE                 : 24 27
ELSIF                : 
EQUALS_OP            : 95
EXPONENT_OP          : 113
FILE_HANDLING_OPTIONS : 
FLOAT                : 57
FOR                  : 52
FOREACH              : 
FORMAT               : 
GOTO                 : 
GREATER_EQUAL_OP     : 100
GREATER_OP           : 98
HASH                 : 69
HEXADECIMAL          : 58
IDENTIFIER           : 21 30 47
IF                   : 26 27
INCREMENT_OP         : 75 77
LAST                 : 28
LESS_EQUAL_OP        : 101
LESS_OP              : 99
LOCAL                : 40 41
MATCH                : 
MINUS_OP             : 72 105
MODULUS_OP           : 109
MULTIPLICATION_OP    : 107
NEXT                 : 29
NOT_EQUALS_OP        : 96
NOT_OP               : 74
NOT_STR_OP           : 84
NUMBER               : 55 61
OCTAL                : 59
OPEN_BRACKET         : 61
OPEN_PARANTHESIS     : 23 26 27 31 39 41 42 47 51 52 67
OR_OP                : 90
OR_STR_OP            : 81
PLUS_OP              : 71 104
PRINT                : 31 32 33
PRIVATE              : 38 39
QUESTION_MARK        : 
RANGE_OP             : 89
REDO                 : 
REP_OP               : 110
RES_STRING           : 54
RETURN               : 34
SCI_NOT              : 56
SEARCH_MODIFY        : 111
SEARCH_MODIFY_NEG    : 112
SELECT               : 
SEMICOLON            : 21 28 29 31 32 33 34 35 44 47 52 52
STRING               : 53
SUB                  : 30
SUBSTITUTE           : 
SWITCH               : 22
SYSTEM_COMMAND       : 
TRANSLATION          : 
UNLESS               : 
UNTIL                : 
USE                  : 21
USER_INPUT_OP        : 
VARIABLE             : 60 61 62
WHILE                : 51
WHITESPACE           : 
WRITE                : 
XOR_STR_OP           : 82
error                : 

Nonterminals, with rules where they appear

assignment           : 7
assignmenttype       : 35
block                : 1 23 24 26 27 27 30 51 52
caselist             : 22 23
decList              : 38 39 40 41 42 45
declaration          : 8
empty                : 25 46 50 79
expression           : 23 26 27 33 34 35 48 49 51 52 52 52 67 71 72 73 74 75 76 77 78 81 81 82 82 83 83 84 84 85 85 86 86 87 87 88 88 89 89 90 90 91 91 92 92 93 93 94 94 95 95 96 96 97 97 98 98 99 99 100 100 101 101 102 102 103 103 104 104 105 105 106 106 107 107 108 108 109 109 110 110 111 111 112 112 113 113
forStatement         : 12
functionCall         : 10
functionStatement    : 14
ifthen               : 17
ifthenelse           : 18
lastStatement        : 15
lefthandside         : 22 35 44
nextStatement        : 16
number               : 63
parameters           : 47 48
printStatement       : 13
returnStatement      : 9
start                : 0
statement            : 4 5
statements           : 2 3 4
string               : 31 32 62 66
switchStatement      : 20
term                 : 80
type                 : 38 39 40 41 42 43 45 64
useStatement         : 19
variable             : 65 70
whileStatement       : 11

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . block
    (2) start -> . statements
    (3) block -> . BLOCK_BEGIN statements BLOCK_ENDS
    (4) statements -> . statement statements
    (5) statements -> . statement
    (7) statement -> . assignment
    (8) statement -> . declaration
    (9) statement -> . returnStatement
    (10) statement -> . functionCall
    (11) statement -> . whileStatement
    (12) statement -> . forStatement
    (13) statement -> . printStatement
    (14) statement -> . functionStatement
    (15) statement -> . lastStatement
    (16) statement -> . nextStatement
    (17) statement -> . ifthen
    (18) statement -> . ifthenelse
    (19) statement -> . useStatement
    (20) statement -> . switchStatement
    (35) assignment -> . lefthandside assignmenttype expression SEMICOLON
    (44) declaration -> . lefthandside SEMICOLON
    (34) returnStatement -> . RETURN expression SEMICOLON
    (47) functionCall -> . IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON
    (51) whileStatement -> . WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
    (52) forStatement -> . FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block
    (31) printStatement -> . PRINT OPEN_PARANTHESIS string CLOSE_PARANTHESIS SEMICOLON
    (32) printStatement -> . PRINT string SEMICOLON
    (33) printStatement -> . PRINT expression SEMICOLON
    (30) functionStatement -> . SUB IDENTIFIER block
    (28) lastStatement -> . LAST SEMICOLON
    (29) nextStatement -> . NEXT SEMICOLON
    (26) ifthen -> . IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
    (27) ifthenelse -> . IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block
    (21) useStatement -> . USE IDENTIFIER SEMICOLON
    (22) switchStatement -> . SWITCH lefthandside BLOCK_BEGIN caselist BLOCK_ENDS
    (38) lefthandside -> . PRIVATE type decList
    (39) lefthandside -> . PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (40) lefthandside -> . LOCAL type decList
    (41) lefthandside -> . LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (42) lefthandside -> . OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (43) lefthandside -> . type
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 7
    RETURN          shift and go to state 11
    IDENTIFIER      shift and go to state 23
    WHILE           shift and go to state 9
    FOR             shift and go to state 27
    PRINT           shift and go to state 10
    SUB             shift and go to state 32
    LAST            shift and go to state 13
    NEXT            shift and go to state 17
    IF              shift and go to state 38
    USE             shift and go to state 2
    SWITCH          shift and go to state 15
    PRIVATE         shift and go to state 16
    LOCAL           shift and go to state 36
    OPEN_PARANTHESIS shift and go to state 4
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8

    forStatement                   shift and go to state 1
    statements                     shift and go to state 3
    functionStatement              shift and go to state 5
    switchStatement                shift and go to state 6
    ifthen                         shift and go to state 12
    nextStatement                  shift and go to state 14
    start                          shift and go to state 18
    lastStatement                  shift and go to state 19
    useStatement                   shift and go to state 20
    statement                      shift and go to state 21
    printStatement                 shift and go to state 22
    type                           shift and go to state 24
    ifthenelse                     shift and go to state 26
    assignment                     shift and go to state 28
    whileStatement                 shift and go to state 29
    lefthandside                   shift and go to state 30
    functionCall                   shift and go to state 31
    declaration                    shift and go to state 33
    variable                       shift and go to state 34
    returnStatement                shift and go to state 35
    block                          shift and go to state 39

state 1

    (12) statement -> forStatement .

    RETURN          reduce using rule 12 (statement -> forStatement .)
    IDENTIFIER      reduce using rule 12 (statement -> forStatement .)
    WHILE           reduce using rule 12 (statement -> forStatement .)
    FOR             reduce using rule 12 (statement -> forStatement .)
    PRINT           reduce using rule 12 (statement -> forStatement .)
    SUB             reduce using rule 12 (statement -> forStatement .)
    LAST            reduce using rule 12 (statement -> forStatement .)
    NEXT            reduce using rule 12 (statement -> forStatement .)
    IF              reduce using rule 12 (statement -> forStatement .)
    USE             reduce using rule 12 (statement -> forStatement .)
    SWITCH          reduce using rule 12 (statement -> forStatement .)
    PRIVATE         reduce using rule 12 (statement -> forStatement .)
    LOCAL           reduce using rule 12 (statement -> forStatement .)
    OPEN_PARANTHESIS reduce using rule 12 (statement -> forStatement .)
    ARRAY           reduce using rule 12 (statement -> forStatement .)
    HASH            reduce using rule 12 (statement -> forStatement .)
    VARIABLE        reduce using rule 12 (statement -> forStatement .)
    $end            reduce using rule 12 (statement -> forStatement .)
    BLOCK_ENDS      reduce using rule 12 (statement -> forStatement .)


state 2

    (21) useStatement -> USE . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 40


state 3

    (2) start -> statements .

    $end            reduce using rule 2 (start -> statements .)


state 4

    (42) lefthandside -> OPEN_PARANTHESIS . type decList CLOSE_PARANTHESIS
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8

    variable                       shift and go to state 34
    type                           shift and go to state 41

state 5

    (14) statement -> functionStatement .

    RETURN          reduce using rule 14 (statement -> functionStatement .)
    IDENTIFIER      reduce using rule 14 (statement -> functionStatement .)
    WHILE           reduce using rule 14 (statement -> functionStatement .)
    FOR             reduce using rule 14 (statement -> functionStatement .)
    PRINT           reduce using rule 14 (statement -> functionStatement .)
    SUB             reduce using rule 14 (statement -> functionStatement .)
    LAST            reduce using rule 14 (statement -> functionStatement .)
    NEXT            reduce using rule 14 (statement -> functionStatement .)
    IF              reduce using rule 14 (statement -> functionStatement .)
    USE             reduce using rule 14 (statement -> functionStatement .)
    SWITCH          reduce using rule 14 (statement -> functionStatement .)
    PRIVATE         reduce using rule 14 (statement -> functionStatement .)
    LOCAL           reduce using rule 14 (statement -> functionStatement .)
    OPEN_PARANTHESIS reduce using rule 14 (statement -> functionStatement .)
    ARRAY           reduce using rule 14 (statement -> functionStatement .)
    HASH            reduce using rule 14 (statement -> functionStatement .)
    VARIABLE        reduce using rule 14 (statement -> functionStatement .)
    $end            reduce using rule 14 (statement -> functionStatement .)
    BLOCK_ENDS      reduce using rule 14 (statement -> functionStatement .)


state 6

    (20) statement -> switchStatement .

    RETURN          reduce using rule 20 (statement -> switchStatement .)
    IDENTIFIER      reduce using rule 20 (statement -> switchStatement .)
    WHILE           reduce using rule 20 (statement -> switchStatement .)
    FOR             reduce using rule 20 (statement -> switchStatement .)
    PRINT           reduce using rule 20 (statement -> switchStatement .)
    SUB             reduce using rule 20 (statement -> switchStatement .)
    LAST            reduce using rule 20 (statement -> switchStatement .)
    NEXT            reduce using rule 20 (statement -> switchStatement .)
    IF              reduce using rule 20 (statement -> switchStatement .)
    USE             reduce using rule 20 (statement -> switchStatement .)
    SWITCH          reduce using rule 20 (statement -> switchStatement .)
    PRIVATE         reduce using rule 20 (statement -> switchStatement .)
    LOCAL           reduce using rule 20 (statement -> switchStatement .)
    OPEN_PARANTHESIS reduce using rule 20 (statement -> switchStatement .)
    ARRAY           reduce using rule 20 (statement -> switchStatement .)
    HASH            reduce using rule 20 (statement -> switchStatement .)
    VARIABLE        reduce using rule 20 (statement -> switchStatement .)
    $end            reduce using rule 20 (statement -> switchStatement .)
    BLOCK_ENDS      reduce using rule 20 (statement -> switchStatement .)


state 7

    (3) block -> BLOCK_BEGIN . statements BLOCK_ENDS
    (4) statements -> . statement statements
    (5) statements -> . statement
    (7) statement -> . assignment
    (8) statement -> . declaration
    (9) statement -> . returnStatement
    (10) statement -> . functionCall
    (11) statement -> . whileStatement
    (12) statement -> . forStatement
    (13) statement -> . printStatement
    (14) statement -> . functionStatement
    (15) statement -> . lastStatement
    (16) statement -> . nextStatement
    (17) statement -> . ifthen
    (18) statement -> . ifthenelse
    (19) statement -> . useStatement
    (20) statement -> . switchStatement
    (35) assignment -> . lefthandside assignmenttype expression SEMICOLON
    (44) declaration -> . lefthandside SEMICOLON
    (34) returnStatement -> . RETURN expression SEMICOLON
    (47) functionCall -> . IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON
    (51) whileStatement -> . WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
    (52) forStatement -> . FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block
    (31) printStatement -> . PRINT OPEN_PARANTHESIS string CLOSE_PARANTHESIS SEMICOLON
    (32) printStatement -> . PRINT string SEMICOLON
    (33) printStatement -> . PRINT expression SEMICOLON
    (30) functionStatement -> . SUB IDENTIFIER block
    (28) lastStatement -> . LAST SEMICOLON
    (29) nextStatement -> . NEXT SEMICOLON
    (26) ifthen -> . IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
    (27) ifthenelse -> . IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block
    (21) useStatement -> . USE IDENTIFIER SEMICOLON
    (22) switchStatement -> . SWITCH lefthandside BLOCK_BEGIN caselist BLOCK_ENDS
    (38) lefthandside -> . PRIVATE type decList
    (39) lefthandside -> . PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (40) lefthandside -> . LOCAL type decList
    (41) lefthandside -> . LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (42) lefthandside -> . OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (43) lefthandside -> . type
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    RETURN          shift and go to state 11
    IDENTIFIER      shift and go to state 23
    WHILE           shift and go to state 9
    FOR             shift and go to state 27
    PRINT           shift and go to state 10
    SUB             shift and go to state 32
    LAST            shift and go to state 13
    NEXT            shift and go to state 17
    IF              shift and go to state 38
    USE             shift and go to state 2
    SWITCH          shift and go to state 15
    PRIVATE         shift and go to state 16
    LOCAL           shift and go to state 36
    OPEN_PARANTHESIS shift and go to state 4
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8

    forStatement                   shift and go to state 1
    statements                     shift and go to state 42
    functionStatement              shift and go to state 5
    switchStatement                shift and go to state 6
    ifthen                         shift and go to state 12
    nextStatement                  shift and go to state 14
    lastStatement                  shift and go to state 19
    useStatement                   shift and go to state 20
    statement                      shift and go to state 21
    printStatement                 shift and go to state 22
    type                           shift and go to state 24
    ifthenelse                     shift and go to state 26
    assignment                     shift and go to state 28
    whileStatement                 shift and go to state 29
    lefthandside                   shift and go to state 30
    functionCall                   shift and go to state 31
    declaration                    shift and go to state 33
    variable                       shift and go to state 34
    returnStatement                shift and go to state 35

state 8

    (60) variable -> VARIABLE .
    (61) variable -> VARIABLE . OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> VARIABLE . BLOCK_BEGIN string BLOCK_ENDS

  ! shift/reduce conflict for BLOCK_BEGIN resolved as shift
    INCREMENT_OP    reduce using rule 60 (variable -> VARIABLE .)
    DECREMENT_OP    reduce using rule 60 (variable -> VARIABLE .)
    OR_STR_OP       reduce using rule 60 (variable -> VARIABLE .)
    XOR_STR_OP      reduce using rule 60 (variable -> VARIABLE .)
    AND_STR_OP      reduce using rule 60 (variable -> VARIABLE .)
    NOT_STR_OP      reduce using rule 60 (variable -> VARIABLE .)
    COMMA           reduce using rule 60 (variable -> VARIABLE .)
    ASSOCIATE_OP    reduce using rule 60 (variable -> VARIABLE .)
    ADV_ASSIGNMENT_OP reduce using rule 60 (variable -> VARIABLE .)
    ASSIGNMENT_OP   reduce using rule 60 (variable -> VARIABLE .)
    RANGE_OP        reduce using rule 60 (variable -> VARIABLE .)
    OR_OP           reduce using rule 60 (variable -> VARIABLE .)
    AND_OP          reduce using rule 60 (variable -> VARIABLE .)
    BIT_OR          reduce using rule 60 (variable -> VARIABLE .)
    BIT_XOR         reduce using rule 60 (variable -> VARIABLE .)
    BIT_AND         reduce using rule 60 (variable -> VARIABLE .)
    EQUALS_OP       reduce using rule 60 (variable -> VARIABLE .)
    NOT_EQUALS_OP   reduce using rule 60 (variable -> VARIABLE .)
    COMPARE_OP      reduce using rule 60 (variable -> VARIABLE .)
    GREATER_OP      reduce using rule 60 (variable -> VARIABLE .)
    LESS_OP         reduce using rule 60 (variable -> VARIABLE .)
    GREATER_EQUAL_OP reduce using rule 60 (variable -> VARIABLE .)
    LESS_EQUAL_OP   reduce using rule 60 (variable -> VARIABLE .)
    BIT_RIGHT_SHIFT reduce using rule 60 (variable -> VARIABLE .)
    BIT_LEFT_SHIFT  reduce using rule 60 (variable -> VARIABLE .)
    PLUS_OP         reduce using rule 60 (variable -> VARIABLE .)
    MINUS_OP        reduce using rule 60 (variable -> VARIABLE .)
    CONCATENATE     reduce using rule 60 (variable -> VARIABLE .)
    MULTIPLICATION_OP reduce using rule 60 (variable -> VARIABLE .)
    DIVISION_OP     reduce using rule 60 (variable -> VARIABLE .)
    MODULUS_OP      reduce using rule 60 (variable -> VARIABLE .)
    REP_OP          reduce using rule 60 (variable -> VARIABLE .)
    SEARCH_MODIFY   reduce using rule 60 (variable -> VARIABLE .)
    SEARCH_MODIFY_NEG reduce using rule 60 (variable -> VARIABLE .)
    EXPONENT_OP     reduce using rule 60 (variable -> VARIABLE .)
    SEMICOLON       reduce using rule 60 (variable -> VARIABLE .)
    CLOSE_PARANTHESIS reduce using rule 60 (variable -> VARIABLE .)
    OPEN_BRACKET    shift and go to state 43
    BLOCK_BEGIN     shift and go to state 44

  ! BLOCK_BEGIN     [ reduce using rule 60 (variable -> VARIABLE .) ]


state 9

    (51) whileStatement -> WHILE . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block

    OPEN_PARANTHESIS shift and go to state 45


state 10

    (31) printStatement -> PRINT . OPEN_PARANTHESIS string CLOSE_PARANTHESIS SEMICOLON
    (32) printStatement -> PRINT . string SEMICOLON
    (33) printStatement -> PRINT . expression SEMICOLON
    (53) string -> . STRING
    (54) string -> . RES_STRING
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    OPEN_PARANTHESIS shift and go to state 46
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52
    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    SEMICOLON       reduce using rule 6 (empty -> .)
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 60
    expression                     shift and go to state 66
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 11

    (34) returnStatement -> RETURN . expression SEMICOLON
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    SEMICOLON       reduce using rule 6 (empty -> .)
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 69
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 12

    (17) statement -> ifthen .

    RETURN          reduce using rule 17 (statement -> ifthen .)
    IDENTIFIER      reduce using rule 17 (statement -> ifthen .)
    WHILE           reduce using rule 17 (statement -> ifthen .)
    FOR             reduce using rule 17 (statement -> ifthen .)
    PRINT           reduce using rule 17 (statement -> ifthen .)
    SUB             reduce using rule 17 (statement -> ifthen .)
    LAST            reduce using rule 17 (statement -> ifthen .)
    NEXT            reduce using rule 17 (statement -> ifthen .)
    IF              reduce using rule 17 (statement -> ifthen .)
    USE             reduce using rule 17 (statement -> ifthen .)
    SWITCH          reduce using rule 17 (statement -> ifthen .)
    PRIVATE         reduce using rule 17 (statement -> ifthen .)
    LOCAL           reduce using rule 17 (statement -> ifthen .)
    OPEN_PARANTHESIS reduce using rule 17 (statement -> ifthen .)
    ARRAY           reduce using rule 17 (statement -> ifthen .)
    HASH            reduce using rule 17 (statement -> ifthen .)
    VARIABLE        reduce using rule 17 (statement -> ifthen .)
    $end            reduce using rule 17 (statement -> ifthen .)
    BLOCK_ENDS      reduce using rule 17 (statement -> ifthen .)


state 13

    (28) lastStatement -> LAST . SEMICOLON

    SEMICOLON       shift and go to state 70


state 14

    (16) statement -> nextStatement .

    RETURN          reduce using rule 16 (statement -> nextStatement .)
    IDENTIFIER      reduce using rule 16 (statement -> nextStatement .)
    WHILE           reduce using rule 16 (statement -> nextStatement .)
    FOR             reduce using rule 16 (statement -> nextStatement .)
    PRINT           reduce using rule 16 (statement -> nextStatement .)
    SUB             reduce using rule 16 (statement -> nextStatement .)
    LAST            reduce using rule 16 (statement -> nextStatement .)
    NEXT            reduce using rule 16 (statement -> nextStatement .)
    IF              reduce using rule 16 (statement -> nextStatement .)
    USE             reduce using rule 16 (statement -> nextStatement .)
    SWITCH          reduce using rule 16 (statement -> nextStatement .)
    PRIVATE         reduce using rule 16 (statement -> nextStatement .)
    LOCAL           reduce using rule 16 (statement -> nextStatement .)
    OPEN_PARANTHESIS reduce using rule 16 (statement -> nextStatement .)
    ARRAY           reduce using rule 16 (statement -> nextStatement .)
    HASH            reduce using rule 16 (statement -> nextStatement .)
    VARIABLE        reduce using rule 16 (statement -> nextStatement .)
    $end            reduce using rule 16 (statement -> nextStatement .)
    BLOCK_ENDS      reduce using rule 16 (statement -> nextStatement .)


state 15

    (22) switchStatement -> SWITCH . lefthandside BLOCK_BEGIN caselist BLOCK_ENDS
    (38) lefthandside -> . PRIVATE type decList
    (39) lefthandside -> . PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (40) lefthandside -> . LOCAL type decList
    (41) lefthandside -> . LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (42) lefthandside -> . OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (43) lefthandside -> . type
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    PRIVATE         shift and go to state 16
    LOCAL           shift and go to state 36
    OPEN_PARANTHESIS shift and go to state 4
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8

    lefthandside                   shift and go to state 71
    variable                       shift and go to state 34
    type                           shift and go to state 24

state 16

    (38) lefthandside -> PRIVATE . type decList
    (39) lefthandside -> PRIVATE . OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    OPEN_PARANTHESIS shift and go to state 72
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8

    variable                       shift and go to state 34
    type                           shift and go to state 73

state 17

    (29) nextStatement -> NEXT . SEMICOLON

    SEMICOLON       shift and go to state 74


state 18

    (0) S' -> start .



state 19

    (15) statement -> lastStatement .

    RETURN          reduce using rule 15 (statement -> lastStatement .)
    IDENTIFIER      reduce using rule 15 (statement -> lastStatement .)
    WHILE           reduce using rule 15 (statement -> lastStatement .)
    FOR             reduce using rule 15 (statement -> lastStatement .)
    PRINT           reduce using rule 15 (statement -> lastStatement .)
    SUB             reduce using rule 15 (statement -> lastStatement .)
    LAST            reduce using rule 15 (statement -> lastStatement .)
    NEXT            reduce using rule 15 (statement -> lastStatement .)
    IF              reduce using rule 15 (statement -> lastStatement .)
    USE             reduce using rule 15 (statement -> lastStatement .)
    SWITCH          reduce using rule 15 (statement -> lastStatement .)
    PRIVATE         reduce using rule 15 (statement -> lastStatement .)
    LOCAL           reduce using rule 15 (statement -> lastStatement .)
    OPEN_PARANTHESIS reduce using rule 15 (statement -> lastStatement .)
    ARRAY           reduce using rule 15 (statement -> lastStatement .)
    HASH            reduce using rule 15 (statement -> lastStatement .)
    VARIABLE        reduce using rule 15 (statement -> lastStatement .)
    $end            reduce using rule 15 (statement -> lastStatement .)
    BLOCK_ENDS      reduce using rule 15 (statement -> lastStatement .)


state 20

    (19) statement -> useStatement .

    RETURN          reduce using rule 19 (statement -> useStatement .)
    IDENTIFIER      reduce using rule 19 (statement -> useStatement .)
    WHILE           reduce using rule 19 (statement -> useStatement .)
    FOR             reduce using rule 19 (statement -> useStatement .)
    PRINT           reduce using rule 19 (statement -> useStatement .)
    SUB             reduce using rule 19 (statement -> useStatement .)
    LAST            reduce using rule 19 (statement -> useStatement .)
    NEXT            reduce using rule 19 (statement -> useStatement .)
    IF              reduce using rule 19 (statement -> useStatement .)
    USE             reduce using rule 19 (statement -> useStatement .)
    SWITCH          reduce using rule 19 (statement -> useStatement .)
    PRIVATE         reduce using rule 19 (statement -> useStatement .)
    LOCAL           reduce using rule 19 (statement -> useStatement .)
    OPEN_PARANTHESIS reduce using rule 19 (statement -> useStatement .)
    ARRAY           reduce using rule 19 (statement -> useStatement .)
    HASH            reduce using rule 19 (statement -> useStatement .)
    VARIABLE        reduce using rule 19 (statement -> useStatement .)
    $end            reduce using rule 19 (statement -> useStatement .)
    BLOCK_ENDS      reduce using rule 19 (statement -> useStatement .)


state 21

    (4) statements -> statement . statements
    (5) statements -> statement .
    (4) statements -> . statement statements
    (5) statements -> . statement
    (7) statement -> . assignment
    (8) statement -> . declaration
    (9) statement -> . returnStatement
    (10) statement -> . functionCall
    (11) statement -> . whileStatement
    (12) statement -> . forStatement
    (13) statement -> . printStatement
    (14) statement -> . functionStatement
    (15) statement -> . lastStatement
    (16) statement -> . nextStatement
    (17) statement -> . ifthen
    (18) statement -> . ifthenelse
    (19) statement -> . useStatement
    (20) statement -> . switchStatement
    (35) assignment -> . lefthandside assignmenttype expression SEMICOLON
    (44) declaration -> . lefthandside SEMICOLON
    (34) returnStatement -> . RETURN expression SEMICOLON
    (47) functionCall -> . IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON
    (51) whileStatement -> . WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
    (52) forStatement -> . FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block
    (31) printStatement -> . PRINT OPEN_PARANTHESIS string CLOSE_PARANTHESIS SEMICOLON
    (32) printStatement -> . PRINT string SEMICOLON
    (33) printStatement -> . PRINT expression SEMICOLON
    (30) functionStatement -> . SUB IDENTIFIER block
    (28) lastStatement -> . LAST SEMICOLON
    (29) nextStatement -> . NEXT SEMICOLON
    (26) ifthen -> . IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
    (27) ifthenelse -> . IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block
    (21) useStatement -> . USE IDENTIFIER SEMICOLON
    (22) switchStatement -> . SWITCH lefthandside BLOCK_BEGIN caselist BLOCK_ENDS
    (38) lefthandside -> . PRIVATE type decList
    (39) lefthandside -> . PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (40) lefthandside -> . LOCAL type decList
    (41) lefthandside -> . LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (42) lefthandside -> . OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (43) lefthandside -> . type
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    BLOCK_ENDS      reduce using rule 5 (statements -> statement .)
    $end            reduce using rule 5 (statements -> statement .)
    RETURN          shift and go to state 11
    IDENTIFIER      shift and go to state 23
    WHILE           shift and go to state 9
    FOR             shift and go to state 27
    PRINT           shift and go to state 10
    SUB             shift and go to state 32
    LAST            shift and go to state 13
    NEXT            shift and go to state 17
    IF              shift and go to state 38
    USE             shift and go to state 2
    SWITCH          shift and go to state 15
    PRIVATE         shift and go to state 16
    LOCAL           shift and go to state 36
    OPEN_PARANTHESIS shift and go to state 4
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8

    forStatement                   shift and go to state 1
    statements                     shift and go to state 75
    functionStatement              shift and go to state 5
    switchStatement                shift and go to state 6
    ifthen                         shift and go to state 12
    nextStatement                  shift and go to state 14
    lastStatement                  shift and go to state 19
    useStatement                   shift and go to state 20
    statement                      shift and go to state 21
    printStatement                 shift and go to state 22
    type                           shift and go to state 24
    ifthenelse                     shift and go to state 26
    assignment                     shift and go to state 28
    whileStatement                 shift and go to state 29
    lefthandside                   shift and go to state 30
    functionCall                   shift and go to state 31
    declaration                    shift and go to state 33
    variable                       shift and go to state 34
    returnStatement                shift and go to state 35

state 22

    (13) statement -> printStatement .

    RETURN          reduce using rule 13 (statement -> printStatement .)
    IDENTIFIER      reduce using rule 13 (statement -> printStatement .)
    WHILE           reduce using rule 13 (statement -> printStatement .)
    FOR             reduce using rule 13 (statement -> printStatement .)
    PRINT           reduce using rule 13 (statement -> printStatement .)
    SUB             reduce using rule 13 (statement -> printStatement .)
    LAST            reduce using rule 13 (statement -> printStatement .)
    NEXT            reduce using rule 13 (statement -> printStatement .)
    IF              reduce using rule 13 (statement -> printStatement .)
    USE             reduce using rule 13 (statement -> printStatement .)
    SWITCH          reduce using rule 13 (statement -> printStatement .)
    PRIVATE         reduce using rule 13 (statement -> printStatement .)
    LOCAL           reduce using rule 13 (statement -> printStatement .)
    OPEN_PARANTHESIS reduce using rule 13 (statement -> printStatement .)
    ARRAY           reduce using rule 13 (statement -> printStatement .)
    HASH            reduce using rule 13 (statement -> printStatement .)
    VARIABLE        reduce using rule 13 (statement -> printStatement .)
    $end            reduce using rule 13 (statement -> printStatement .)
    BLOCK_ENDS      reduce using rule 13 (statement -> printStatement .)


state 23

    (47) functionCall -> IDENTIFIER . OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON

    OPEN_PARANTHESIS shift and go to state 76


state 24

    (43) lefthandside -> type .

    SEMICOLON       reduce using rule 43 (lefthandside -> type .)
    ADV_ASSIGNMENT_OP reduce using rule 43 (lefthandside -> type .)
    ASSIGNMENT_OP   reduce using rule 43 (lefthandside -> type .)
    BLOCK_BEGIN     reduce using rule 43 (lefthandside -> type .)


state 25

    (69) type -> HASH .

    COMMA           reduce using rule 69 (type -> HASH .)
    CLOSE_PARANTHESIS reduce using rule 69 (type -> HASH .)
    INCREMENT_OP    reduce using rule 69 (type -> HASH .)
    DECREMENT_OP    reduce using rule 69 (type -> HASH .)
    OR_STR_OP       reduce using rule 69 (type -> HASH .)
    XOR_STR_OP      reduce using rule 69 (type -> HASH .)
    AND_STR_OP      reduce using rule 69 (type -> HASH .)
    NOT_STR_OP      reduce using rule 69 (type -> HASH .)
    ASSOCIATE_OP    reduce using rule 69 (type -> HASH .)
    ADV_ASSIGNMENT_OP reduce using rule 69 (type -> HASH .)
    ASSIGNMENT_OP   reduce using rule 69 (type -> HASH .)
    RANGE_OP        reduce using rule 69 (type -> HASH .)
    OR_OP           reduce using rule 69 (type -> HASH .)
    AND_OP          reduce using rule 69 (type -> HASH .)
    BIT_OR          reduce using rule 69 (type -> HASH .)
    BIT_XOR         reduce using rule 69 (type -> HASH .)
    BIT_AND         reduce using rule 69 (type -> HASH .)
    EQUALS_OP       reduce using rule 69 (type -> HASH .)
    NOT_EQUALS_OP   reduce using rule 69 (type -> HASH .)
    COMPARE_OP      reduce using rule 69 (type -> HASH .)
    GREATER_OP      reduce using rule 69 (type -> HASH .)
    LESS_OP         reduce using rule 69 (type -> HASH .)
    GREATER_EQUAL_OP reduce using rule 69 (type -> HASH .)
    LESS_EQUAL_OP   reduce using rule 69 (type -> HASH .)
    BIT_RIGHT_SHIFT reduce using rule 69 (type -> HASH .)
    BIT_LEFT_SHIFT  reduce using rule 69 (type -> HASH .)
    PLUS_OP         reduce using rule 69 (type -> HASH .)
    MINUS_OP        reduce using rule 69 (type -> HASH .)
    CONCATENATE     reduce using rule 69 (type -> HASH .)
    MULTIPLICATION_OP reduce using rule 69 (type -> HASH .)
    DIVISION_OP     reduce using rule 69 (type -> HASH .)
    MODULUS_OP      reduce using rule 69 (type -> HASH .)
    REP_OP          reduce using rule 69 (type -> HASH .)
    SEARCH_MODIFY   reduce using rule 69 (type -> HASH .)
    SEARCH_MODIFY_NEG reduce using rule 69 (type -> HASH .)
    EXPONENT_OP     reduce using rule 69 (type -> HASH .)
    SEMICOLON       reduce using rule 69 (type -> HASH .)
    BLOCK_BEGIN     reduce using rule 69 (type -> HASH .)


state 26

    (18) statement -> ifthenelse .

    RETURN          reduce using rule 18 (statement -> ifthenelse .)
    IDENTIFIER      reduce using rule 18 (statement -> ifthenelse .)
    WHILE           reduce using rule 18 (statement -> ifthenelse .)
    FOR             reduce using rule 18 (statement -> ifthenelse .)
    PRINT           reduce using rule 18 (statement -> ifthenelse .)
    SUB             reduce using rule 18 (statement -> ifthenelse .)
    LAST            reduce using rule 18 (statement -> ifthenelse .)
    NEXT            reduce using rule 18 (statement -> ifthenelse .)
    IF              reduce using rule 18 (statement -> ifthenelse .)
    USE             reduce using rule 18 (statement -> ifthenelse .)
    SWITCH          reduce using rule 18 (statement -> ifthenelse .)
    PRIVATE         reduce using rule 18 (statement -> ifthenelse .)
    LOCAL           reduce using rule 18 (statement -> ifthenelse .)
    OPEN_PARANTHESIS reduce using rule 18 (statement -> ifthenelse .)
    ARRAY           reduce using rule 18 (statement -> ifthenelse .)
    HASH            reduce using rule 18 (statement -> ifthenelse .)
    VARIABLE        reduce using rule 18 (statement -> ifthenelse .)
    $end            reduce using rule 18 (statement -> ifthenelse .)
    BLOCK_ENDS      reduce using rule 18 (statement -> ifthenelse .)


state 27

    (52) forStatement -> FOR . OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block

    OPEN_PARANTHESIS shift and go to state 77


state 28

    (7) statement -> assignment .

    RETURN          reduce using rule 7 (statement -> assignment .)
    IDENTIFIER      reduce using rule 7 (statement -> assignment .)
    WHILE           reduce using rule 7 (statement -> assignment .)
    FOR             reduce using rule 7 (statement -> assignment .)
    PRINT           reduce using rule 7 (statement -> assignment .)
    SUB             reduce using rule 7 (statement -> assignment .)
    LAST            reduce using rule 7 (statement -> assignment .)
    NEXT            reduce using rule 7 (statement -> assignment .)
    IF              reduce using rule 7 (statement -> assignment .)
    USE             reduce using rule 7 (statement -> assignment .)
    SWITCH          reduce using rule 7 (statement -> assignment .)
    PRIVATE         reduce using rule 7 (statement -> assignment .)
    LOCAL           reduce using rule 7 (statement -> assignment .)
    OPEN_PARANTHESIS reduce using rule 7 (statement -> assignment .)
    ARRAY           reduce using rule 7 (statement -> assignment .)
    HASH            reduce using rule 7 (statement -> assignment .)
    VARIABLE        reduce using rule 7 (statement -> assignment .)
    $end            reduce using rule 7 (statement -> assignment .)
    BLOCK_ENDS      reduce using rule 7 (statement -> assignment .)


state 29

    (11) statement -> whileStatement .

    RETURN          reduce using rule 11 (statement -> whileStatement .)
    IDENTIFIER      reduce using rule 11 (statement -> whileStatement .)
    WHILE           reduce using rule 11 (statement -> whileStatement .)
    FOR             reduce using rule 11 (statement -> whileStatement .)
    PRINT           reduce using rule 11 (statement -> whileStatement .)
    SUB             reduce using rule 11 (statement -> whileStatement .)
    LAST            reduce using rule 11 (statement -> whileStatement .)
    NEXT            reduce using rule 11 (statement -> whileStatement .)
    IF              reduce using rule 11 (statement -> whileStatement .)
    USE             reduce using rule 11 (statement -> whileStatement .)
    SWITCH          reduce using rule 11 (statement -> whileStatement .)
    PRIVATE         reduce using rule 11 (statement -> whileStatement .)
    LOCAL           reduce using rule 11 (statement -> whileStatement .)
    OPEN_PARANTHESIS reduce using rule 11 (statement -> whileStatement .)
    ARRAY           reduce using rule 11 (statement -> whileStatement .)
    HASH            reduce using rule 11 (statement -> whileStatement .)
    VARIABLE        reduce using rule 11 (statement -> whileStatement .)
    $end            reduce using rule 11 (statement -> whileStatement .)
    BLOCK_ENDS      reduce using rule 11 (statement -> whileStatement .)


state 30

    (35) assignment -> lefthandside . assignmenttype expression SEMICOLON
    (44) declaration -> lefthandside . SEMICOLON
    (36) assignmenttype -> . ADV_ASSIGNMENT_OP
    (37) assignmenttype -> . ASSIGNMENT_OP

    SEMICOLON       shift and go to state 79
    ADV_ASSIGNMENT_OP shift and go to state 80
    ASSIGNMENT_OP   shift and go to state 81

    assignmenttype                 shift and go to state 78

state 31

    (10) statement -> functionCall .

    RETURN          reduce using rule 10 (statement -> functionCall .)
    IDENTIFIER      reduce using rule 10 (statement -> functionCall .)
    WHILE           reduce using rule 10 (statement -> functionCall .)
    FOR             reduce using rule 10 (statement -> functionCall .)
    PRINT           reduce using rule 10 (statement -> functionCall .)
    SUB             reduce using rule 10 (statement -> functionCall .)
    LAST            reduce using rule 10 (statement -> functionCall .)
    NEXT            reduce using rule 10 (statement -> functionCall .)
    IF              reduce using rule 10 (statement -> functionCall .)
    USE             reduce using rule 10 (statement -> functionCall .)
    SWITCH          reduce using rule 10 (statement -> functionCall .)
    PRIVATE         reduce using rule 10 (statement -> functionCall .)
    LOCAL           reduce using rule 10 (statement -> functionCall .)
    OPEN_PARANTHESIS reduce using rule 10 (statement -> functionCall .)
    ARRAY           reduce using rule 10 (statement -> functionCall .)
    HASH            reduce using rule 10 (statement -> functionCall .)
    VARIABLE        reduce using rule 10 (statement -> functionCall .)
    $end            reduce using rule 10 (statement -> functionCall .)
    BLOCK_ENDS      reduce using rule 10 (statement -> functionCall .)


state 32

    (30) functionStatement -> SUB . IDENTIFIER block

    IDENTIFIER      shift and go to state 82


state 33

    (8) statement -> declaration .

    RETURN          reduce using rule 8 (statement -> declaration .)
    IDENTIFIER      reduce using rule 8 (statement -> declaration .)
    WHILE           reduce using rule 8 (statement -> declaration .)
    FOR             reduce using rule 8 (statement -> declaration .)
    PRINT           reduce using rule 8 (statement -> declaration .)
    SUB             reduce using rule 8 (statement -> declaration .)
    LAST            reduce using rule 8 (statement -> declaration .)
    NEXT            reduce using rule 8 (statement -> declaration .)
    IF              reduce using rule 8 (statement -> declaration .)
    USE             reduce using rule 8 (statement -> declaration .)
    SWITCH          reduce using rule 8 (statement -> declaration .)
    PRIVATE         reduce using rule 8 (statement -> declaration .)
    LOCAL           reduce using rule 8 (statement -> declaration .)
    OPEN_PARANTHESIS reduce using rule 8 (statement -> declaration .)
    ARRAY           reduce using rule 8 (statement -> declaration .)
    HASH            reduce using rule 8 (statement -> declaration .)
    VARIABLE        reduce using rule 8 (statement -> declaration .)
    $end            reduce using rule 8 (statement -> declaration .)
    BLOCK_ENDS      reduce using rule 8 (statement -> declaration .)


state 34

    (70) type -> variable .

    COMMA           reduce using rule 70 (type -> variable .)
    CLOSE_PARANTHESIS reduce using rule 70 (type -> variable .)
    SEMICOLON       reduce using rule 70 (type -> variable .)
    ADV_ASSIGNMENT_OP reduce using rule 70 (type -> variable .)
    ASSIGNMENT_OP   reduce using rule 70 (type -> variable .)
    BLOCK_BEGIN     reduce using rule 70 (type -> variable .)


state 35

    (9) statement -> returnStatement .

    RETURN          reduce using rule 9 (statement -> returnStatement .)
    IDENTIFIER      reduce using rule 9 (statement -> returnStatement .)
    WHILE           reduce using rule 9 (statement -> returnStatement .)
    FOR             reduce using rule 9 (statement -> returnStatement .)
    PRINT           reduce using rule 9 (statement -> returnStatement .)
    SUB             reduce using rule 9 (statement -> returnStatement .)
    LAST            reduce using rule 9 (statement -> returnStatement .)
    NEXT            reduce using rule 9 (statement -> returnStatement .)
    IF              reduce using rule 9 (statement -> returnStatement .)
    USE             reduce using rule 9 (statement -> returnStatement .)
    SWITCH          reduce using rule 9 (statement -> returnStatement .)
    PRIVATE         reduce using rule 9 (statement -> returnStatement .)
    LOCAL           reduce using rule 9 (statement -> returnStatement .)
    OPEN_PARANTHESIS reduce using rule 9 (statement -> returnStatement .)
    ARRAY           reduce using rule 9 (statement -> returnStatement .)
    HASH            reduce using rule 9 (statement -> returnStatement .)
    VARIABLE        reduce using rule 9 (statement -> returnStatement .)
    $end            reduce using rule 9 (statement -> returnStatement .)
    BLOCK_ENDS      reduce using rule 9 (statement -> returnStatement .)


state 36

    (40) lefthandside -> LOCAL . type decList
    (41) lefthandside -> LOCAL . OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    OPEN_PARANTHESIS shift and go to state 83
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8

    variable                       shift and go to state 34
    type                           shift and go to state 84

state 37

    (68) type -> ARRAY .

    COMMA           reduce using rule 68 (type -> ARRAY .)
    CLOSE_PARANTHESIS reduce using rule 68 (type -> ARRAY .)
    INCREMENT_OP    reduce using rule 68 (type -> ARRAY .)
    DECREMENT_OP    reduce using rule 68 (type -> ARRAY .)
    OR_STR_OP       reduce using rule 68 (type -> ARRAY .)
    XOR_STR_OP      reduce using rule 68 (type -> ARRAY .)
    AND_STR_OP      reduce using rule 68 (type -> ARRAY .)
    NOT_STR_OP      reduce using rule 68 (type -> ARRAY .)
    ASSOCIATE_OP    reduce using rule 68 (type -> ARRAY .)
    ADV_ASSIGNMENT_OP reduce using rule 68 (type -> ARRAY .)
    ASSIGNMENT_OP   reduce using rule 68 (type -> ARRAY .)
    RANGE_OP        reduce using rule 68 (type -> ARRAY .)
    OR_OP           reduce using rule 68 (type -> ARRAY .)
    AND_OP          reduce using rule 68 (type -> ARRAY .)
    BIT_OR          reduce using rule 68 (type -> ARRAY .)
    BIT_XOR         reduce using rule 68 (type -> ARRAY .)
    BIT_AND         reduce using rule 68 (type -> ARRAY .)
    EQUALS_OP       reduce using rule 68 (type -> ARRAY .)
    NOT_EQUALS_OP   reduce using rule 68 (type -> ARRAY .)
    COMPARE_OP      reduce using rule 68 (type -> ARRAY .)
    GREATER_OP      reduce using rule 68 (type -> ARRAY .)
    LESS_OP         reduce using rule 68 (type -> ARRAY .)
    GREATER_EQUAL_OP reduce using rule 68 (type -> ARRAY .)
    LESS_EQUAL_OP   reduce using rule 68 (type -> ARRAY .)
    BIT_RIGHT_SHIFT reduce using rule 68 (type -> ARRAY .)
    BIT_LEFT_SHIFT  reduce using rule 68 (type -> ARRAY .)
    PLUS_OP         reduce using rule 68 (type -> ARRAY .)
    MINUS_OP        reduce using rule 68 (type -> ARRAY .)
    CONCATENATE     reduce using rule 68 (type -> ARRAY .)
    MULTIPLICATION_OP reduce using rule 68 (type -> ARRAY .)
    DIVISION_OP     reduce using rule 68 (type -> ARRAY .)
    MODULUS_OP      reduce using rule 68 (type -> ARRAY .)
    REP_OP          reduce using rule 68 (type -> ARRAY .)
    SEARCH_MODIFY   reduce using rule 68 (type -> ARRAY .)
    SEARCH_MODIFY_NEG reduce using rule 68 (type -> ARRAY .)
    EXPONENT_OP     reduce using rule 68 (type -> ARRAY .)
    SEMICOLON       reduce using rule 68 (type -> ARRAY .)
    BLOCK_BEGIN     reduce using rule 68 (type -> ARRAY .)


state 38

    (26) ifthen -> IF . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
    (27) ifthenelse -> IF . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block

    OPEN_PARANTHESIS shift and go to state 85


state 39

    (1) start -> block .

    $end            reduce using rule 1 (start -> block .)


state 40

    (21) useStatement -> USE IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 86


state 41

    (42) lefthandside -> OPEN_PARANTHESIS type . decList CLOSE_PARANTHESIS
    (45) decList -> . COMMA type decList
    (46) decList -> . empty
    (6) empty -> .

    COMMA           shift and go to state 88
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)

    empty                          shift and go to state 89
    decList                        shift and go to state 87

state 42

    (3) block -> BLOCK_BEGIN statements . BLOCK_ENDS

    BLOCK_ENDS      shift and go to state 90


state 43

    (61) variable -> VARIABLE OPEN_BRACKET . NUMBER CLOSE_BRACKET

    NUMBER          shift and go to state 91


state 44

    (62) variable -> VARIABLE BLOCK_BEGIN . string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

    string                         shift and go to state 92

state 45

    (51) whileStatement -> WHILE OPEN_PARANTHESIS . expression CLOSE_PARANTHESIS block
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 93
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 46

    (31) printStatement -> PRINT OPEN_PARANTHESIS . string CLOSE_PARANTHESIS SEMICOLON
    (67) term -> OPEN_PARANTHESIS . expression CLOSE_PARANTHESIS
    (53) string -> . STRING
    (54) string -> . RES_STRING
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52
    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 94
    expression                     shift and go to state 95
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 47

    (72) expression -> MINUS_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 96
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 48

    (63) term -> number .

    INCREMENT_OP    reduce using rule 63 (term -> number .)
    DECREMENT_OP    reduce using rule 63 (term -> number .)
    OR_STR_OP       reduce using rule 63 (term -> number .)
    XOR_STR_OP      reduce using rule 63 (term -> number .)
    AND_STR_OP      reduce using rule 63 (term -> number .)
    NOT_STR_OP      reduce using rule 63 (term -> number .)
    COMMA           reduce using rule 63 (term -> number .)
    ASSOCIATE_OP    reduce using rule 63 (term -> number .)
    ADV_ASSIGNMENT_OP reduce using rule 63 (term -> number .)
    ASSIGNMENT_OP   reduce using rule 63 (term -> number .)
    RANGE_OP        reduce using rule 63 (term -> number .)
    OR_OP           reduce using rule 63 (term -> number .)
    AND_OP          reduce using rule 63 (term -> number .)
    BIT_OR          reduce using rule 63 (term -> number .)
    BIT_XOR         reduce using rule 63 (term -> number .)
    BIT_AND         reduce using rule 63 (term -> number .)
    EQUALS_OP       reduce using rule 63 (term -> number .)
    NOT_EQUALS_OP   reduce using rule 63 (term -> number .)
    COMPARE_OP      reduce using rule 63 (term -> number .)
    GREATER_OP      reduce using rule 63 (term -> number .)
    LESS_OP         reduce using rule 63 (term -> number .)
    GREATER_EQUAL_OP reduce using rule 63 (term -> number .)
    LESS_EQUAL_OP   reduce using rule 63 (term -> number .)
    BIT_RIGHT_SHIFT reduce using rule 63 (term -> number .)
    BIT_LEFT_SHIFT  reduce using rule 63 (term -> number .)
    PLUS_OP         reduce using rule 63 (term -> number .)
    MINUS_OP        reduce using rule 63 (term -> number .)
    CONCATENATE     reduce using rule 63 (term -> number .)
    MULTIPLICATION_OP reduce using rule 63 (term -> number .)
    DIVISION_OP     reduce using rule 63 (term -> number .)
    MODULUS_OP      reduce using rule 63 (term -> number .)
    REP_OP          reduce using rule 63 (term -> number .)
    SEARCH_MODIFY   reduce using rule 63 (term -> number .)
    SEARCH_MODIFY_NEG reduce using rule 63 (term -> number .)
    EXPONENT_OP     reduce using rule 63 (term -> number .)
    SEMICOLON       reduce using rule 63 (term -> number .)
    CLOSE_PARANTHESIS reduce using rule 63 (term -> number .)


state 49

    (74) expression -> NOT_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 97
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 50

    (58) number -> HEXADECIMAL .

    INCREMENT_OP    reduce using rule 58 (number -> HEXADECIMAL .)
    DECREMENT_OP    reduce using rule 58 (number -> HEXADECIMAL .)
    OR_STR_OP       reduce using rule 58 (number -> HEXADECIMAL .)
    XOR_STR_OP      reduce using rule 58 (number -> HEXADECIMAL .)
    AND_STR_OP      reduce using rule 58 (number -> HEXADECIMAL .)
    NOT_STR_OP      reduce using rule 58 (number -> HEXADECIMAL .)
    COMMA           reduce using rule 58 (number -> HEXADECIMAL .)
    ASSOCIATE_OP    reduce using rule 58 (number -> HEXADECIMAL .)
    ADV_ASSIGNMENT_OP reduce using rule 58 (number -> HEXADECIMAL .)
    ASSIGNMENT_OP   reduce using rule 58 (number -> HEXADECIMAL .)
    RANGE_OP        reduce using rule 58 (number -> HEXADECIMAL .)
    OR_OP           reduce using rule 58 (number -> HEXADECIMAL .)
    AND_OP          reduce using rule 58 (number -> HEXADECIMAL .)
    BIT_OR          reduce using rule 58 (number -> HEXADECIMAL .)
    BIT_XOR         reduce using rule 58 (number -> HEXADECIMAL .)
    BIT_AND         reduce using rule 58 (number -> HEXADECIMAL .)
    EQUALS_OP       reduce using rule 58 (number -> HEXADECIMAL .)
    NOT_EQUALS_OP   reduce using rule 58 (number -> HEXADECIMAL .)
    COMPARE_OP      reduce using rule 58 (number -> HEXADECIMAL .)
    GREATER_OP      reduce using rule 58 (number -> HEXADECIMAL .)
    LESS_OP         reduce using rule 58 (number -> HEXADECIMAL .)
    GREATER_EQUAL_OP reduce using rule 58 (number -> HEXADECIMAL .)
    LESS_EQUAL_OP   reduce using rule 58 (number -> HEXADECIMAL .)
    BIT_RIGHT_SHIFT reduce using rule 58 (number -> HEXADECIMAL .)
    BIT_LEFT_SHIFT  reduce using rule 58 (number -> HEXADECIMAL .)
    PLUS_OP         reduce using rule 58 (number -> HEXADECIMAL .)
    MINUS_OP        reduce using rule 58 (number -> HEXADECIMAL .)
    CONCATENATE     reduce using rule 58 (number -> HEXADECIMAL .)
    MULTIPLICATION_OP reduce using rule 58 (number -> HEXADECIMAL .)
    DIVISION_OP     reduce using rule 58 (number -> HEXADECIMAL .)
    MODULUS_OP      reduce using rule 58 (number -> HEXADECIMAL .)
    REP_OP          reduce using rule 58 (number -> HEXADECIMAL .)
    SEARCH_MODIFY   reduce using rule 58 (number -> HEXADECIMAL .)
    SEARCH_MODIFY_NEG reduce using rule 58 (number -> HEXADECIMAL .)
    EXPONENT_OP     reduce using rule 58 (number -> HEXADECIMAL .)
    SEMICOLON       reduce using rule 58 (number -> HEXADECIMAL .)
    CLOSE_PARANTHESIS reduce using rule 58 (number -> HEXADECIMAL .)


state 51

    (53) string -> STRING .

    INCREMENT_OP    reduce using rule 53 (string -> STRING .)
    DECREMENT_OP    reduce using rule 53 (string -> STRING .)
    OR_STR_OP       reduce using rule 53 (string -> STRING .)
    XOR_STR_OP      reduce using rule 53 (string -> STRING .)
    AND_STR_OP      reduce using rule 53 (string -> STRING .)
    NOT_STR_OP      reduce using rule 53 (string -> STRING .)
    COMMA           reduce using rule 53 (string -> STRING .)
    ASSOCIATE_OP    reduce using rule 53 (string -> STRING .)
    ADV_ASSIGNMENT_OP reduce using rule 53 (string -> STRING .)
    ASSIGNMENT_OP   reduce using rule 53 (string -> STRING .)
    RANGE_OP        reduce using rule 53 (string -> STRING .)
    OR_OP           reduce using rule 53 (string -> STRING .)
    AND_OP          reduce using rule 53 (string -> STRING .)
    BIT_OR          reduce using rule 53 (string -> STRING .)
    BIT_XOR         reduce using rule 53 (string -> STRING .)
    BIT_AND         reduce using rule 53 (string -> STRING .)
    EQUALS_OP       reduce using rule 53 (string -> STRING .)
    NOT_EQUALS_OP   reduce using rule 53 (string -> STRING .)
    COMPARE_OP      reduce using rule 53 (string -> STRING .)
    GREATER_OP      reduce using rule 53 (string -> STRING .)
    LESS_OP         reduce using rule 53 (string -> STRING .)
    GREATER_EQUAL_OP reduce using rule 53 (string -> STRING .)
    LESS_EQUAL_OP   reduce using rule 53 (string -> STRING .)
    BIT_RIGHT_SHIFT reduce using rule 53 (string -> STRING .)
    BIT_LEFT_SHIFT  reduce using rule 53 (string -> STRING .)
    PLUS_OP         reduce using rule 53 (string -> STRING .)
    MINUS_OP        reduce using rule 53 (string -> STRING .)
    CONCATENATE     reduce using rule 53 (string -> STRING .)
    MULTIPLICATION_OP reduce using rule 53 (string -> STRING .)
    DIVISION_OP     reduce using rule 53 (string -> STRING .)
    MODULUS_OP      reduce using rule 53 (string -> STRING .)
    REP_OP          reduce using rule 53 (string -> STRING .)
    SEARCH_MODIFY   reduce using rule 53 (string -> STRING .)
    SEARCH_MODIFY_NEG reduce using rule 53 (string -> STRING .)
    EXPONENT_OP     reduce using rule 53 (string -> STRING .)
    SEMICOLON       reduce using rule 53 (string -> STRING .)
    CLOSE_PARANTHESIS reduce using rule 53 (string -> STRING .)
    BLOCK_ENDS      reduce using rule 53 (string -> STRING .)


state 52

    (54) string -> RES_STRING .

    INCREMENT_OP    reduce using rule 54 (string -> RES_STRING .)
    DECREMENT_OP    reduce using rule 54 (string -> RES_STRING .)
    OR_STR_OP       reduce using rule 54 (string -> RES_STRING .)
    XOR_STR_OP      reduce using rule 54 (string -> RES_STRING .)
    AND_STR_OP      reduce using rule 54 (string -> RES_STRING .)
    NOT_STR_OP      reduce using rule 54 (string -> RES_STRING .)
    COMMA           reduce using rule 54 (string -> RES_STRING .)
    ASSOCIATE_OP    reduce using rule 54 (string -> RES_STRING .)
    ADV_ASSIGNMENT_OP reduce using rule 54 (string -> RES_STRING .)
    ASSIGNMENT_OP   reduce using rule 54 (string -> RES_STRING .)
    RANGE_OP        reduce using rule 54 (string -> RES_STRING .)
    OR_OP           reduce using rule 54 (string -> RES_STRING .)
    AND_OP          reduce using rule 54 (string -> RES_STRING .)
    BIT_OR          reduce using rule 54 (string -> RES_STRING .)
    BIT_XOR         reduce using rule 54 (string -> RES_STRING .)
    BIT_AND         reduce using rule 54 (string -> RES_STRING .)
    EQUALS_OP       reduce using rule 54 (string -> RES_STRING .)
    NOT_EQUALS_OP   reduce using rule 54 (string -> RES_STRING .)
    COMPARE_OP      reduce using rule 54 (string -> RES_STRING .)
    GREATER_OP      reduce using rule 54 (string -> RES_STRING .)
    LESS_OP         reduce using rule 54 (string -> RES_STRING .)
    GREATER_EQUAL_OP reduce using rule 54 (string -> RES_STRING .)
    LESS_EQUAL_OP   reduce using rule 54 (string -> RES_STRING .)
    BIT_RIGHT_SHIFT reduce using rule 54 (string -> RES_STRING .)
    BIT_LEFT_SHIFT  reduce using rule 54 (string -> RES_STRING .)
    PLUS_OP         reduce using rule 54 (string -> RES_STRING .)
    MINUS_OP        reduce using rule 54 (string -> RES_STRING .)
    CONCATENATE     reduce using rule 54 (string -> RES_STRING .)
    MULTIPLICATION_OP reduce using rule 54 (string -> RES_STRING .)
    DIVISION_OP     reduce using rule 54 (string -> RES_STRING .)
    MODULUS_OP      reduce using rule 54 (string -> RES_STRING .)
    REP_OP          reduce using rule 54 (string -> RES_STRING .)
    SEARCH_MODIFY   reduce using rule 54 (string -> RES_STRING .)
    SEARCH_MODIFY_NEG reduce using rule 54 (string -> RES_STRING .)
    EXPONENT_OP     reduce using rule 54 (string -> RES_STRING .)
    SEMICOLON       reduce using rule 54 (string -> RES_STRING .)
    CLOSE_PARANTHESIS reduce using rule 54 (string -> RES_STRING .)
    BLOCK_ENDS      reduce using rule 54 (string -> RES_STRING .)


state 53

    (73) expression -> BIT_FLIP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 98
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 54

    (64) term -> type .

    INCREMENT_OP    reduce using rule 64 (term -> type .)
    DECREMENT_OP    reduce using rule 64 (term -> type .)
    OR_STR_OP       reduce using rule 64 (term -> type .)
    XOR_STR_OP      reduce using rule 64 (term -> type .)
    AND_STR_OP      reduce using rule 64 (term -> type .)
    NOT_STR_OP      reduce using rule 64 (term -> type .)
    COMMA           reduce using rule 64 (term -> type .)
    ASSOCIATE_OP    reduce using rule 64 (term -> type .)
    ADV_ASSIGNMENT_OP reduce using rule 64 (term -> type .)
    ASSIGNMENT_OP   reduce using rule 64 (term -> type .)
    RANGE_OP        reduce using rule 64 (term -> type .)
    OR_OP           reduce using rule 64 (term -> type .)
    AND_OP          reduce using rule 64 (term -> type .)
    BIT_OR          reduce using rule 64 (term -> type .)
    BIT_XOR         reduce using rule 64 (term -> type .)
    BIT_AND         reduce using rule 64 (term -> type .)
    EQUALS_OP       reduce using rule 64 (term -> type .)
    NOT_EQUALS_OP   reduce using rule 64 (term -> type .)
    COMPARE_OP      reduce using rule 64 (term -> type .)
    GREATER_OP      reduce using rule 64 (term -> type .)
    LESS_OP         reduce using rule 64 (term -> type .)
    GREATER_EQUAL_OP reduce using rule 64 (term -> type .)
    LESS_EQUAL_OP   reduce using rule 64 (term -> type .)
    BIT_RIGHT_SHIFT reduce using rule 64 (term -> type .)
    BIT_LEFT_SHIFT  reduce using rule 64 (term -> type .)
    PLUS_OP         reduce using rule 64 (term -> type .)
    MINUS_OP        reduce using rule 64 (term -> type .)
    CONCATENATE     reduce using rule 64 (term -> type .)
    MULTIPLICATION_OP reduce using rule 64 (term -> type .)
    DIVISION_OP     reduce using rule 64 (term -> type .)
    MODULUS_OP      reduce using rule 64 (term -> type .)
    REP_OP          reduce using rule 64 (term -> type .)
    SEARCH_MODIFY   reduce using rule 64 (term -> type .)
    SEARCH_MODIFY_NEG reduce using rule 64 (term -> type .)
    EXPONENT_OP     reduce using rule 64 (term -> type .)
    SEMICOLON       reduce using rule 64 (term -> type .)
    CLOSE_PARANTHESIS reduce using rule 64 (term -> type .)


state 55

    (79) expression -> empty .

    INCREMENT_OP    reduce using rule 79 (expression -> empty .)
    DECREMENT_OP    reduce using rule 79 (expression -> empty .)
    OR_STR_OP       reduce using rule 79 (expression -> empty .)
    XOR_STR_OP      reduce using rule 79 (expression -> empty .)
    AND_STR_OP      reduce using rule 79 (expression -> empty .)
    NOT_STR_OP      reduce using rule 79 (expression -> empty .)
    COMMA           reduce using rule 79 (expression -> empty .)
    ASSOCIATE_OP    reduce using rule 79 (expression -> empty .)
    ADV_ASSIGNMENT_OP reduce using rule 79 (expression -> empty .)
    ASSIGNMENT_OP   reduce using rule 79 (expression -> empty .)
    RANGE_OP        reduce using rule 79 (expression -> empty .)
    OR_OP           reduce using rule 79 (expression -> empty .)
    AND_OP          reduce using rule 79 (expression -> empty .)
    BIT_OR          reduce using rule 79 (expression -> empty .)
    BIT_XOR         reduce using rule 79 (expression -> empty .)
    BIT_AND         reduce using rule 79 (expression -> empty .)
    EQUALS_OP       reduce using rule 79 (expression -> empty .)
    NOT_EQUALS_OP   reduce using rule 79 (expression -> empty .)
    COMPARE_OP      reduce using rule 79 (expression -> empty .)
    GREATER_OP      reduce using rule 79 (expression -> empty .)
    LESS_OP         reduce using rule 79 (expression -> empty .)
    GREATER_EQUAL_OP reduce using rule 79 (expression -> empty .)
    LESS_EQUAL_OP   reduce using rule 79 (expression -> empty .)
    BIT_RIGHT_SHIFT reduce using rule 79 (expression -> empty .)
    BIT_LEFT_SHIFT  reduce using rule 79 (expression -> empty .)
    PLUS_OP         reduce using rule 79 (expression -> empty .)
    MINUS_OP        reduce using rule 79 (expression -> empty .)
    CONCATENATE     reduce using rule 79 (expression -> empty .)
    MULTIPLICATION_OP reduce using rule 79 (expression -> empty .)
    DIVISION_OP     reduce using rule 79 (expression -> empty .)
    MODULUS_OP      reduce using rule 79 (expression -> empty .)
    REP_OP          reduce using rule 79 (expression -> empty .)
    SEARCH_MODIFY   reduce using rule 79 (expression -> empty .)
    SEARCH_MODIFY_NEG reduce using rule 79 (expression -> empty .)
    EXPONENT_OP     reduce using rule 79 (expression -> empty .)
    SEMICOLON       reduce using rule 79 (expression -> empty .)
    CLOSE_PARANTHESIS reduce using rule 79 (expression -> empty .)


state 56

    (76) expression -> DECREMENT_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 99
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 57

    (55) number -> NUMBER .

    INCREMENT_OP    reduce using rule 55 (number -> NUMBER .)
    DECREMENT_OP    reduce using rule 55 (number -> NUMBER .)
    OR_STR_OP       reduce using rule 55 (number -> NUMBER .)
    XOR_STR_OP      reduce using rule 55 (number -> NUMBER .)
    AND_STR_OP      reduce using rule 55 (number -> NUMBER .)
    NOT_STR_OP      reduce using rule 55 (number -> NUMBER .)
    COMMA           reduce using rule 55 (number -> NUMBER .)
    ASSOCIATE_OP    reduce using rule 55 (number -> NUMBER .)
    ADV_ASSIGNMENT_OP reduce using rule 55 (number -> NUMBER .)
    ASSIGNMENT_OP   reduce using rule 55 (number -> NUMBER .)
    RANGE_OP        reduce using rule 55 (number -> NUMBER .)
    OR_OP           reduce using rule 55 (number -> NUMBER .)
    AND_OP          reduce using rule 55 (number -> NUMBER .)
    BIT_OR          reduce using rule 55 (number -> NUMBER .)
    BIT_XOR         reduce using rule 55 (number -> NUMBER .)
    BIT_AND         reduce using rule 55 (number -> NUMBER .)
    EQUALS_OP       reduce using rule 55 (number -> NUMBER .)
    NOT_EQUALS_OP   reduce using rule 55 (number -> NUMBER .)
    COMPARE_OP      reduce using rule 55 (number -> NUMBER .)
    GREATER_OP      reduce using rule 55 (number -> NUMBER .)
    LESS_OP         reduce using rule 55 (number -> NUMBER .)
    GREATER_EQUAL_OP reduce using rule 55 (number -> NUMBER .)
    LESS_EQUAL_OP   reduce using rule 55 (number -> NUMBER .)
    BIT_RIGHT_SHIFT reduce using rule 55 (number -> NUMBER .)
    BIT_LEFT_SHIFT  reduce using rule 55 (number -> NUMBER .)
    PLUS_OP         reduce using rule 55 (number -> NUMBER .)
    MINUS_OP        reduce using rule 55 (number -> NUMBER .)
    CONCATENATE     reduce using rule 55 (number -> NUMBER .)
    MULTIPLICATION_OP reduce using rule 55 (number -> NUMBER .)
    DIVISION_OP     reduce using rule 55 (number -> NUMBER .)
    MODULUS_OP      reduce using rule 55 (number -> NUMBER .)
    REP_OP          reduce using rule 55 (number -> NUMBER .)
    SEARCH_MODIFY   reduce using rule 55 (number -> NUMBER .)
    SEARCH_MODIFY_NEG reduce using rule 55 (number -> NUMBER .)
    EXPONENT_OP     reduce using rule 55 (number -> NUMBER .)
    SEMICOLON       reduce using rule 55 (number -> NUMBER .)
    CLOSE_PARANTHESIS reduce using rule 55 (number -> NUMBER .)


state 58

    (56) number -> SCI_NOT .

    INCREMENT_OP    reduce using rule 56 (number -> SCI_NOT .)
    DECREMENT_OP    reduce using rule 56 (number -> SCI_NOT .)
    OR_STR_OP       reduce using rule 56 (number -> SCI_NOT .)
    XOR_STR_OP      reduce using rule 56 (number -> SCI_NOT .)
    AND_STR_OP      reduce using rule 56 (number -> SCI_NOT .)
    NOT_STR_OP      reduce using rule 56 (number -> SCI_NOT .)
    COMMA           reduce using rule 56 (number -> SCI_NOT .)
    ASSOCIATE_OP    reduce using rule 56 (number -> SCI_NOT .)
    ADV_ASSIGNMENT_OP reduce using rule 56 (number -> SCI_NOT .)
    ASSIGNMENT_OP   reduce using rule 56 (number -> SCI_NOT .)
    RANGE_OP        reduce using rule 56 (number -> SCI_NOT .)
    OR_OP           reduce using rule 56 (number -> SCI_NOT .)
    AND_OP          reduce using rule 56 (number -> SCI_NOT .)
    BIT_OR          reduce using rule 56 (number -> SCI_NOT .)
    BIT_XOR         reduce using rule 56 (number -> SCI_NOT .)
    BIT_AND         reduce using rule 56 (number -> SCI_NOT .)
    EQUALS_OP       reduce using rule 56 (number -> SCI_NOT .)
    NOT_EQUALS_OP   reduce using rule 56 (number -> SCI_NOT .)
    COMPARE_OP      reduce using rule 56 (number -> SCI_NOT .)
    GREATER_OP      reduce using rule 56 (number -> SCI_NOT .)
    LESS_OP         reduce using rule 56 (number -> SCI_NOT .)
    GREATER_EQUAL_OP reduce using rule 56 (number -> SCI_NOT .)
    LESS_EQUAL_OP   reduce using rule 56 (number -> SCI_NOT .)
    BIT_RIGHT_SHIFT reduce using rule 56 (number -> SCI_NOT .)
    BIT_LEFT_SHIFT  reduce using rule 56 (number -> SCI_NOT .)
    PLUS_OP         reduce using rule 56 (number -> SCI_NOT .)
    MINUS_OP        reduce using rule 56 (number -> SCI_NOT .)
    CONCATENATE     reduce using rule 56 (number -> SCI_NOT .)
    MULTIPLICATION_OP reduce using rule 56 (number -> SCI_NOT .)
    DIVISION_OP     reduce using rule 56 (number -> SCI_NOT .)
    MODULUS_OP      reduce using rule 56 (number -> SCI_NOT .)
    REP_OP          reduce using rule 56 (number -> SCI_NOT .)
    SEARCH_MODIFY   reduce using rule 56 (number -> SCI_NOT .)
    SEARCH_MODIFY_NEG reduce using rule 56 (number -> SCI_NOT .)
    EXPONENT_OP     reduce using rule 56 (number -> SCI_NOT .)
    SEMICOLON       reduce using rule 56 (number -> SCI_NOT .)
    CLOSE_PARANTHESIS reduce using rule 56 (number -> SCI_NOT .)


state 59

    (65) term -> variable .
    (70) type -> variable .

  ! reduce/reduce conflict for INCREMENT_OP resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for DECREMENT_OP resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for OR_STR_OP resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for XOR_STR_OP resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for AND_STR_OP resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for NOT_STR_OP resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for COMMA resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for ASSOCIATE_OP resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for ADV_ASSIGNMENT_OP resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for ASSIGNMENT_OP resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for RANGE_OP resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for OR_OP resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for AND_OP resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for BIT_OR resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for BIT_XOR resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for BIT_AND resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for EQUALS_OP resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for NOT_EQUALS_OP resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for COMPARE_OP resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for GREATER_OP resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for LESS_OP resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for GREATER_EQUAL_OP resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for LESS_EQUAL_OP resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for BIT_RIGHT_SHIFT resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for BIT_LEFT_SHIFT resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for PLUS_OP resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for MINUS_OP resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for CONCATENATE resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for MULTIPLICATION_OP resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for DIVISION_OP resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for MODULUS_OP resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for REP_OP resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for SEARCH_MODIFY resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for SEARCH_MODIFY_NEG resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for EXPONENT_OP resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 65 (term -> variable .)
  ! reduce/reduce conflict for CLOSE_PARANTHESIS resolved using rule 65 (term -> variable .)
    INCREMENT_OP    reduce using rule 65 (term -> variable .)
    DECREMENT_OP    reduce using rule 65 (term -> variable .)
    OR_STR_OP       reduce using rule 65 (term -> variable .)
    XOR_STR_OP      reduce using rule 65 (term -> variable .)
    AND_STR_OP      reduce using rule 65 (term -> variable .)
    NOT_STR_OP      reduce using rule 65 (term -> variable .)
    COMMA           reduce using rule 65 (term -> variable .)
    ASSOCIATE_OP    reduce using rule 65 (term -> variable .)
    ADV_ASSIGNMENT_OP reduce using rule 65 (term -> variable .)
    ASSIGNMENT_OP   reduce using rule 65 (term -> variable .)
    RANGE_OP        reduce using rule 65 (term -> variable .)
    OR_OP           reduce using rule 65 (term -> variable .)
    AND_OP          reduce using rule 65 (term -> variable .)
    BIT_OR          reduce using rule 65 (term -> variable .)
    BIT_XOR         reduce using rule 65 (term -> variable .)
    BIT_AND         reduce using rule 65 (term -> variable .)
    EQUALS_OP       reduce using rule 65 (term -> variable .)
    NOT_EQUALS_OP   reduce using rule 65 (term -> variable .)
    COMPARE_OP      reduce using rule 65 (term -> variable .)
    GREATER_OP      reduce using rule 65 (term -> variable .)
    LESS_OP         reduce using rule 65 (term -> variable .)
    GREATER_EQUAL_OP reduce using rule 65 (term -> variable .)
    LESS_EQUAL_OP   reduce using rule 65 (term -> variable .)
    BIT_RIGHT_SHIFT reduce using rule 65 (term -> variable .)
    BIT_LEFT_SHIFT  reduce using rule 65 (term -> variable .)
    PLUS_OP         reduce using rule 65 (term -> variable .)
    MINUS_OP        reduce using rule 65 (term -> variable .)
    CONCATENATE     reduce using rule 65 (term -> variable .)
    MULTIPLICATION_OP reduce using rule 65 (term -> variable .)
    DIVISION_OP     reduce using rule 65 (term -> variable .)
    MODULUS_OP      reduce using rule 65 (term -> variable .)
    REP_OP          reduce using rule 65 (term -> variable .)
    SEARCH_MODIFY   reduce using rule 65 (term -> variable .)
    SEARCH_MODIFY_NEG reduce using rule 65 (term -> variable .)
    EXPONENT_OP     reduce using rule 65 (term -> variable .)
    SEMICOLON       reduce using rule 65 (term -> variable .)
    CLOSE_PARANTHESIS reduce using rule 65 (term -> variable .)

  ! INCREMENT_OP    [ reduce using rule 70 (type -> variable .) ]
  ! DECREMENT_OP    [ reduce using rule 70 (type -> variable .) ]
  ! OR_STR_OP       [ reduce using rule 70 (type -> variable .) ]
  ! XOR_STR_OP      [ reduce using rule 70 (type -> variable .) ]
  ! AND_STR_OP      [ reduce using rule 70 (type -> variable .) ]
  ! NOT_STR_OP      [ reduce using rule 70 (type -> variable .) ]
  ! COMMA           [ reduce using rule 70 (type -> variable .) ]
  ! ASSOCIATE_OP    [ reduce using rule 70 (type -> variable .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 70 (type -> variable .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 70 (type -> variable .) ]
  ! RANGE_OP        [ reduce using rule 70 (type -> variable .) ]
  ! OR_OP           [ reduce using rule 70 (type -> variable .) ]
  ! AND_OP          [ reduce using rule 70 (type -> variable .) ]
  ! BIT_OR          [ reduce using rule 70 (type -> variable .) ]
  ! BIT_XOR         [ reduce using rule 70 (type -> variable .) ]
  ! BIT_AND         [ reduce using rule 70 (type -> variable .) ]
  ! EQUALS_OP       [ reduce using rule 70 (type -> variable .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 70 (type -> variable .) ]
  ! COMPARE_OP      [ reduce using rule 70 (type -> variable .) ]
  ! GREATER_OP      [ reduce using rule 70 (type -> variable .) ]
  ! LESS_OP         [ reduce using rule 70 (type -> variable .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 70 (type -> variable .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 70 (type -> variable .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 70 (type -> variable .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 70 (type -> variable .) ]
  ! PLUS_OP         [ reduce using rule 70 (type -> variable .) ]
  ! MINUS_OP        [ reduce using rule 70 (type -> variable .) ]
  ! CONCATENATE     [ reduce using rule 70 (type -> variable .) ]
  ! MULTIPLICATION_OP [ reduce using rule 70 (type -> variable .) ]
  ! DIVISION_OP     [ reduce using rule 70 (type -> variable .) ]
  ! MODULUS_OP      [ reduce using rule 70 (type -> variable .) ]
  ! REP_OP          [ reduce using rule 70 (type -> variable .) ]
  ! SEARCH_MODIFY   [ reduce using rule 70 (type -> variable .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 70 (type -> variable .) ]
  ! EXPONENT_OP     [ reduce using rule 70 (type -> variable .) ]
  ! SEMICOLON       [ reduce using rule 70 (type -> variable .) ]
  ! CLOSE_PARANTHESIS [ reduce using rule 70 (type -> variable .) ]


state 60

    (32) printStatement -> PRINT string . SEMICOLON
    (66) term -> string .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 100
    INCREMENT_OP    reduce using rule 66 (term -> string .)
    DECREMENT_OP    reduce using rule 66 (term -> string .)
    OR_STR_OP       reduce using rule 66 (term -> string .)
    XOR_STR_OP      reduce using rule 66 (term -> string .)
    AND_STR_OP      reduce using rule 66 (term -> string .)
    NOT_STR_OP      reduce using rule 66 (term -> string .)
    COMMA           reduce using rule 66 (term -> string .)
    ASSOCIATE_OP    reduce using rule 66 (term -> string .)
    ADV_ASSIGNMENT_OP reduce using rule 66 (term -> string .)
    ASSIGNMENT_OP   reduce using rule 66 (term -> string .)
    RANGE_OP        reduce using rule 66 (term -> string .)
    OR_OP           reduce using rule 66 (term -> string .)
    AND_OP          reduce using rule 66 (term -> string .)
    BIT_OR          reduce using rule 66 (term -> string .)
    BIT_XOR         reduce using rule 66 (term -> string .)
    BIT_AND         reduce using rule 66 (term -> string .)
    EQUALS_OP       reduce using rule 66 (term -> string .)
    NOT_EQUALS_OP   reduce using rule 66 (term -> string .)
    COMPARE_OP      reduce using rule 66 (term -> string .)
    GREATER_OP      reduce using rule 66 (term -> string .)
    LESS_OP         reduce using rule 66 (term -> string .)
    GREATER_EQUAL_OP reduce using rule 66 (term -> string .)
    LESS_EQUAL_OP   reduce using rule 66 (term -> string .)
    BIT_RIGHT_SHIFT reduce using rule 66 (term -> string .)
    BIT_LEFT_SHIFT  reduce using rule 66 (term -> string .)
    PLUS_OP         reduce using rule 66 (term -> string .)
    MINUS_OP        reduce using rule 66 (term -> string .)
    CONCATENATE     reduce using rule 66 (term -> string .)
    MULTIPLICATION_OP reduce using rule 66 (term -> string .)
    DIVISION_OP     reduce using rule 66 (term -> string .)
    MODULUS_OP      reduce using rule 66 (term -> string .)
    REP_OP          reduce using rule 66 (term -> string .)
    SEARCH_MODIFY   reduce using rule 66 (term -> string .)
    SEARCH_MODIFY_NEG reduce using rule 66 (term -> string .)
    EXPONENT_OP     reduce using rule 66 (term -> string .)

  ! SEMICOLON       [ reduce using rule 66 (term -> string .) ]


state 61

    (80) expression -> term .

    INCREMENT_OP    reduce using rule 80 (expression -> term .)
    DECREMENT_OP    reduce using rule 80 (expression -> term .)
    OR_STR_OP       reduce using rule 80 (expression -> term .)
    XOR_STR_OP      reduce using rule 80 (expression -> term .)
    AND_STR_OP      reduce using rule 80 (expression -> term .)
    NOT_STR_OP      reduce using rule 80 (expression -> term .)
    COMMA           reduce using rule 80 (expression -> term .)
    ASSOCIATE_OP    reduce using rule 80 (expression -> term .)
    ADV_ASSIGNMENT_OP reduce using rule 80 (expression -> term .)
    ASSIGNMENT_OP   reduce using rule 80 (expression -> term .)
    RANGE_OP        reduce using rule 80 (expression -> term .)
    OR_OP           reduce using rule 80 (expression -> term .)
    AND_OP          reduce using rule 80 (expression -> term .)
    BIT_OR          reduce using rule 80 (expression -> term .)
    BIT_XOR         reduce using rule 80 (expression -> term .)
    BIT_AND         reduce using rule 80 (expression -> term .)
    EQUALS_OP       reduce using rule 80 (expression -> term .)
    NOT_EQUALS_OP   reduce using rule 80 (expression -> term .)
    COMPARE_OP      reduce using rule 80 (expression -> term .)
    GREATER_OP      reduce using rule 80 (expression -> term .)
    LESS_OP         reduce using rule 80 (expression -> term .)
    GREATER_EQUAL_OP reduce using rule 80 (expression -> term .)
    LESS_EQUAL_OP   reduce using rule 80 (expression -> term .)
    BIT_RIGHT_SHIFT reduce using rule 80 (expression -> term .)
    BIT_LEFT_SHIFT  reduce using rule 80 (expression -> term .)
    PLUS_OP         reduce using rule 80 (expression -> term .)
    MINUS_OP        reduce using rule 80 (expression -> term .)
    CONCATENATE     reduce using rule 80 (expression -> term .)
    MULTIPLICATION_OP reduce using rule 80 (expression -> term .)
    DIVISION_OP     reduce using rule 80 (expression -> term .)
    MODULUS_OP      reduce using rule 80 (expression -> term .)
    REP_OP          reduce using rule 80 (expression -> term .)
    SEARCH_MODIFY   reduce using rule 80 (expression -> term .)
    SEARCH_MODIFY_NEG reduce using rule 80 (expression -> term .)
    EXPONENT_OP     reduce using rule 80 (expression -> term .)
    SEMICOLON       reduce using rule 80 (expression -> term .)
    CLOSE_PARANTHESIS reduce using rule 80 (expression -> term .)


state 62

    (59) number -> OCTAL .

    INCREMENT_OP    reduce using rule 59 (number -> OCTAL .)
    DECREMENT_OP    reduce using rule 59 (number -> OCTAL .)
    OR_STR_OP       reduce using rule 59 (number -> OCTAL .)
    XOR_STR_OP      reduce using rule 59 (number -> OCTAL .)
    AND_STR_OP      reduce using rule 59 (number -> OCTAL .)
    NOT_STR_OP      reduce using rule 59 (number -> OCTAL .)
    COMMA           reduce using rule 59 (number -> OCTAL .)
    ASSOCIATE_OP    reduce using rule 59 (number -> OCTAL .)
    ADV_ASSIGNMENT_OP reduce using rule 59 (number -> OCTAL .)
    ASSIGNMENT_OP   reduce using rule 59 (number -> OCTAL .)
    RANGE_OP        reduce using rule 59 (number -> OCTAL .)
    OR_OP           reduce using rule 59 (number -> OCTAL .)
    AND_OP          reduce using rule 59 (number -> OCTAL .)
    BIT_OR          reduce using rule 59 (number -> OCTAL .)
    BIT_XOR         reduce using rule 59 (number -> OCTAL .)
    BIT_AND         reduce using rule 59 (number -> OCTAL .)
    EQUALS_OP       reduce using rule 59 (number -> OCTAL .)
    NOT_EQUALS_OP   reduce using rule 59 (number -> OCTAL .)
    COMPARE_OP      reduce using rule 59 (number -> OCTAL .)
    GREATER_OP      reduce using rule 59 (number -> OCTAL .)
    LESS_OP         reduce using rule 59 (number -> OCTAL .)
    GREATER_EQUAL_OP reduce using rule 59 (number -> OCTAL .)
    LESS_EQUAL_OP   reduce using rule 59 (number -> OCTAL .)
    BIT_RIGHT_SHIFT reduce using rule 59 (number -> OCTAL .)
    BIT_LEFT_SHIFT  reduce using rule 59 (number -> OCTAL .)
    PLUS_OP         reduce using rule 59 (number -> OCTAL .)
    MINUS_OP        reduce using rule 59 (number -> OCTAL .)
    CONCATENATE     reduce using rule 59 (number -> OCTAL .)
    MULTIPLICATION_OP reduce using rule 59 (number -> OCTAL .)
    DIVISION_OP     reduce using rule 59 (number -> OCTAL .)
    MODULUS_OP      reduce using rule 59 (number -> OCTAL .)
    REP_OP          reduce using rule 59 (number -> OCTAL .)
    SEARCH_MODIFY   reduce using rule 59 (number -> OCTAL .)
    SEARCH_MODIFY_NEG reduce using rule 59 (number -> OCTAL .)
    EXPONENT_OP     reduce using rule 59 (number -> OCTAL .)
    SEMICOLON       reduce using rule 59 (number -> OCTAL .)
    CLOSE_PARANTHESIS reduce using rule 59 (number -> OCTAL .)


state 63

    (75) expression -> INCREMENT_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 101
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 64

    (57) number -> FLOAT .

    INCREMENT_OP    reduce using rule 57 (number -> FLOAT .)
    DECREMENT_OP    reduce using rule 57 (number -> FLOAT .)
    OR_STR_OP       reduce using rule 57 (number -> FLOAT .)
    XOR_STR_OP      reduce using rule 57 (number -> FLOAT .)
    AND_STR_OP      reduce using rule 57 (number -> FLOAT .)
    NOT_STR_OP      reduce using rule 57 (number -> FLOAT .)
    COMMA           reduce using rule 57 (number -> FLOAT .)
    ASSOCIATE_OP    reduce using rule 57 (number -> FLOAT .)
    ADV_ASSIGNMENT_OP reduce using rule 57 (number -> FLOAT .)
    ASSIGNMENT_OP   reduce using rule 57 (number -> FLOAT .)
    RANGE_OP        reduce using rule 57 (number -> FLOAT .)
    OR_OP           reduce using rule 57 (number -> FLOAT .)
    AND_OP          reduce using rule 57 (number -> FLOAT .)
    BIT_OR          reduce using rule 57 (number -> FLOAT .)
    BIT_XOR         reduce using rule 57 (number -> FLOAT .)
    BIT_AND         reduce using rule 57 (number -> FLOAT .)
    EQUALS_OP       reduce using rule 57 (number -> FLOAT .)
    NOT_EQUALS_OP   reduce using rule 57 (number -> FLOAT .)
    COMPARE_OP      reduce using rule 57 (number -> FLOAT .)
    GREATER_OP      reduce using rule 57 (number -> FLOAT .)
    LESS_OP         reduce using rule 57 (number -> FLOAT .)
    GREATER_EQUAL_OP reduce using rule 57 (number -> FLOAT .)
    LESS_EQUAL_OP   reduce using rule 57 (number -> FLOAT .)
    BIT_RIGHT_SHIFT reduce using rule 57 (number -> FLOAT .)
    BIT_LEFT_SHIFT  reduce using rule 57 (number -> FLOAT .)
    PLUS_OP         reduce using rule 57 (number -> FLOAT .)
    MINUS_OP        reduce using rule 57 (number -> FLOAT .)
    CONCATENATE     reduce using rule 57 (number -> FLOAT .)
    MULTIPLICATION_OP reduce using rule 57 (number -> FLOAT .)
    DIVISION_OP     reduce using rule 57 (number -> FLOAT .)
    MODULUS_OP      reduce using rule 57 (number -> FLOAT .)
    REP_OP          reduce using rule 57 (number -> FLOAT .)
    SEARCH_MODIFY   reduce using rule 57 (number -> FLOAT .)
    SEARCH_MODIFY_NEG reduce using rule 57 (number -> FLOAT .)
    EXPONENT_OP     reduce using rule 57 (number -> FLOAT .)
    SEMICOLON       reduce using rule 57 (number -> FLOAT .)
    CLOSE_PARANTHESIS reduce using rule 57 (number -> FLOAT .)


state 65

    (71) expression -> PLUS_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 102
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 66

    (33) printStatement -> PRINT expression . SEMICOLON
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    SEMICOLON       shift and go to state 114
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    OR_STR_OP       shift and go to state 127
    XOR_STR_OP      shift and go to state 122
    AND_STR_OP      shift and go to state 115
    NOT_STR_OP      shift and go to state 109
    COMMA           shift and go to state 118
    ASSOCIATE_OP    shift and go to state 126
    ADV_ASSIGNMENT_OP shift and go to state 134
    ASSIGNMENT_OP   shift and go to state 120
    RANGE_OP        shift and go to state 111
    OR_OP           shift and go to state 116
    AND_OP          shift and go to state 128
    BIT_OR          shift and go to state 135
    BIT_XOR         shift and go to state 112
    BIT_AND         shift and go to state 123
    EQUALS_OP       shift and go to state 105
    NOT_EQUALS_OP   shift and go to state 107
    COMPARE_OP      shift and go to state 106
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108


state 67

    (67) term -> OPEN_PARANTHESIS . expression CLOSE_PARANTHESIS
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 95
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 68

    (66) term -> string .

    INCREMENT_OP    reduce using rule 66 (term -> string .)
    DECREMENT_OP    reduce using rule 66 (term -> string .)
    OR_STR_OP       reduce using rule 66 (term -> string .)
    XOR_STR_OP      reduce using rule 66 (term -> string .)
    AND_STR_OP      reduce using rule 66 (term -> string .)
    NOT_STR_OP      reduce using rule 66 (term -> string .)
    COMMA           reduce using rule 66 (term -> string .)
    ASSOCIATE_OP    reduce using rule 66 (term -> string .)
    ADV_ASSIGNMENT_OP reduce using rule 66 (term -> string .)
    ASSIGNMENT_OP   reduce using rule 66 (term -> string .)
    RANGE_OP        reduce using rule 66 (term -> string .)
    OR_OP           reduce using rule 66 (term -> string .)
    AND_OP          reduce using rule 66 (term -> string .)
    BIT_OR          reduce using rule 66 (term -> string .)
    BIT_XOR         reduce using rule 66 (term -> string .)
    BIT_AND         reduce using rule 66 (term -> string .)
    EQUALS_OP       reduce using rule 66 (term -> string .)
    NOT_EQUALS_OP   reduce using rule 66 (term -> string .)
    COMPARE_OP      reduce using rule 66 (term -> string .)
    GREATER_OP      reduce using rule 66 (term -> string .)
    LESS_OP         reduce using rule 66 (term -> string .)
    GREATER_EQUAL_OP reduce using rule 66 (term -> string .)
    LESS_EQUAL_OP   reduce using rule 66 (term -> string .)
    BIT_RIGHT_SHIFT reduce using rule 66 (term -> string .)
    BIT_LEFT_SHIFT  reduce using rule 66 (term -> string .)
    PLUS_OP         reduce using rule 66 (term -> string .)
    MINUS_OP        reduce using rule 66 (term -> string .)
    CONCATENATE     reduce using rule 66 (term -> string .)
    MULTIPLICATION_OP reduce using rule 66 (term -> string .)
    DIVISION_OP     reduce using rule 66 (term -> string .)
    MODULUS_OP      reduce using rule 66 (term -> string .)
    REP_OP          reduce using rule 66 (term -> string .)
    SEARCH_MODIFY   reduce using rule 66 (term -> string .)
    SEARCH_MODIFY_NEG reduce using rule 66 (term -> string .)
    EXPONENT_OP     reduce using rule 66 (term -> string .)
    SEMICOLON       reduce using rule 66 (term -> string .)
    CLOSE_PARANTHESIS reduce using rule 66 (term -> string .)


state 69

    (34) returnStatement -> RETURN expression . SEMICOLON
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    SEMICOLON       shift and go to state 139
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    OR_STR_OP       shift and go to state 127
    XOR_STR_OP      shift and go to state 122
    AND_STR_OP      shift and go to state 115
    NOT_STR_OP      shift and go to state 109
    COMMA           shift and go to state 118
    ASSOCIATE_OP    shift and go to state 126
    ADV_ASSIGNMENT_OP shift and go to state 134
    ASSIGNMENT_OP   shift and go to state 120
    RANGE_OP        shift and go to state 111
    OR_OP           shift and go to state 116
    AND_OP          shift and go to state 128
    BIT_OR          shift and go to state 135
    BIT_XOR         shift and go to state 112
    BIT_AND         shift and go to state 123
    EQUALS_OP       shift and go to state 105
    NOT_EQUALS_OP   shift and go to state 107
    COMPARE_OP      shift and go to state 106
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108


state 70

    (28) lastStatement -> LAST SEMICOLON .

    RETURN          reduce using rule 28 (lastStatement -> LAST SEMICOLON .)
    IDENTIFIER      reduce using rule 28 (lastStatement -> LAST SEMICOLON .)
    WHILE           reduce using rule 28 (lastStatement -> LAST SEMICOLON .)
    FOR             reduce using rule 28 (lastStatement -> LAST SEMICOLON .)
    PRINT           reduce using rule 28 (lastStatement -> LAST SEMICOLON .)
    SUB             reduce using rule 28 (lastStatement -> LAST SEMICOLON .)
    LAST            reduce using rule 28 (lastStatement -> LAST SEMICOLON .)
    NEXT            reduce using rule 28 (lastStatement -> LAST SEMICOLON .)
    IF              reduce using rule 28 (lastStatement -> LAST SEMICOLON .)
    USE             reduce using rule 28 (lastStatement -> LAST SEMICOLON .)
    SWITCH          reduce using rule 28 (lastStatement -> LAST SEMICOLON .)
    PRIVATE         reduce using rule 28 (lastStatement -> LAST SEMICOLON .)
    LOCAL           reduce using rule 28 (lastStatement -> LAST SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 28 (lastStatement -> LAST SEMICOLON .)
    ARRAY           reduce using rule 28 (lastStatement -> LAST SEMICOLON .)
    HASH            reduce using rule 28 (lastStatement -> LAST SEMICOLON .)
    VARIABLE        reduce using rule 28 (lastStatement -> LAST SEMICOLON .)
    $end            reduce using rule 28 (lastStatement -> LAST SEMICOLON .)
    BLOCK_ENDS      reduce using rule 28 (lastStatement -> LAST SEMICOLON .)


state 71

    (22) switchStatement -> SWITCH lefthandside . BLOCK_BEGIN caselist BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 140


state 72

    (39) lefthandside -> PRIVATE OPEN_PARANTHESIS . type decList CLOSE_PARANTHESIS
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8

    variable                       shift and go to state 34
    type                           shift and go to state 141

state 73

    (38) lefthandside -> PRIVATE type . decList
    (45) decList -> . COMMA type decList
    (46) decList -> . empty
    (6) empty -> .

    COMMA           shift and go to state 88
    SEMICOLON       reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    BLOCK_BEGIN     reduce using rule 6 (empty -> .)

    empty                          shift and go to state 89
    decList                        shift and go to state 142

state 74

    (29) nextStatement -> NEXT SEMICOLON .

    RETURN          reduce using rule 29 (nextStatement -> NEXT SEMICOLON .)
    IDENTIFIER      reduce using rule 29 (nextStatement -> NEXT SEMICOLON .)
    WHILE           reduce using rule 29 (nextStatement -> NEXT SEMICOLON .)
    FOR             reduce using rule 29 (nextStatement -> NEXT SEMICOLON .)
    PRINT           reduce using rule 29 (nextStatement -> NEXT SEMICOLON .)
    SUB             reduce using rule 29 (nextStatement -> NEXT SEMICOLON .)
    LAST            reduce using rule 29 (nextStatement -> NEXT SEMICOLON .)
    NEXT            reduce using rule 29 (nextStatement -> NEXT SEMICOLON .)
    IF              reduce using rule 29 (nextStatement -> NEXT SEMICOLON .)
    USE             reduce using rule 29 (nextStatement -> NEXT SEMICOLON .)
    SWITCH          reduce using rule 29 (nextStatement -> NEXT SEMICOLON .)
    PRIVATE         reduce using rule 29 (nextStatement -> NEXT SEMICOLON .)
    LOCAL           reduce using rule 29 (nextStatement -> NEXT SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 29 (nextStatement -> NEXT SEMICOLON .)
    ARRAY           reduce using rule 29 (nextStatement -> NEXT SEMICOLON .)
    HASH            reduce using rule 29 (nextStatement -> NEXT SEMICOLON .)
    VARIABLE        reduce using rule 29 (nextStatement -> NEXT SEMICOLON .)
    $end            reduce using rule 29 (nextStatement -> NEXT SEMICOLON .)
    BLOCK_ENDS      reduce using rule 29 (nextStatement -> NEXT SEMICOLON .)


state 75

    (4) statements -> statement statements .

    BLOCK_ENDS      reduce using rule 4 (statements -> statement statements .)
    $end            reduce using rule 4 (statements -> statement statements .)


state 76

    (47) functionCall -> IDENTIFIER OPEN_PARANTHESIS . parameters CLOSE_PARANTHESIS SEMICOLON
    (48) parameters -> . expression COMMA parameters
    (49) parameters -> . expression
    (50) parameters -> . empty
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    parameters                     shift and go to state 144
    expression                     shift and go to state 145
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 143

state 77

    (52) forStatement -> FOR OPEN_PARANTHESIS . expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    SEMICOLON       reduce using rule 6 (empty -> .)
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 146
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 78

    (35) assignment -> lefthandside assignmenttype . expression SEMICOLON
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    SEMICOLON       reduce using rule 6 (empty -> .)
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    type                           shift and go to state 54
    number                         shift and go to state 48
    variable                       shift and go to state 59
    expression                     shift and go to state 147
    empty                          shift and go to state 55
    string                         shift and go to state 68

state 79

    (44) declaration -> lefthandside SEMICOLON .

    RETURN          reduce using rule 44 (declaration -> lefthandside SEMICOLON .)
    IDENTIFIER      reduce using rule 44 (declaration -> lefthandside SEMICOLON .)
    WHILE           reduce using rule 44 (declaration -> lefthandside SEMICOLON .)
    FOR             reduce using rule 44 (declaration -> lefthandside SEMICOLON .)
    PRINT           reduce using rule 44 (declaration -> lefthandside SEMICOLON .)
    SUB             reduce using rule 44 (declaration -> lefthandside SEMICOLON .)
    LAST            reduce using rule 44 (declaration -> lefthandside SEMICOLON .)
    NEXT            reduce using rule 44 (declaration -> lefthandside SEMICOLON .)
    IF              reduce using rule 44 (declaration -> lefthandside SEMICOLON .)
    USE             reduce using rule 44 (declaration -> lefthandside SEMICOLON .)
    SWITCH          reduce using rule 44 (declaration -> lefthandside SEMICOLON .)
    PRIVATE         reduce using rule 44 (declaration -> lefthandside SEMICOLON .)
    LOCAL           reduce using rule 44 (declaration -> lefthandside SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 44 (declaration -> lefthandside SEMICOLON .)
    ARRAY           reduce using rule 44 (declaration -> lefthandside SEMICOLON .)
    HASH            reduce using rule 44 (declaration -> lefthandside SEMICOLON .)
    VARIABLE        reduce using rule 44 (declaration -> lefthandside SEMICOLON .)
    $end            reduce using rule 44 (declaration -> lefthandside SEMICOLON .)
    BLOCK_ENDS      reduce using rule 44 (declaration -> lefthandside SEMICOLON .)


state 80

    (36) assignmenttype -> ADV_ASSIGNMENT_OP .

    PLUS_OP         reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    MINUS_OP        reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    BIT_FLIP        reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    NOT_OP          reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    INCREMENT_OP    reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    DECREMENT_OP    reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    OPEN_PARANTHESIS reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    NUMBER          reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    SCI_NOT         reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    FLOAT           reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    HEXADECIMAL     reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    OCTAL           reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    ARRAY           reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    HASH            reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    VARIABLE        reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    STRING          reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    RES_STRING      reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    SEMICOLON       reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    OR_STR_OP       reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    XOR_STR_OP      reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    AND_STR_OP      reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    NOT_STR_OP      reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    COMMA           reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    ASSOCIATE_OP    reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    ADV_ASSIGNMENT_OP reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    ASSIGNMENT_OP   reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    RANGE_OP        reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    OR_OP           reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    AND_OP          reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    BIT_OR          reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    BIT_XOR         reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    BIT_AND         reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    EQUALS_OP       reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    NOT_EQUALS_OP   reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    COMPARE_OP      reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    GREATER_OP      reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    LESS_OP         reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    GREATER_EQUAL_OP reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    LESS_EQUAL_OP   reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    BIT_RIGHT_SHIFT reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    BIT_LEFT_SHIFT  reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    CONCATENATE     reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    MULTIPLICATION_OP reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    DIVISION_OP     reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    MODULUS_OP      reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    REP_OP          reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    SEARCH_MODIFY   reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    SEARCH_MODIFY_NEG reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    EXPONENT_OP     reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)


state 81

    (37) assignmenttype -> ASSIGNMENT_OP .

    PLUS_OP         reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    MINUS_OP        reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    BIT_FLIP        reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    NOT_OP          reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    INCREMENT_OP    reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    DECREMENT_OP    reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    OPEN_PARANTHESIS reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    NUMBER          reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    SCI_NOT         reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    FLOAT           reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    HEXADECIMAL     reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    OCTAL           reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    ARRAY           reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    HASH            reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    VARIABLE        reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    STRING          reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    RES_STRING      reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    SEMICOLON       reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    OR_STR_OP       reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    XOR_STR_OP      reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    AND_STR_OP      reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    NOT_STR_OP      reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    COMMA           reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    ASSOCIATE_OP    reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    ADV_ASSIGNMENT_OP reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    ASSIGNMENT_OP   reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    RANGE_OP        reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    OR_OP           reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    AND_OP          reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    BIT_OR          reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    BIT_XOR         reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    BIT_AND         reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    EQUALS_OP       reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    NOT_EQUALS_OP   reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    COMPARE_OP      reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    GREATER_OP      reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    LESS_OP         reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    GREATER_EQUAL_OP reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    LESS_EQUAL_OP   reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    BIT_RIGHT_SHIFT reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    BIT_LEFT_SHIFT  reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    CONCATENATE     reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    MULTIPLICATION_OP reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    DIVISION_OP     reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    MODULUS_OP      reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    REP_OP          reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    SEARCH_MODIFY   reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    SEARCH_MODIFY_NEG reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    EXPONENT_OP     reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)


state 82

    (30) functionStatement -> SUB IDENTIFIER . block
    (3) block -> . BLOCK_BEGIN statements BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 7

    block                          shift and go to state 148

state 83

    (41) lefthandside -> LOCAL OPEN_PARANTHESIS . type decList CLOSE_PARANTHESIS
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8

    variable                       shift and go to state 34
    type                           shift and go to state 149

state 84

    (40) lefthandside -> LOCAL type . decList
    (45) decList -> . COMMA type decList
    (46) decList -> . empty
    (6) empty -> .

    COMMA           shift and go to state 88
    SEMICOLON       reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    BLOCK_BEGIN     reduce using rule 6 (empty -> .)

    empty                          shift and go to state 89
    decList                        shift and go to state 150

state 85

    (26) ifthen -> IF OPEN_PARANTHESIS . expression CLOSE_PARANTHESIS block
    (27) ifthenelse -> IF OPEN_PARANTHESIS . expression CLOSE_PARANTHESIS block ELSE block
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 151
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 86

    (21) useStatement -> USE IDENTIFIER SEMICOLON .

    RETURN          reduce using rule 21 (useStatement -> USE IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 21 (useStatement -> USE IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 21 (useStatement -> USE IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 21 (useStatement -> USE IDENTIFIER SEMICOLON .)
    PRINT           reduce using rule 21 (useStatement -> USE IDENTIFIER SEMICOLON .)
    SUB             reduce using rule 21 (useStatement -> USE IDENTIFIER SEMICOLON .)
    LAST            reduce using rule 21 (useStatement -> USE IDENTIFIER SEMICOLON .)
    NEXT            reduce using rule 21 (useStatement -> USE IDENTIFIER SEMICOLON .)
    IF              reduce using rule 21 (useStatement -> USE IDENTIFIER SEMICOLON .)
    USE             reduce using rule 21 (useStatement -> USE IDENTIFIER SEMICOLON .)
    SWITCH          reduce using rule 21 (useStatement -> USE IDENTIFIER SEMICOLON .)
    PRIVATE         reduce using rule 21 (useStatement -> USE IDENTIFIER SEMICOLON .)
    LOCAL           reduce using rule 21 (useStatement -> USE IDENTIFIER SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 21 (useStatement -> USE IDENTIFIER SEMICOLON .)
    ARRAY           reduce using rule 21 (useStatement -> USE IDENTIFIER SEMICOLON .)
    HASH            reduce using rule 21 (useStatement -> USE IDENTIFIER SEMICOLON .)
    VARIABLE        reduce using rule 21 (useStatement -> USE IDENTIFIER SEMICOLON .)
    $end            reduce using rule 21 (useStatement -> USE IDENTIFIER SEMICOLON .)
    BLOCK_ENDS      reduce using rule 21 (useStatement -> USE IDENTIFIER SEMICOLON .)


state 87

    (42) lefthandside -> OPEN_PARANTHESIS type decList . CLOSE_PARANTHESIS

    CLOSE_PARANTHESIS shift and go to state 152


state 88

    (45) decList -> COMMA . type decList
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8

    variable                       shift and go to state 34
    type                           shift and go to state 153

state 89

    (46) decList -> empty .

    CLOSE_PARANTHESIS reduce using rule 46 (decList -> empty .)
    SEMICOLON       reduce using rule 46 (decList -> empty .)
    ADV_ASSIGNMENT_OP reduce using rule 46 (decList -> empty .)
    ASSIGNMENT_OP   reduce using rule 46 (decList -> empty .)
    BLOCK_BEGIN     reduce using rule 46 (decList -> empty .)


state 90

    (3) block -> BLOCK_BEGIN statements BLOCK_ENDS .

    RETURN          reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    IDENTIFIER      reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    WHILE           reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    FOR             reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    PRINT           reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    SUB             reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    LAST            reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    NEXT            reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    IF              reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    USE             reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    SWITCH          reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    PRIVATE         reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    LOCAL           reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    OPEN_PARANTHESIS reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    ARRAY           reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    HASH            reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    VARIABLE        reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    $end            reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    BLOCK_ENDS      reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    CASE            reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    ELSE            reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)


state 91

    (61) variable -> VARIABLE OPEN_BRACKET NUMBER . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 154


state 92

    (62) variable -> VARIABLE BLOCK_BEGIN string . BLOCK_ENDS

    BLOCK_ENDS      shift and go to state 155


state 93

    (51) whileStatement -> WHILE OPEN_PARANTHESIS expression . CLOSE_PARANTHESIS block
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS shift and go to state 156
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    OR_STR_OP       shift and go to state 127
    XOR_STR_OP      shift and go to state 122
    AND_STR_OP      shift and go to state 115
    NOT_STR_OP      shift and go to state 109
    COMMA           shift and go to state 118
    ASSOCIATE_OP    shift and go to state 126
    ADV_ASSIGNMENT_OP shift and go to state 134
    ASSIGNMENT_OP   shift and go to state 120
    RANGE_OP        shift and go to state 111
    OR_OP           shift and go to state 116
    AND_OP          shift and go to state 128
    BIT_OR          shift and go to state 135
    BIT_XOR         shift and go to state 112
    BIT_AND         shift and go to state 123
    EQUALS_OP       shift and go to state 105
    NOT_EQUALS_OP   shift and go to state 107
    COMPARE_OP      shift and go to state 106
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108


state 94

    (31) printStatement -> PRINT OPEN_PARANTHESIS string . CLOSE_PARANTHESIS SEMICOLON
    (66) term -> string .

  ! shift/reduce conflict for CLOSE_PARANTHESIS resolved as shift
    CLOSE_PARANTHESIS shift and go to state 157
    INCREMENT_OP    reduce using rule 66 (term -> string .)
    DECREMENT_OP    reduce using rule 66 (term -> string .)
    OR_STR_OP       reduce using rule 66 (term -> string .)
    XOR_STR_OP      reduce using rule 66 (term -> string .)
    AND_STR_OP      reduce using rule 66 (term -> string .)
    NOT_STR_OP      reduce using rule 66 (term -> string .)
    COMMA           reduce using rule 66 (term -> string .)
    ASSOCIATE_OP    reduce using rule 66 (term -> string .)
    ADV_ASSIGNMENT_OP reduce using rule 66 (term -> string .)
    ASSIGNMENT_OP   reduce using rule 66 (term -> string .)
    RANGE_OP        reduce using rule 66 (term -> string .)
    OR_OP           reduce using rule 66 (term -> string .)
    AND_OP          reduce using rule 66 (term -> string .)
    BIT_OR          reduce using rule 66 (term -> string .)
    BIT_XOR         reduce using rule 66 (term -> string .)
    BIT_AND         reduce using rule 66 (term -> string .)
    EQUALS_OP       reduce using rule 66 (term -> string .)
    NOT_EQUALS_OP   reduce using rule 66 (term -> string .)
    COMPARE_OP      reduce using rule 66 (term -> string .)
    GREATER_OP      reduce using rule 66 (term -> string .)
    LESS_OP         reduce using rule 66 (term -> string .)
    GREATER_EQUAL_OP reduce using rule 66 (term -> string .)
    LESS_EQUAL_OP   reduce using rule 66 (term -> string .)
    BIT_RIGHT_SHIFT reduce using rule 66 (term -> string .)
    BIT_LEFT_SHIFT  reduce using rule 66 (term -> string .)
    PLUS_OP         reduce using rule 66 (term -> string .)
    MINUS_OP        reduce using rule 66 (term -> string .)
    CONCATENATE     reduce using rule 66 (term -> string .)
    MULTIPLICATION_OP reduce using rule 66 (term -> string .)
    DIVISION_OP     reduce using rule 66 (term -> string .)
    MODULUS_OP      reduce using rule 66 (term -> string .)
    REP_OP          reduce using rule 66 (term -> string .)
    SEARCH_MODIFY   reduce using rule 66 (term -> string .)
    SEARCH_MODIFY_NEG reduce using rule 66 (term -> string .)
    EXPONENT_OP     reduce using rule 66 (term -> string .)

  ! CLOSE_PARANTHESIS [ reduce using rule 66 (term -> string .) ]


state 95

    (67) term -> OPEN_PARANTHESIS expression . CLOSE_PARANTHESIS
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS shift and go to state 158
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    OR_STR_OP       shift and go to state 127
    XOR_STR_OP      shift and go to state 122
    AND_STR_OP      shift and go to state 115
    NOT_STR_OP      shift and go to state 109
    COMMA           shift and go to state 118
    ASSOCIATE_OP    shift and go to state 126
    ADV_ASSIGNMENT_OP shift and go to state 134
    ASSIGNMENT_OP   shift and go to state 120
    RANGE_OP        shift and go to state 111
    OR_OP           shift and go to state 116
    AND_OP          shift and go to state 128
    BIT_OR          shift and go to state 135
    BIT_XOR         shift and go to state 112
    BIT_AND         shift and go to state 123
    EQUALS_OP       shift and go to state 105
    NOT_EQUALS_OP   shift and go to state 107
    COMPARE_OP      shift and go to state 106
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108


state 96

    (72) expression -> MINUS_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 72 (expression -> MINUS_OP expression .)
    XOR_STR_OP      reduce using rule 72 (expression -> MINUS_OP expression .)
    AND_STR_OP      reduce using rule 72 (expression -> MINUS_OP expression .)
    NOT_STR_OP      reduce using rule 72 (expression -> MINUS_OP expression .)
    COMMA           reduce using rule 72 (expression -> MINUS_OP expression .)
    ASSOCIATE_OP    reduce using rule 72 (expression -> MINUS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 72 (expression -> MINUS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 72 (expression -> MINUS_OP expression .)
    RANGE_OP        reduce using rule 72 (expression -> MINUS_OP expression .)
    OR_OP           reduce using rule 72 (expression -> MINUS_OP expression .)
    AND_OP          reduce using rule 72 (expression -> MINUS_OP expression .)
    BIT_OR          reduce using rule 72 (expression -> MINUS_OP expression .)
    BIT_XOR         reduce using rule 72 (expression -> MINUS_OP expression .)
    BIT_AND         reduce using rule 72 (expression -> MINUS_OP expression .)
    EQUALS_OP       reduce using rule 72 (expression -> MINUS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 72 (expression -> MINUS_OP expression .)
    COMPARE_OP      reduce using rule 72 (expression -> MINUS_OP expression .)
    GREATER_OP      reduce using rule 72 (expression -> MINUS_OP expression .)
    LESS_OP         reduce using rule 72 (expression -> MINUS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 72 (expression -> MINUS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 72 (expression -> MINUS_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 72 (expression -> MINUS_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 72 (expression -> MINUS_OP expression .)
    PLUS_OP         reduce using rule 72 (expression -> MINUS_OP expression .)
    MINUS_OP        reduce using rule 72 (expression -> MINUS_OP expression .)
    CONCATENATE     reduce using rule 72 (expression -> MINUS_OP expression .)
    MULTIPLICATION_OP reduce using rule 72 (expression -> MINUS_OP expression .)
    DIVISION_OP     reduce using rule 72 (expression -> MINUS_OP expression .)
    MODULUS_OP      reduce using rule 72 (expression -> MINUS_OP expression .)
    REP_OP          reduce using rule 72 (expression -> MINUS_OP expression .)
    SEARCH_MODIFY   reduce using rule 72 (expression -> MINUS_OP expression .)
    SEARCH_MODIFY_NEG reduce using rule 72 (expression -> MINUS_OP expression .)
    SEMICOLON       reduce using rule 72 (expression -> MINUS_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 72 (expression -> MINUS_OP expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 72 (expression -> MINUS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 72 (expression -> MINUS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 72 (expression -> MINUS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]
  ! BIT_OR          [ shift and go to state 135 ]
  ! BIT_XOR         [ shift and go to state 112 ]
  ! BIT_AND         [ shift and go to state 123 ]
  ! EQUALS_OP       [ shift and go to state 105 ]
  ! NOT_EQUALS_OP   [ shift and go to state 107 ]
  ! COMPARE_OP      [ shift and go to state 106 ]
  ! GREATER_OP      [ shift and go to state 138 ]
  ! LESS_OP         [ shift and go to state 117 ]
  ! GREATER_EQUAL_OP [ shift and go to state 121 ]
  ! LESS_EQUAL_OP   [ shift and go to state 104 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 133 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 129 ]
  ! PLUS_OP         [ shift and go to state 136 ]
  ! MINUS_OP        [ shift and go to state 113 ]
  ! CONCATENATE     [ shift and go to state 131 ]
  ! MULTIPLICATION_OP [ shift and go to state 124 ]
  ! DIVISION_OP     [ shift and go to state 110 ]
  ! MODULUS_OP      [ shift and go to state 119 ]
  ! REP_OP          [ shift and go to state 130 ]
  ! SEARCH_MODIFY   [ shift and go to state 103 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 137 ]


state 97

    (74) expression -> NOT_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 74 (expression -> NOT_OP expression .)
    XOR_STR_OP      reduce using rule 74 (expression -> NOT_OP expression .)
    AND_STR_OP      reduce using rule 74 (expression -> NOT_OP expression .)
    NOT_STR_OP      reduce using rule 74 (expression -> NOT_OP expression .)
    COMMA           reduce using rule 74 (expression -> NOT_OP expression .)
    ASSOCIATE_OP    reduce using rule 74 (expression -> NOT_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 74 (expression -> NOT_OP expression .)
    ASSIGNMENT_OP   reduce using rule 74 (expression -> NOT_OP expression .)
    RANGE_OP        reduce using rule 74 (expression -> NOT_OP expression .)
    OR_OP           reduce using rule 74 (expression -> NOT_OP expression .)
    AND_OP          reduce using rule 74 (expression -> NOT_OP expression .)
    BIT_OR          reduce using rule 74 (expression -> NOT_OP expression .)
    BIT_XOR         reduce using rule 74 (expression -> NOT_OP expression .)
    BIT_AND         reduce using rule 74 (expression -> NOT_OP expression .)
    EQUALS_OP       reduce using rule 74 (expression -> NOT_OP expression .)
    NOT_EQUALS_OP   reduce using rule 74 (expression -> NOT_OP expression .)
    COMPARE_OP      reduce using rule 74 (expression -> NOT_OP expression .)
    GREATER_OP      reduce using rule 74 (expression -> NOT_OP expression .)
    LESS_OP         reduce using rule 74 (expression -> NOT_OP expression .)
    GREATER_EQUAL_OP reduce using rule 74 (expression -> NOT_OP expression .)
    LESS_EQUAL_OP   reduce using rule 74 (expression -> NOT_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 74 (expression -> NOT_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 74 (expression -> NOT_OP expression .)
    PLUS_OP         reduce using rule 74 (expression -> NOT_OP expression .)
    MINUS_OP        reduce using rule 74 (expression -> NOT_OP expression .)
    CONCATENATE     reduce using rule 74 (expression -> NOT_OP expression .)
    MULTIPLICATION_OP reduce using rule 74 (expression -> NOT_OP expression .)
    DIVISION_OP     reduce using rule 74 (expression -> NOT_OP expression .)
    MODULUS_OP      reduce using rule 74 (expression -> NOT_OP expression .)
    REP_OP          reduce using rule 74 (expression -> NOT_OP expression .)
    SEARCH_MODIFY   reduce using rule 74 (expression -> NOT_OP expression .)
    SEARCH_MODIFY_NEG reduce using rule 74 (expression -> NOT_OP expression .)
    SEMICOLON       reduce using rule 74 (expression -> NOT_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 74 (expression -> NOT_OP expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 74 (expression -> NOT_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 74 (expression -> NOT_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 74 (expression -> NOT_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]
  ! BIT_OR          [ shift and go to state 135 ]
  ! BIT_XOR         [ shift and go to state 112 ]
  ! BIT_AND         [ shift and go to state 123 ]
  ! EQUALS_OP       [ shift and go to state 105 ]
  ! NOT_EQUALS_OP   [ shift and go to state 107 ]
  ! COMPARE_OP      [ shift and go to state 106 ]
  ! GREATER_OP      [ shift and go to state 138 ]
  ! LESS_OP         [ shift and go to state 117 ]
  ! GREATER_EQUAL_OP [ shift and go to state 121 ]
  ! LESS_EQUAL_OP   [ shift and go to state 104 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 133 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 129 ]
  ! PLUS_OP         [ shift and go to state 136 ]
  ! MINUS_OP        [ shift and go to state 113 ]
  ! CONCATENATE     [ shift and go to state 131 ]
  ! MULTIPLICATION_OP [ shift and go to state 124 ]
  ! DIVISION_OP     [ shift and go to state 110 ]
  ! MODULUS_OP      [ shift and go to state 119 ]
  ! REP_OP          [ shift and go to state 130 ]
  ! SEARCH_MODIFY   [ shift and go to state 103 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 137 ]


state 98

    (73) expression -> BIT_FLIP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 73 (expression -> BIT_FLIP expression .)
    XOR_STR_OP      reduce using rule 73 (expression -> BIT_FLIP expression .)
    AND_STR_OP      reduce using rule 73 (expression -> BIT_FLIP expression .)
    NOT_STR_OP      reduce using rule 73 (expression -> BIT_FLIP expression .)
    COMMA           reduce using rule 73 (expression -> BIT_FLIP expression .)
    ASSOCIATE_OP    reduce using rule 73 (expression -> BIT_FLIP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 73 (expression -> BIT_FLIP expression .)
    ASSIGNMENT_OP   reduce using rule 73 (expression -> BIT_FLIP expression .)
    RANGE_OP        reduce using rule 73 (expression -> BIT_FLIP expression .)
    OR_OP           reduce using rule 73 (expression -> BIT_FLIP expression .)
    AND_OP          reduce using rule 73 (expression -> BIT_FLIP expression .)
    BIT_OR          reduce using rule 73 (expression -> BIT_FLIP expression .)
    BIT_XOR         reduce using rule 73 (expression -> BIT_FLIP expression .)
    BIT_AND         reduce using rule 73 (expression -> BIT_FLIP expression .)
    EQUALS_OP       reduce using rule 73 (expression -> BIT_FLIP expression .)
    NOT_EQUALS_OP   reduce using rule 73 (expression -> BIT_FLIP expression .)
    COMPARE_OP      reduce using rule 73 (expression -> BIT_FLIP expression .)
    GREATER_OP      reduce using rule 73 (expression -> BIT_FLIP expression .)
    LESS_OP         reduce using rule 73 (expression -> BIT_FLIP expression .)
    GREATER_EQUAL_OP reduce using rule 73 (expression -> BIT_FLIP expression .)
    LESS_EQUAL_OP   reduce using rule 73 (expression -> BIT_FLIP expression .)
    BIT_RIGHT_SHIFT reduce using rule 73 (expression -> BIT_FLIP expression .)
    BIT_LEFT_SHIFT  reduce using rule 73 (expression -> BIT_FLIP expression .)
    PLUS_OP         reduce using rule 73 (expression -> BIT_FLIP expression .)
    MINUS_OP        reduce using rule 73 (expression -> BIT_FLIP expression .)
    CONCATENATE     reduce using rule 73 (expression -> BIT_FLIP expression .)
    MULTIPLICATION_OP reduce using rule 73 (expression -> BIT_FLIP expression .)
    DIVISION_OP     reduce using rule 73 (expression -> BIT_FLIP expression .)
    MODULUS_OP      reduce using rule 73 (expression -> BIT_FLIP expression .)
    REP_OP          reduce using rule 73 (expression -> BIT_FLIP expression .)
    SEARCH_MODIFY   reduce using rule 73 (expression -> BIT_FLIP expression .)
    SEARCH_MODIFY_NEG reduce using rule 73 (expression -> BIT_FLIP expression .)
    SEMICOLON       reduce using rule 73 (expression -> BIT_FLIP expression .)
    CLOSE_PARANTHESIS reduce using rule 73 (expression -> BIT_FLIP expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 73 (expression -> BIT_FLIP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 73 (expression -> BIT_FLIP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 73 (expression -> BIT_FLIP expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]
  ! BIT_OR          [ shift and go to state 135 ]
  ! BIT_XOR         [ shift and go to state 112 ]
  ! BIT_AND         [ shift and go to state 123 ]
  ! EQUALS_OP       [ shift and go to state 105 ]
  ! NOT_EQUALS_OP   [ shift and go to state 107 ]
  ! COMPARE_OP      [ shift and go to state 106 ]
  ! GREATER_OP      [ shift and go to state 138 ]
  ! LESS_OP         [ shift and go to state 117 ]
  ! GREATER_EQUAL_OP [ shift and go to state 121 ]
  ! LESS_EQUAL_OP   [ shift and go to state 104 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 133 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 129 ]
  ! PLUS_OP         [ shift and go to state 136 ]
  ! MINUS_OP        [ shift and go to state 113 ]
  ! CONCATENATE     [ shift and go to state 131 ]
  ! MULTIPLICATION_OP [ shift and go to state 124 ]
  ! DIVISION_OP     [ shift and go to state 110 ]
  ! MODULUS_OP      [ shift and go to state 119 ]
  ! REP_OP          [ shift and go to state 130 ]
  ! SEARCH_MODIFY   [ shift and go to state 103 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 137 ]


state 99

    (76) expression -> DECREMENT_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    INCREMENT_OP    reduce using rule 76 (expression -> DECREMENT_OP expression .)
    DECREMENT_OP    reduce using rule 76 (expression -> DECREMENT_OP expression .)
    OR_STR_OP       reduce using rule 76 (expression -> DECREMENT_OP expression .)
    XOR_STR_OP      reduce using rule 76 (expression -> DECREMENT_OP expression .)
    AND_STR_OP      reduce using rule 76 (expression -> DECREMENT_OP expression .)
    NOT_STR_OP      reduce using rule 76 (expression -> DECREMENT_OP expression .)
    COMMA           reduce using rule 76 (expression -> DECREMENT_OP expression .)
    ASSOCIATE_OP    reduce using rule 76 (expression -> DECREMENT_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 76 (expression -> DECREMENT_OP expression .)
    ASSIGNMENT_OP   reduce using rule 76 (expression -> DECREMENT_OP expression .)
    RANGE_OP        reduce using rule 76 (expression -> DECREMENT_OP expression .)
    OR_OP           reduce using rule 76 (expression -> DECREMENT_OP expression .)
    AND_OP          reduce using rule 76 (expression -> DECREMENT_OP expression .)
    BIT_OR          reduce using rule 76 (expression -> DECREMENT_OP expression .)
    BIT_XOR         reduce using rule 76 (expression -> DECREMENT_OP expression .)
    BIT_AND         reduce using rule 76 (expression -> DECREMENT_OP expression .)
    EQUALS_OP       reduce using rule 76 (expression -> DECREMENT_OP expression .)
    NOT_EQUALS_OP   reduce using rule 76 (expression -> DECREMENT_OP expression .)
    COMPARE_OP      reduce using rule 76 (expression -> DECREMENT_OP expression .)
    GREATER_OP      reduce using rule 76 (expression -> DECREMENT_OP expression .)
    LESS_OP         reduce using rule 76 (expression -> DECREMENT_OP expression .)
    GREATER_EQUAL_OP reduce using rule 76 (expression -> DECREMENT_OP expression .)
    LESS_EQUAL_OP   reduce using rule 76 (expression -> DECREMENT_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 76 (expression -> DECREMENT_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 76 (expression -> DECREMENT_OP expression .)
    PLUS_OP         reduce using rule 76 (expression -> DECREMENT_OP expression .)
    MINUS_OP        reduce using rule 76 (expression -> DECREMENT_OP expression .)
    CONCATENATE     reduce using rule 76 (expression -> DECREMENT_OP expression .)
    MULTIPLICATION_OP reduce using rule 76 (expression -> DECREMENT_OP expression .)
    DIVISION_OP     reduce using rule 76 (expression -> DECREMENT_OP expression .)
    MODULUS_OP      reduce using rule 76 (expression -> DECREMENT_OP expression .)
    REP_OP          reduce using rule 76 (expression -> DECREMENT_OP expression .)
    SEARCH_MODIFY   reduce using rule 76 (expression -> DECREMENT_OP expression .)
    SEARCH_MODIFY_NEG reduce using rule 76 (expression -> DECREMENT_OP expression .)
    EXPONENT_OP     reduce using rule 76 (expression -> DECREMENT_OP expression .)
    SEMICOLON       reduce using rule 76 (expression -> DECREMENT_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 76 (expression -> DECREMENT_OP expression .)

  ! INCREMENT_OP    [ shift and go to state 132 ]
  ! DECREMENT_OP    [ shift and go to state 125 ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]
  ! BIT_OR          [ shift and go to state 135 ]
  ! BIT_XOR         [ shift and go to state 112 ]
  ! BIT_AND         [ shift and go to state 123 ]
  ! EQUALS_OP       [ shift and go to state 105 ]
  ! NOT_EQUALS_OP   [ shift and go to state 107 ]
  ! COMPARE_OP      [ shift and go to state 106 ]
  ! GREATER_OP      [ shift and go to state 138 ]
  ! LESS_OP         [ shift and go to state 117 ]
  ! GREATER_EQUAL_OP [ shift and go to state 121 ]
  ! LESS_EQUAL_OP   [ shift and go to state 104 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 133 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 129 ]
  ! PLUS_OP         [ shift and go to state 136 ]
  ! MINUS_OP        [ shift and go to state 113 ]
  ! CONCATENATE     [ shift and go to state 131 ]
  ! MULTIPLICATION_OP [ shift and go to state 124 ]
  ! DIVISION_OP     [ shift and go to state 110 ]
  ! MODULUS_OP      [ shift and go to state 119 ]
  ! REP_OP          [ shift and go to state 130 ]
  ! SEARCH_MODIFY   [ shift and go to state 103 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 137 ]
  ! EXPONENT_OP     [ shift and go to state 108 ]


state 100

    (32) printStatement -> PRINT string SEMICOLON .

    RETURN          reduce using rule 32 (printStatement -> PRINT string SEMICOLON .)
    IDENTIFIER      reduce using rule 32 (printStatement -> PRINT string SEMICOLON .)
    WHILE           reduce using rule 32 (printStatement -> PRINT string SEMICOLON .)
    FOR             reduce using rule 32 (printStatement -> PRINT string SEMICOLON .)
    PRINT           reduce using rule 32 (printStatement -> PRINT string SEMICOLON .)
    SUB             reduce using rule 32 (printStatement -> PRINT string SEMICOLON .)
    LAST            reduce using rule 32 (printStatement -> PRINT string SEMICOLON .)
    NEXT            reduce using rule 32 (printStatement -> PRINT string SEMICOLON .)
    IF              reduce using rule 32 (printStatement -> PRINT string SEMICOLON .)
    USE             reduce using rule 32 (printStatement -> PRINT string SEMICOLON .)
    SWITCH          reduce using rule 32 (printStatement -> PRINT string SEMICOLON .)
    PRIVATE         reduce using rule 32 (printStatement -> PRINT string SEMICOLON .)
    LOCAL           reduce using rule 32 (printStatement -> PRINT string SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 32 (printStatement -> PRINT string SEMICOLON .)
    ARRAY           reduce using rule 32 (printStatement -> PRINT string SEMICOLON .)
    HASH            reduce using rule 32 (printStatement -> PRINT string SEMICOLON .)
    VARIABLE        reduce using rule 32 (printStatement -> PRINT string SEMICOLON .)
    $end            reduce using rule 32 (printStatement -> PRINT string SEMICOLON .)
    BLOCK_ENDS      reduce using rule 32 (printStatement -> PRINT string SEMICOLON .)


state 101

    (75) expression -> INCREMENT_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    INCREMENT_OP    reduce using rule 75 (expression -> INCREMENT_OP expression .)
    DECREMENT_OP    reduce using rule 75 (expression -> INCREMENT_OP expression .)
    OR_STR_OP       reduce using rule 75 (expression -> INCREMENT_OP expression .)
    XOR_STR_OP      reduce using rule 75 (expression -> INCREMENT_OP expression .)
    AND_STR_OP      reduce using rule 75 (expression -> INCREMENT_OP expression .)
    NOT_STR_OP      reduce using rule 75 (expression -> INCREMENT_OP expression .)
    COMMA           reduce using rule 75 (expression -> INCREMENT_OP expression .)
    ASSOCIATE_OP    reduce using rule 75 (expression -> INCREMENT_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 75 (expression -> INCREMENT_OP expression .)
    ASSIGNMENT_OP   reduce using rule 75 (expression -> INCREMENT_OP expression .)
    RANGE_OP        reduce using rule 75 (expression -> INCREMENT_OP expression .)
    OR_OP           reduce using rule 75 (expression -> INCREMENT_OP expression .)
    AND_OP          reduce using rule 75 (expression -> INCREMENT_OP expression .)
    BIT_OR          reduce using rule 75 (expression -> INCREMENT_OP expression .)
    BIT_XOR         reduce using rule 75 (expression -> INCREMENT_OP expression .)
    BIT_AND         reduce using rule 75 (expression -> INCREMENT_OP expression .)
    EQUALS_OP       reduce using rule 75 (expression -> INCREMENT_OP expression .)
    NOT_EQUALS_OP   reduce using rule 75 (expression -> INCREMENT_OP expression .)
    COMPARE_OP      reduce using rule 75 (expression -> INCREMENT_OP expression .)
    GREATER_OP      reduce using rule 75 (expression -> INCREMENT_OP expression .)
    LESS_OP         reduce using rule 75 (expression -> INCREMENT_OP expression .)
    GREATER_EQUAL_OP reduce using rule 75 (expression -> INCREMENT_OP expression .)
    LESS_EQUAL_OP   reduce using rule 75 (expression -> INCREMENT_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 75 (expression -> INCREMENT_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 75 (expression -> INCREMENT_OP expression .)
    PLUS_OP         reduce using rule 75 (expression -> INCREMENT_OP expression .)
    MINUS_OP        reduce using rule 75 (expression -> INCREMENT_OP expression .)
    CONCATENATE     reduce using rule 75 (expression -> INCREMENT_OP expression .)
    MULTIPLICATION_OP reduce using rule 75 (expression -> INCREMENT_OP expression .)
    DIVISION_OP     reduce using rule 75 (expression -> INCREMENT_OP expression .)
    MODULUS_OP      reduce using rule 75 (expression -> INCREMENT_OP expression .)
    REP_OP          reduce using rule 75 (expression -> INCREMENT_OP expression .)
    SEARCH_MODIFY   reduce using rule 75 (expression -> INCREMENT_OP expression .)
    SEARCH_MODIFY_NEG reduce using rule 75 (expression -> INCREMENT_OP expression .)
    EXPONENT_OP     reduce using rule 75 (expression -> INCREMENT_OP expression .)
    SEMICOLON       reduce using rule 75 (expression -> INCREMENT_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 75 (expression -> INCREMENT_OP expression .)

  ! INCREMENT_OP    [ shift and go to state 132 ]
  ! DECREMENT_OP    [ shift and go to state 125 ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]
  ! BIT_OR          [ shift and go to state 135 ]
  ! BIT_XOR         [ shift and go to state 112 ]
  ! BIT_AND         [ shift and go to state 123 ]
  ! EQUALS_OP       [ shift and go to state 105 ]
  ! NOT_EQUALS_OP   [ shift and go to state 107 ]
  ! COMPARE_OP      [ shift and go to state 106 ]
  ! GREATER_OP      [ shift and go to state 138 ]
  ! LESS_OP         [ shift and go to state 117 ]
  ! GREATER_EQUAL_OP [ shift and go to state 121 ]
  ! LESS_EQUAL_OP   [ shift and go to state 104 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 133 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 129 ]
  ! PLUS_OP         [ shift and go to state 136 ]
  ! MINUS_OP        [ shift and go to state 113 ]
  ! CONCATENATE     [ shift and go to state 131 ]
  ! MULTIPLICATION_OP [ shift and go to state 124 ]
  ! DIVISION_OP     [ shift and go to state 110 ]
  ! MODULUS_OP      [ shift and go to state 119 ]
  ! REP_OP          [ shift and go to state 130 ]
  ! SEARCH_MODIFY   [ shift and go to state 103 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 137 ]
  ! EXPONENT_OP     [ shift and go to state 108 ]


state 102

    (71) expression -> PLUS_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 71 (expression -> PLUS_OP expression .)
    XOR_STR_OP      reduce using rule 71 (expression -> PLUS_OP expression .)
    AND_STR_OP      reduce using rule 71 (expression -> PLUS_OP expression .)
    NOT_STR_OP      reduce using rule 71 (expression -> PLUS_OP expression .)
    COMMA           reduce using rule 71 (expression -> PLUS_OP expression .)
    ASSOCIATE_OP    reduce using rule 71 (expression -> PLUS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 71 (expression -> PLUS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 71 (expression -> PLUS_OP expression .)
    RANGE_OP        reduce using rule 71 (expression -> PLUS_OP expression .)
    OR_OP           reduce using rule 71 (expression -> PLUS_OP expression .)
    AND_OP          reduce using rule 71 (expression -> PLUS_OP expression .)
    BIT_OR          reduce using rule 71 (expression -> PLUS_OP expression .)
    BIT_XOR         reduce using rule 71 (expression -> PLUS_OP expression .)
    BIT_AND         reduce using rule 71 (expression -> PLUS_OP expression .)
    EQUALS_OP       reduce using rule 71 (expression -> PLUS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 71 (expression -> PLUS_OP expression .)
    COMPARE_OP      reduce using rule 71 (expression -> PLUS_OP expression .)
    GREATER_OP      reduce using rule 71 (expression -> PLUS_OP expression .)
    LESS_OP         reduce using rule 71 (expression -> PLUS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 71 (expression -> PLUS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 71 (expression -> PLUS_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 71 (expression -> PLUS_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 71 (expression -> PLUS_OP expression .)
    PLUS_OP         reduce using rule 71 (expression -> PLUS_OP expression .)
    MINUS_OP        reduce using rule 71 (expression -> PLUS_OP expression .)
    CONCATENATE     reduce using rule 71 (expression -> PLUS_OP expression .)
    MULTIPLICATION_OP reduce using rule 71 (expression -> PLUS_OP expression .)
    DIVISION_OP     reduce using rule 71 (expression -> PLUS_OP expression .)
    MODULUS_OP      reduce using rule 71 (expression -> PLUS_OP expression .)
    REP_OP          reduce using rule 71 (expression -> PLUS_OP expression .)
    SEARCH_MODIFY   reduce using rule 71 (expression -> PLUS_OP expression .)
    SEARCH_MODIFY_NEG reduce using rule 71 (expression -> PLUS_OP expression .)
    SEMICOLON       reduce using rule 71 (expression -> PLUS_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 71 (expression -> PLUS_OP expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 71 (expression -> PLUS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 71 (expression -> PLUS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 71 (expression -> PLUS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]
  ! BIT_OR          [ shift and go to state 135 ]
  ! BIT_XOR         [ shift and go to state 112 ]
  ! BIT_AND         [ shift and go to state 123 ]
  ! EQUALS_OP       [ shift and go to state 105 ]
  ! NOT_EQUALS_OP   [ shift and go to state 107 ]
  ! COMPARE_OP      [ shift and go to state 106 ]
  ! GREATER_OP      [ shift and go to state 138 ]
  ! LESS_OP         [ shift and go to state 117 ]
  ! GREATER_EQUAL_OP [ shift and go to state 121 ]
  ! LESS_EQUAL_OP   [ shift and go to state 104 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 133 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 129 ]
  ! PLUS_OP         [ shift and go to state 136 ]
  ! MINUS_OP        [ shift and go to state 113 ]
  ! CONCATENATE     [ shift and go to state 131 ]
  ! MULTIPLICATION_OP [ shift and go to state 124 ]
  ! DIVISION_OP     [ shift and go to state 110 ]
  ! MODULUS_OP      [ shift and go to state 119 ]
  ! REP_OP          [ shift and go to state 130 ]
  ! SEARCH_MODIFY   [ shift and go to state 103 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 137 ]


state 103

    (111) expression -> expression SEARCH_MODIFY . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 159
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 104

    (101) expression -> expression LESS_EQUAL_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 160
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 105

    (95) expression -> expression EQUALS_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 161
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 106

    (97) expression -> expression COMPARE_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 162
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 107

    (96) expression -> expression NOT_EQUALS_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 163
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 108

    (113) expression -> expression EXPONENT_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 164
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 109

    (84) expression -> expression NOT_STR_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 165
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 110

    (108) expression -> expression DIVISION_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 166
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 111

    (89) expression -> expression RANGE_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 167
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 112

    (93) expression -> expression BIT_XOR . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 168
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 113

    (105) expression -> expression MINUS_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 169
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 114

    (33) printStatement -> PRINT expression SEMICOLON .

    RETURN          reduce using rule 33 (printStatement -> PRINT expression SEMICOLON .)
    IDENTIFIER      reduce using rule 33 (printStatement -> PRINT expression SEMICOLON .)
    WHILE           reduce using rule 33 (printStatement -> PRINT expression SEMICOLON .)
    FOR             reduce using rule 33 (printStatement -> PRINT expression SEMICOLON .)
    PRINT           reduce using rule 33 (printStatement -> PRINT expression SEMICOLON .)
    SUB             reduce using rule 33 (printStatement -> PRINT expression SEMICOLON .)
    LAST            reduce using rule 33 (printStatement -> PRINT expression SEMICOLON .)
    NEXT            reduce using rule 33 (printStatement -> PRINT expression SEMICOLON .)
    IF              reduce using rule 33 (printStatement -> PRINT expression SEMICOLON .)
    USE             reduce using rule 33 (printStatement -> PRINT expression SEMICOLON .)
    SWITCH          reduce using rule 33 (printStatement -> PRINT expression SEMICOLON .)
    PRIVATE         reduce using rule 33 (printStatement -> PRINT expression SEMICOLON .)
    LOCAL           reduce using rule 33 (printStatement -> PRINT expression SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 33 (printStatement -> PRINT expression SEMICOLON .)
    ARRAY           reduce using rule 33 (printStatement -> PRINT expression SEMICOLON .)
    HASH            reduce using rule 33 (printStatement -> PRINT expression SEMICOLON .)
    VARIABLE        reduce using rule 33 (printStatement -> PRINT expression SEMICOLON .)
    $end            reduce using rule 33 (printStatement -> PRINT expression SEMICOLON .)
    BLOCK_ENDS      reduce using rule 33 (printStatement -> PRINT expression SEMICOLON .)


state 115

    (83) expression -> expression AND_STR_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 170
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 116

    (90) expression -> expression OR_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 171
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 117

    (99) expression -> expression LESS_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 172
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 118

    (85) expression -> expression COMMA . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 173
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 119

    (109) expression -> expression MODULUS_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 174
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 120

    (88) expression -> expression ASSIGNMENT_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 175
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 121

    (100) expression -> expression GREATER_EQUAL_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 176
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 122

    (82) expression -> expression XOR_STR_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 177
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 123

    (94) expression -> expression BIT_AND . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 178
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 124

    (107) expression -> expression MULTIPLICATION_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 179
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 125

    (78) expression -> expression DECREMENT_OP .

    INCREMENT_OP    reduce using rule 78 (expression -> expression DECREMENT_OP .)
    DECREMENT_OP    reduce using rule 78 (expression -> expression DECREMENT_OP .)
    OR_STR_OP       reduce using rule 78 (expression -> expression DECREMENT_OP .)
    XOR_STR_OP      reduce using rule 78 (expression -> expression DECREMENT_OP .)
    AND_STR_OP      reduce using rule 78 (expression -> expression DECREMENT_OP .)
    NOT_STR_OP      reduce using rule 78 (expression -> expression DECREMENT_OP .)
    COMMA           reduce using rule 78 (expression -> expression DECREMENT_OP .)
    ASSOCIATE_OP    reduce using rule 78 (expression -> expression DECREMENT_OP .)
    ADV_ASSIGNMENT_OP reduce using rule 78 (expression -> expression DECREMENT_OP .)
    ASSIGNMENT_OP   reduce using rule 78 (expression -> expression DECREMENT_OP .)
    RANGE_OP        reduce using rule 78 (expression -> expression DECREMENT_OP .)
    OR_OP           reduce using rule 78 (expression -> expression DECREMENT_OP .)
    AND_OP          reduce using rule 78 (expression -> expression DECREMENT_OP .)
    BIT_OR          reduce using rule 78 (expression -> expression DECREMENT_OP .)
    BIT_XOR         reduce using rule 78 (expression -> expression DECREMENT_OP .)
    BIT_AND         reduce using rule 78 (expression -> expression DECREMENT_OP .)
    EQUALS_OP       reduce using rule 78 (expression -> expression DECREMENT_OP .)
    NOT_EQUALS_OP   reduce using rule 78 (expression -> expression DECREMENT_OP .)
    COMPARE_OP      reduce using rule 78 (expression -> expression DECREMENT_OP .)
    GREATER_OP      reduce using rule 78 (expression -> expression DECREMENT_OP .)
    LESS_OP         reduce using rule 78 (expression -> expression DECREMENT_OP .)
    GREATER_EQUAL_OP reduce using rule 78 (expression -> expression DECREMENT_OP .)
    LESS_EQUAL_OP   reduce using rule 78 (expression -> expression DECREMENT_OP .)
    BIT_RIGHT_SHIFT reduce using rule 78 (expression -> expression DECREMENT_OP .)
    BIT_LEFT_SHIFT  reduce using rule 78 (expression -> expression DECREMENT_OP .)
    PLUS_OP         reduce using rule 78 (expression -> expression DECREMENT_OP .)
    MINUS_OP        reduce using rule 78 (expression -> expression DECREMENT_OP .)
    CONCATENATE     reduce using rule 78 (expression -> expression DECREMENT_OP .)
    MULTIPLICATION_OP reduce using rule 78 (expression -> expression DECREMENT_OP .)
    DIVISION_OP     reduce using rule 78 (expression -> expression DECREMENT_OP .)
    MODULUS_OP      reduce using rule 78 (expression -> expression DECREMENT_OP .)
    REP_OP          reduce using rule 78 (expression -> expression DECREMENT_OP .)
    SEARCH_MODIFY   reduce using rule 78 (expression -> expression DECREMENT_OP .)
    SEARCH_MODIFY_NEG reduce using rule 78 (expression -> expression DECREMENT_OP .)
    EXPONENT_OP     reduce using rule 78 (expression -> expression DECREMENT_OP .)
    SEMICOLON       reduce using rule 78 (expression -> expression DECREMENT_OP .)
    CLOSE_PARANTHESIS reduce using rule 78 (expression -> expression DECREMENT_OP .)


state 126

    (86) expression -> expression ASSOCIATE_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 180
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 127

    (81) expression -> expression OR_STR_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 181
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 128

    (91) expression -> expression AND_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 182
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 129

    (103) expression -> expression BIT_LEFT_SHIFT . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 183
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 130

    (110) expression -> expression REP_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 184
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 131

    (106) expression -> expression CONCATENATE . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 185
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 132

    (77) expression -> expression INCREMENT_OP .

    INCREMENT_OP    reduce using rule 77 (expression -> expression INCREMENT_OP .)
    DECREMENT_OP    reduce using rule 77 (expression -> expression INCREMENT_OP .)
    OR_STR_OP       reduce using rule 77 (expression -> expression INCREMENT_OP .)
    XOR_STR_OP      reduce using rule 77 (expression -> expression INCREMENT_OP .)
    AND_STR_OP      reduce using rule 77 (expression -> expression INCREMENT_OP .)
    NOT_STR_OP      reduce using rule 77 (expression -> expression INCREMENT_OP .)
    COMMA           reduce using rule 77 (expression -> expression INCREMENT_OP .)
    ASSOCIATE_OP    reduce using rule 77 (expression -> expression INCREMENT_OP .)
    ADV_ASSIGNMENT_OP reduce using rule 77 (expression -> expression INCREMENT_OP .)
    ASSIGNMENT_OP   reduce using rule 77 (expression -> expression INCREMENT_OP .)
    RANGE_OP        reduce using rule 77 (expression -> expression INCREMENT_OP .)
    OR_OP           reduce using rule 77 (expression -> expression INCREMENT_OP .)
    AND_OP          reduce using rule 77 (expression -> expression INCREMENT_OP .)
    BIT_OR          reduce using rule 77 (expression -> expression INCREMENT_OP .)
    BIT_XOR         reduce using rule 77 (expression -> expression INCREMENT_OP .)
    BIT_AND         reduce using rule 77 (expression -> expression INCREMENT_OP .)
    EQUALS_OP       reduce using rule 77 (expression -> expression INCREMENT_OP .)
    NOT_EQUALS_OP   reduce using rule 77 (expression -> expression INCREMENT_OP .)
    COMPARE_OP      reduce using rule 77 (expression -> expression INCREMENT_OP .)
    GREATER_OP      reduce using rule 77 (expression -> expression INCREMENT_OP .)
    LESS_OP         reduce using rule 77 (expression -> expression INCREMENT_OP .)
    GREATER_EQUAL_OP reduce using rule 77 (expression -> expression INCREMENT_OP .)
    LESS_EQUAL_OP   reduce using rule 77 (expression -> expression INCREMENT_OP .)
    BIT_RIGHT_SHIFT reduce using rule 77 (expression -> expression INCREMENT_OP .)
    BIT_LEFT_SHIFT  reduce using rule 77 (expression -> expression INCREMENT_OP .)
    PLUS_OP         reduce using rule 77 (expression -> expression INCREMENT_OP .)
    MINUS_OP        reduce using rule 77 (expression -> expression INCREMENT_OP .)
    CONCATENATE     reduce using rule 77 (expression -> expression INCREMENT_OP .)
    MULTIPLICATION_OP reduce using rule 77 (expression -> expression INCREMENT_OP .)
    DIVISION_OP     reduce using rule 77 (expression -> expression INCREMENT_OP .)
    MODULUS_OP      reduce using rule 77 (expression -> expression INCREMENT_OP .)
    REP_OP          reduce using rule 77 (expression -> expression INCREMENT_OP .)
    SEARCH_MODIFY   reduce using rule 77 (expression -> expression INCREMENT_OP .)
    SEARCH_MODIFY_NEG reduce using rule 77 (expression -> expression INCREMENT_OP .)
    EXPONENT_OP     reduce using rule 77 (expression -> expression INCREMENT_OP .)
    SEMICOLON       reduce using rule 77 (expression -> expression INCREMENT_OP .)
    CLOSE_PARANTHESIS reduce using rule 77 (expression -> expression INCREMENT_OP .)


state 133

    (102) expression -> expression BIT_RIGHT_SHIFT . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 186
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 134

    (87) expression -> expression ADV_ASSIGNMENT_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 187
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 135

    (92) expression -> expression BIT_OR . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 188
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 136

    (104) expression -> expression PLUS_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 189
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 137

    (112) expression -> expression SEARCH_MODIFY_NEG . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 190
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 138

    (98) expression -> expression GREATER_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 191
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 139

    (34) returnStatement -> RETURN expression SEMICOLON .

    RETURN          reduce using rule 34 (returnStatement -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 34 (returnStatement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 34 (returnStatement -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 34 (returnStatement -> RETURN expression SEMICOLON .)
    PRINT           reduce using rule 34 (returnStatement -> RETURN expression SEMICOLON .)
    SUB             reduce using rule 34 (returnStatement -> RETURN expression SEMICOLON .)
    LAST            reduce using rule 34 (returnStatement -> RETURN expression SEMICOLON .)
    NEXT            reduce using rule 34 (returnStatement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 34 (returnStatement -> RETURN expression SEMICOLON .)
    USE             reduce using rule 34 (returnStatement -> RETURN expression SEMICOLON .)
    SWITCH          reduce using rule 34 (returnStatement -> RETURN expression SEMICOLON .)
    PRIVATE         reduce using rule 34 (returnStatement -> RETURN expression SEMICOLON .)
    LOCAL           reduce using rule 34 (returnStatement -> RETURN expression SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 34 (returnStatement -> RETURN expression SEMICOLON .)
    ARRAY           reduce using rule 34 (returnStatement -> RETURN expression SEMICOLON .)
    HASH            reduce using rule 34 (returnStatement -> RETURN expression SEMICOLON .)
    VARIABLE        reduce using rule 34 (returnStatement -> RETURN expression SEMICOLON .)
    $end            reduce using rule 34 (returnStatement -> RETURN expression SEMICOLON .)
    BLOCK_ENDS      reduce using rule 34 (returnStatement -> RETURN expression SEMICOLON .)


state 140

    (22) switchStatement -> SWITCH lefthandside BLOCK_BEGIN . caselist BLOCK_ENDS
    (23) caselist -> . CASE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block caselist
    (24) caselist -> . ELSE block
    (25) caselist -> . empty
    (6) empty -> .

    CASE            shift and go to state 192
    ELSE            shift and go to state 194
    BLOCK_ENDS      reduce using rule 6 (empty -> .)

    empty                          shift and go to state 195
    caselist                       shift and go to state 193

state 141

    (39) lefthandside -> PRIVATE OPEN_PARANTHESIS type . decList CLOSE_PARANTHESIS
    (45) decList -> . COMMA type decList
    (46) decList -> . empty
    (6) empty -> .

    COMMA           shift and go to state 88
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)

    empty                          shift and go to state 89
    decList                        shift and go to state 196

state 142

    (38) lefthandside -> PRIVATE type decList .

    SEMICOLON       reduce using rule 38 (lefthandside -> PRIVATE type decList .)
    ADV_ASSIGNMENT_OP reduce using rule 38 (lefthandside -> PRIVATE type decList .)
    ASSIGNMENT_OP   reduce using rule 38 (lefthandside -> PRIVATE type decList .)
    BLOCK_BEGIN     reduce using rule 38 (lefthandside -> PRIVATE type decList .)


state 143

    (50) parameters -> empty .
    (79) expression -> empty .

  ! reduce/reduce conflict for CLOSE_PARANTHESIS resolved using rule 50 (parameters -> empty .)
    CLOSE_PARANTHESIS reduce using rule 50 (parameters -> empty .)
    COMMA           reduce using rule 79 (expression -> empty .)
    INCREMENT_OP    reduce using rule 79 (expression -> empty .)
    DECREMENT_OP    reduce using rule 79 (expression -> empty .)
    OR_STR_OP       reduce using rule 79 (expression -> empty .)
    XOR_STR_OP      reduce using rule 79 (expression -> empty .)
    AND_STR_OP      reduce using rule 79 (expression -> empty .)
    NOT_STR_OP      reduce using rule 79 (expression -> empty .)
    ASSOCIATE_OP    reduce using rule 79 (expression -> empty .)
    ADV_ASSIGNMENT_OP reduce using rule 79 (expression -> empty .)
    ASSIGNMENT_OP   reduce using rule 79 (expression -> empty .)
    RANGE_OP        reduce using rule 79 (expression -> empty .)
    OR_OP           reduce using rule 79 (expression -> empty .)
    AND_OP          reduce using rule 79 (expression -> empty .)
    BIT_OR          reduce using rule 79 (expression -> empty .)
    BIT_XOR         reduce using rule 79 (expression -> empty .)
    BIT_AND         reduce using rule 79 (expression -> empty .)
    EQUALS_OP       reduce using rule 79 (expression -> empty .)
    NOT_EQUALS_OP   reduce using rule 79 (expression -> empty .)
    COMPARE_OP      reduce using rule 79 (expression -> empty .)
    GREATER_OP      reduce using rule 79 (expression -> empty .)
    LESS_OP         reduce using rule 79 (expression -> empty .)
    GREATER_EQUAL_OP reduce using rule 79 (expression -> empty .)
    LESS_EQUAL_OP   reduce using rule 79 (expression -> empty .)
    BIT_RIGHT_SHIFT reduce using rule 79 (expression -> empty .)
    BIT_LEFT_SHIFT  reduce using rule 79 (expression -> empty .)
    PLUS_OP         reduce using rule 79 (expression -> empty .)
    MINUS_OP        reduce using rule 79 (expression -> empty .)
    CONCATENATE     reduce using rule 79 (expression -> empty .)
    MULTIPLICATION_OP reduce using rule 79 (expression -> empty .)
    DIVISION_OP     reduce using rule 79 (expression -> empty .)
    MODULUS_OP      reduce using rule 79 (expression -> empty .)
    REP_OP          reduce using rule 79 (expression -> empty .)
    SEARCH_MODIFY   reduce using rule 79 (expression -> empty .)
    SEARCH_MODIFY_NEG reduce using rule 79 (expression -> empty .)
    EXPONENT_OP     reduce using rule 79 (expression -> empty .)

  ! CLOSE_PARANTHESIS [ reduce using rule 79 (expression -> empty .) ]


state 144

    (47) functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters . CLOSE_PARANTHESIS SEMICOLON

    CLOSE_PARANTHESIS shift and go to state 197


state 145

    (48) parameters -> expression . COMMA parameters
    (49) parameters -> expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    COMMA           shift and go to state 198
    CLOSE_PARANTHESIS reduce using rule 49 (parameters -> expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    OR_STR_OP       shift and go to state 127
    XOR_STR_OP      shift and go to state 122
    AND_STR_OP      shift and go to state 115
    NOT_STR_OP      shift and go to state 109
    ASSOCIATE_OP    shift and go to state 126
    ADV_ASSIGNMENT_OP shift and go to state 134
    ASSIGNMENT_OP   shift and go to state 120
    RANGE_OP        shift and go to state 111
    OR_OP           shift and go to state 116
    AND_OP          shift and go to state 128
    BIT_OR          shift and go to state 135
    BIT_XOR         shift and go to state 112
    BIT_AND         shift and go to state 123
    EQUALS_OP       shift and go to state 105
    NOT_EQUALS_OP   shift and go to state 107
    COMPARE_OP      shift and go to state 106
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108


state 146

    (52) forStatement -> FOR OPEN_PARANTHESIS expression . SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    SEMICOLON       shift and go to state 199
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    OR_STR_OP       shift and go to state 127
    XOR_STR_OP      shift and go to state 122
    AND_STR_OP      shift and go to state 115
    NOT_STR_OP      shift and go to state 109
    COMMA           shift and go to state 118
    ASSOCIATE_OP    shift and go to state 126
    ADV_ASSIGNMENT_OP shift and go to state 134
    ASSIGNMENT_OP   shift and go to state 120
    RANGE_OP        shift and go to state 111
    OR_OP           shift and go to state 116
    AND_OP          shift and go to state 128
    BIT_OR          shift and go to state 135
    BIT_XOR         shift and go to state 112
    BIT_AND         shift and go to state 123
    EQUALS_OP       shift and go to state 105
    NOT_EQUALS_OP   shift and go to state 107
    COMPARE_OP      shift and go to state 106
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108


state 147

    (35) assignment -> lefthandside assignmenttype expression . SEMICOLON
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    SEMICOLON       shift and go to state 200
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    OR_STR_OP       shift and go to state 127
    XOR_STR_OP      shift and go to state 122
    AND_STR_OP      shift and go to state 115
    NOT_STR_OP      shift and go to state 109
    COMMA           shift and go to state 118
    ASSOCIATE_OP    shift and go to state 126
    ADV_ASSIGNMENT_OP shift and go to state 134
    ASSIGNMENT_OP   shift and go to state 120
    RANGE_OP        shift and go to state 111
    OR_OP           shift and go to state 116
    AND_OP          shift and go to state 128
    BIT_OR          shift and go to state 135
    BIT_XOR         shift and go to state 112
    BIT_AND         shift and go to state 123
    EQUALS_OP       shift and go to state 105
    NOT_EQUALS_OP   shift and go to state 107
    COMPARE_OP      shift and go to state 106
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108


state 148

    (30) functionStatement -> SUB IDENTIFIER block .

    RETURN          reduce using rule 30 (functionStatement -> SUB IDENTIFIER block .)
    IDENTIFIER      reduce using rule 30 (functionStatement -> SUB IDENTIFIER block .)
    WHILE           reduce using rule 30 (functionStatement -> SUB IDENTIFIER block .)
    FOR             reduce using rule 30 (functionStatement -> SUB IDENTIFIER block .)
    PRINT           reduce using rule 30 (functionStatement -> SUB IDENTIFIER block .)
    SUB             reduce using rule 30 (functionStatement -> SUB IDENTIFIER block .)
    LAST            reduce using rule 30 (functionStatement -> SUB IDENTIFIER block .)
    NEXT            reduce using rule 30 (functionStatement -> SUB IDENTIFIER block .)
    IF              reduce using rule 30 (functionStatement -> SUB IDENTIFIER block .)
    USE             reduce using rule 30 (functionStatement -> SUB IDENTIFIER block .)
    SWITCH          reduce using rule 30 (functionStatement -> SUB IDENTIFIER block .)
    PRIVATE         reduce using rule 30 (functionStatement -> SUB IDENTIFIER block .)
    LOCAL           reduce using rule 30 (functionStatement -> SUB IDENTIFIER block .)
    OPEN_PARANTHESIS reduce using rule 30 (functionStatement -> SUB IDENTIFIER block .)
    ARRAY           reduce using rule 30 (functionStatement -> SUB IDENTIFIER block .)
    HASH            reduce using rule 30 (functionStatement -> SUB IDENTIFIER block .)
    VARIABLE        reduce using rule 30 (functionStatement -> SUB IDENTIFIER block .)
    BLOCK_ENDS      reduce using rule 30 (functionStatement -> SUB IDENTIFIER block .)
    $end            reduce using rule 30 (functionStatement -> SUB IDENTIFIER block .)


state 149

    (41) lefthandside -> LOCAL OPEN_PARANTHESIS type . decList CLOSE_PARANTHESIS
    (45) decList -> . COMMA type decList
    (46) decList -> . empty
    (6) empty -> .

    COMMA           shift and go to state 88
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)

    empty                          shift and go to state 89
    decList                        shift and go to state 201

state 150

    (40) lefthandside -> LOCAL type decList .

    SEMICOLON       reduce using rule 40 (lefthandside -> LOCAL type decList .)
    ADV_ASSIGNMENT_OP reduce using rule 40 (lefthandside -> LOCAL type decList .)
    ASSIGNMENT_OP   reduce using rule 40 (lefthandside -> LOCAL type decList .)
    BLOCK_BEGIN     reduce using rule 40 (lefthandside -> LOCAL type decList .)


state 151

    (26) ifthen -> IF OPEN_PARANTHESIS expression . CLOSE_PARANTHESIS block
    (27) ifthenelse -> IF OPEN_PARANTHESIS expression . CLOSE_PARANTHESIS block ELSE block
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS shift and go to state 202
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    OR_STR_OP       shift and go to state 127
    XOR_STR_OP      shift and go to state 122
    AND_STR_OP      shift and go to state 115
    NOT_STR_OP      shift and go to state 109
    COMMA           shift and go to state 118
    ASSOCIATE_OP    shift and go to state 126
    ADV_ASSIGNMENT_OP shift and go to state 134
    ASSIGNMENT_OP   shift and go to state 120
    RANGE_OP        shift and go to state 111
    OR_OP           shift and go to state 116
    AND_OP          shift and go to state 128
    BIT_OR          shift and go to state 135
    BIT_XOR         shift and go to state 112
    BIT_AND         shift and go to state 123
    EQUALS_OP       shift and go to state 105
    NOT_EQUALS_OP   shift and go to state 107
    COMPARE_OP      shift and go to state 106
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108


state 152

    (42) lefthandside -> OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .

    SEMICOLON       reduce using rule 42 (lefthandside -> OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    ADV_ASSIGNMENT_OP reduce using rule 42 (lefthandside -> OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    ASSIGNMENT_OP   reduce using rule 42 (lefthandside -> OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    BLOCK_BEGIN     reduce using rule 42 (lefthandside -> OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)


state 153

    (45) decList -> COMMA type . decList
    (45) decList -> . COMMA type decList
    (46) decList -> . empty
    (6) empty -> .

    COMMA           shift and go to state 88
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    BLOCK_BEGIN     reduce using rule 6 (empty -> .)

    empty                          shift and go to state 89
    decList                        shift and go to state 203

state 154

    (61) variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .

    INCREMENT_OP    reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    DECREMENT_OP    reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    OR_STR_OP       reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    XOR_STR_OP      reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    AND_STR_OP      reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    NOT_STR_OP      reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    COMMA           reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    ASSOCIATE_OP    reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    ADV_ASSIGNMENT_OP reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    ASSIGNMENT_OP   reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    RANGE_OP        reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    OR_OP           reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    AND_OP          reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    BIT_OR          reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    BIT_XOR         reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    BIT_AND         reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    EQUALS_OP       reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    NOT_EQUALS_OP   reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    COMPARE_OP      reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    GREATER_OP      reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    LESS_OP         reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    GREATER_EQUAL_OP reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    LESS_EQUAL_OP   reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    BIT_RIGHT_SHIFT reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    BIT_LEFT_SHIFT  reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    PLUS_OP         reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    MINUS_OP        reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    CONCATENATE     reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    MULTIPLICATION_OP reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    DIVISION_OP     reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    MODULUS_OP      reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    REP_OP          reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    SEARCH_MODIFY   reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    SEARCH_MODIFY_NEG reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    EXPONENT_OP     reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    SEMICOLON       reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    CLOSE_PARANTHESIS reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    BLOCK_BEGIN     reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)


state 155

    (62) variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .

    INCREMENT_OP    reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    DECREMENT_OP    reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    OR_STR_OP       reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    XOR_STR_OP      reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    AND_STR_OP      reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    NOT_STR_OP      reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    COMMA           reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    ASSOCIATE_OP    reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    ADV_ASSIGNMENT_OP reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    ASSIGNMENT_OP   reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    RANGE_OP        reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    OR_OP           reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    AND_OP          reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    BIT_OR          reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    BIT_XOR         reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    BIT_AND         reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    EQUALS_OP       reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    NOT_EQUALS_OP   reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    COMPARE_OP      reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    GREATER_OP      reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    LESS_OP         reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    GREATER_EQUAL_OP reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    LESS_EQUAL_OP   reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    BIT_RIGHT_SHIFT reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    BIT_LEFT_SHIFT  reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    PLUS_OP         reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    MINUS_OP        reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    CONCATENATE     reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    MULTIPLICATION_OP reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    DIVISION_OP     reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    MODULUS_OP      reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    REP_OP          reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    SEARCH_MODIFY   reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    SEARCH_MODIFY_NEG reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    EXPONENT_OP     reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    SEMICOLON       reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    CLOSE_PARANTHESIS reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    BLOCK_BEGIN     reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)


state 156

    (51) whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS . block
    (3) block -> . BLOCK_BEGIN statements BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 7

    block                          shift and go to state 204

state 157

    (31) printStatement -> PRINT OPEN_PARANTHESIS string CLOSE_PARANTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 205


state 158

    (67) term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .

    INCREMENT_OP    reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    DECREMENT_OP    reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    OR_STR_OP       reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    XOR_STR_OP      reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    AND_STR_OP      reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    NOT_STR_OP      reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    COMMA           reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    ASSOCIATE_OP    reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    ADV_ASSIGNMENT_OP reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    ASSIGNMENT_OP   reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    RANGE_OP        reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    OR_OP           reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    AND_OP          reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    BIT_OR          reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    BIT_XOR         reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    BIT_AND         reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    EQUALS_OP       reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    NOT_EQUALS_OP   reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    COMPARE_OP      reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    GREATER_OP      reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    LESS_OP         reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    GREATER_EQUAL_OP reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    LESS_EQUAL_OP   reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    BIT_RIGHT_SHIFT reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    BIT_LEFT_SHIFT  reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    PLUS_OP         reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    MINUS_OP        reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    CONCATENATE     reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    MULTIPLICATION_OP reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    DIVISION_OP     reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    MODULUS_OP      reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    REP_OP          reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    SEARCH_MODIFY   reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    SEARCH_MODIFY_NEG reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    EXPONENT_OP     reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    SEMICOLON       reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    CLOSE_PARANTHESIS reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)


state 159

    (111) expression -> expression SEARCH_MODIFY expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    XOR_STR_OP      reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    AND_STR_OP      reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    NOT_STR_OP      reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    COMMA           reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    ASSOCIATE_OP    reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    ADV_ASSIGNMENT_OP reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    ASSIGNMENT_OP   reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    RANGE_OP        reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    OR_OP           reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    AND_OP          reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    BIT_OR          reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    BIT_XOR         reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    BIT_AND         reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    EQUALS_OP       reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    NOT_EQUALS_OP   reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    COMPARE_OP      reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    GREATER_OP      reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    LESS_OP         reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    GREATER_EQUAL_OP reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    LESS_EQUAL_OP   reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    BIT_RIGHT_SHIFT reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    BIT_LEFT_SHIFT  reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    PLUS_OP         reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    MINUS_OP        reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    CONCATENATE     reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    MULTIPLICATION_OP reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    DIVISION_OP     reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    MODULUS_OP      reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    REP_OP          reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    SEARCH_MODIFY   reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    SEARCH_MODIFY_NEG reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    SEMICOLON       reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    CLOSE_PARANTHESIS reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .) ]
  ! DECREMENT_OP    [ reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .) ]
  ! EXPONENT_OP     [ reduce using rule 111 (expression -> expression SEARCH_MODIFY expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]
  ! BIT_OR          [ shift and go to state 135 ]
  ! BIT_XOR         [ shift and go to state 112 ]
  ! BIT_AND         [ shift and go to state 123 ]
  ! EQUALS_OP       [ shift and go to state 105 ]
  ! NOT_EQUALS_OP   [ shift and go to state 107 ]
  ! COMPARE_OP      [ shift and go to state 106 ]
  ! GREATER_OP      [ shift and go to state 138 ]
  ! LESS_OP         [ shift and go to state 117 ]
  ! GREATER_EQUAL_OP [ shift and go to state 121 ]
  ! LESS_EQUAL_OP   [ shift and go to state 104 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 133 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 129 ]
  ! PLUS_OP         [ shift and go to state 136 ]
  ! MINUS_OP        [ shift and go to state 113 ]
  ! CONCATENATE     [ shift and go to state 131 ]
  ! MULTIPLICATION_OP [ shift and go to state 124 ]
  ! DIVISION_OP     [ shift and go to state 110 ]
  ! MODULUS_OP      [ shift and go to state 119 ]
  ! REP_OP          [ shift and go to state 130 ]
  ! SEARCH_MODIFY   [ shift and go to state 103 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 137 ]


state 160

    (101) expression -> expression LESS_EQUAL_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .)
    XOR_STR_OP      reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .)
    AND_STR_OP      reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .)
    NOT_STR_OP      reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .)
    COMMA           reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .)
    ASSOCIATE_OP    reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .)
    ASSIGNMENT_OP   reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .)
    RANGE_OP        reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .)
    OR_OP           reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .)
    AND_OP          reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .)
    BIT_OR          reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .)
    BIT_XOR         reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .)
    BIT_AND         reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .)
    EQUALS_OP       reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .)
    NOT_EQUALS_OP   reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .)
    COMPARE_OP      reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .)
    GREATER_OP      reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .)
    LESS_OP         reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .)
    GREATER_EQUAL_OP reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .)
    LESS_EQUAL_OP   reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .)
    SEMICOLON       reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! REP_OP          [ reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 101 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]
  ! BIT_OR          [ shift and go to state 135 ]
  ! BIT_XOR         [ shift and go to state 112 ]
  ! BIT_AND         [ shift and go to state 123 ]
  ! EQUALS_OP       [ shift and go to state 105 ]
  ! NOT_EQUALS_OP   [ shift and go to state 107 ]
  ! COMPARE_OP      [ shift and go to state 106 ]
  ! GREATER_OP      [ shift and go to state 138 ]
  ! LESS_OP         [ shift and go to state 117 ]
  ! GREATER_EQUAL_OP [ shift and go to state 121 ]
  ! LESS_EQUAL_OP   [ shift and go to state 104 ]


state 161

    (95) expression -> expression EQUALS_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 95 (expression -> expression EQUALS_OP expression .)
    XOR_STR_OP      reduce using rule 95 (expression -> expression EQUALS_OP expression .)
    AND_STR_OP      reduce using rule 95 (expression -> expression EQUALS_OP expression .)
    NOT_STR_OP      reduce using rule 95 (expression -> expression EQUALS_OP expression .)
    COMMA           reduce using rule 95 (expression -> expression EQUALS_OP expression .)
    ASSOCIATE_OP    reduce using rule 95 (expression -> expression EQUALS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 95 (expression -> expression EQUALS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 95 (expression -> expression EQUALS_OP expression .)
    RANGE_OP        reduce using rule 95 (expression -> expression EQUALS_OP expression .)
    OR_OP           reduce using rule 95 (expression -> expression EQUALS_OP expression .)
    AND_OP          reduce using rule 95 (expression -> expression EQUALS_OP expression .)
    BIT_OR          reduce using rule 95 (expression -> expression EQUALS_OP expression .)
    BIT_XOR         reduce using rule 95 (expression -> expression EQUALS_OP expression .)
    BIT_AND         reduce using rule 95 (expression -> expression EQUALS_OP expression .)
    EQUALS_OP       reduce using rule 95 (expression -> expression EQUALS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 95 (expression -> expression EQUALS_OP expression .)
    COMPARE_OP      reduce using rule 95 (expression -> expression EQUALS_OP expression .)
    SEMICOLON       reduce using rule 95 (expression -> expression EQUALS_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 95 (expression -> expression EQUALS_OP expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 95 (expression -> expression EQUALS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 95 (expression -> expression EQUALS_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 95 (expression -> expression EQUALS_OP expression .) ]
  ! LESS_OP         [ reduce using rule 95 (expression -> expression EQUALS_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 95 (expression -> expression EQUALS_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 95 (expression -> expression EQUALS_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 95 (expression -> expression EQUALS_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 95 (expression -> expression EQUALS_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 95 (expression -> expression EQUALS_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 95 (expression -> expression EQUALS_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 95 (expression -> expression EQUALS_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 95 (expression -> expression EQUALS_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 95 (expression -> expression EQUALS_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 95 (expression -> expression EQUALS_OP expression .) ]
  ! REP_OP          [ reduce using rule 95 (expression -> expression EQUALS_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 95 (expression -> expression EQUALS_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 95 (expression -> expression EQUALS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 95 (expression -> expression EQUALS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]
  ! BIT_OR          [ shift and go to state 135 ]
  ! BIT_XOR         [ shift and go to state 112 ]
  ! BIT_AND         [ shift and go to state 123 ]
  ! EQUALS_OP       [ shift and go to state 105 ]
  ! NOT_EQUALS_OP   [ shift and go to state 107 ]
  ! COMPARE_OP      [ shift and go to state 106 ]


state 162

    (97) expression -> expression COMPARE_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 97 (expression -> expression COMPARE_OP expression .)
    XOR_STR_OP      reduce using rule 97 (expression -> expression COMPARE_OP expression .)
    AND_STR_OP      reduce using rule 97 (expression -> expression COMPARE_OP expression .)
    NOT_STR_OP      reduce using rule 97 (expression -> expression COMPARE_OP expression .)
    COMMA           reduce using rule 97 (expression -> expression COMPARE_OP expression .)
    ASSOCIATE_OP    reduce using rule 97 (expression -> expression COMPARE_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 97 (expression -> expression COMPARE_OP expression .)
    ASSIGNMENT_OP   reduce using rule 97 (expression -> expression COMPARE_OP expression .)
    RANGE_OP        reduce using rule 97 (expression -> expression COMPARE_OP expression .)
    OR_OP           reduce using rule 97 (expression -> expression COMPARE_OP expression .)
    AND_OP          reduce using rule 97 (expression -> expression COMPARE_OP expression .)
    BIT_OR          reduce using rule 97 (expression -> expression COMPARE_OP expression .)
    BIT_XOR         reduce using rule 97 (expression -> expression COMPARE_OP expression .)
    BIT_AND         reduce using rule 97 (expression -> expression COMPARE_OP expression .)
    EQUALS_OP       reduce using rule 97 (expression -> expression COMPARE_OP expression .)
    NOT_EQUALS_OP   reduce using rule 97 (expression -> expression COMPARE_OP expression .)
    COMPARE_OP      reduce using rule 97 (expression -> expression COMPARE_OP expression .)
    SEMICOLON       reduce using rule 97 (expression -> expression COMPARE_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 97 (expression -> expression COMPARE_OP expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 97 (expression -> expression COMPARE_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 97 (expression -> expression COMPARE_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 97 (expression -> expression COMPARE_OP expression .) ]
  ! LESS_OP         [ reduce using rule 97 (expression -> expression COMPARE_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 97 (expression -> expression COMPARE_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 97 (expression -> expression COMPARE_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 97 (expression -> expression COMPARE_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 97 (expression -> expression COMPARE_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 97 (expression -> expression COMPARE_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 97 (expression -> expression COMPARE_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 97 (expression -> expression COMPARE_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 97 (expression -> expression COMPARE_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 97 (expression -> expression COMPARE_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 97 (expression -> expression COMPARE_OP expression .) ]
  ! REP_OP          [ reduce using rule 97 (expression -> expression COMPARE_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 97 (expression -> expression COMPARE_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 97 (expression -> expression COMPARE_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 97 (expression -> expression COMPARE_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]
  ! BIT_OR          [ shift and go to state 135 ]
  ! BIT_XOR         [ shift and go to state 112 ]
  ! BIT_AND         [ shift and go to state 123 ]
  ! EQUALS_OP       [ shift and go to state 105 ]
  ! NOT_EQUALS_OP   [ shift and go to state 107 ]
  ! COMPARE_OP      [ shift and go to state 106 ]


state 163

    (96) expression -> expression NOT_EQUALS_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .)
    XOR_STR_OP      reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .)
    AND_STR_OP      reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .)
    NOT_STR_OP      reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .)
    COMMA           reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .)
    ASSOCIATE_OP    reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .)
    RANGE_OP        reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .)
    OR_OP           reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .)
    AND_OP          reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .)
    BIT_OR          reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .)
    BIT_XOR         reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .)
    BIT_AND         reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .)
    EQUALS_OP       reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .)
    COMPARE_OP      reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .)
    SEMICOLON       reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! LESS_OP         [ reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! REP_OP          [ reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 96 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]
  ! BIT_OR          [ shift and go to state 135 ]
  ! BIT_XOR         [ shift and go to state 112 ]
  ! BIT_AND         [ shift and go to state 123 ]
  ! EQUALS_OP       [ shift and go to state 105 ]
  ! NOT_EQUALS_OP   [ shift and go to state 107 ]
  ! COMPARE_OP      [ shift and go to state 106 ]


state 164

    (113) expression -> expression EXPONENT_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    XOR_STR_OP      reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    AND_STR_OP      reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    NOT_STR_OP      reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    COMMA           reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    ASSOCIATE_OP    reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    ASSIGNMENT_OP   reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    RANGE_OP        reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    OR_OP           reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    AND_OP          reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    BIT_OR          reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    BIT_XOR         reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    BIT_AND         reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    EQUALS_OP       reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    NOT_EQUALS_OP   reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    COMPARE_OP      reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    GREATER_OP      reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    LESS_OP         reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    GREATER_EQUAL_OP reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    LESS_EQUAL_OP   reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    PLUS_OP         reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    MINUS_OP        reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    CONCATENATE     reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    MULTIPLICATION_OP reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    DIVISION_OP     reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    MODULUS_OP      reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    REP_OP          reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    SEARCH_MODIFY   reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    SEARCH_MODIFY_NEG reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    SEMICOLON       reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 113 (expression -> expression EXPONENT_OP expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 113 (expression -> expression EXPONENT_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 113 (expression -> expression EXPONENT_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 113 (expression -> expression EXPONENT_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]
  ! BIT_OR          [ shift and go to state 135 ]
  ! BIT_XOR         [ shift and go to state 112 ]
  ! BIT_AND         [ shift and go to state 123 ]
  ! EQUALS_OP       [ shift and go to state 105 ]
  ! NOT_EQUALS_OP   [ shift and go to state 107 ]
  ! COMPARE_OP      [ shift and go to state 106 ]
  ! GREATER_OP      [ shift and go to state 138 ]
  ! LESS_OP         [ shift and go to state 117 ]
  ! GREATER_EQUAL_OP [ shift and go to state 121 ]
  ! LESS_EQUAL_OP   [ shift and go to state 104 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 133 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 129 ]
  ! PLUS_OP         [ shift and go to state 136 ]
  ! MINUS_OP        [ shift and go to state 113 ]
  ! CONCATENATE     [ shift and go to state 131 ]
  ! MULTIPLICATION_OP [ shift and go to state 124 ]
  ! DIVISION_OP     [ shift and go to state 110 ]
  ! MODULUS_OP      [ shift and go to state 119 ]
  ! REP_OP          [ shift and go to state 130 ]
  ! SEARCH_MODIFY   [ shift and go to state 103 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 137 ]


state 165

    (84) expression -> expression NOT_STR_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 84 (expression -> expression NOT_STR_OP expression .)
    XOR_STR_OP      reduce using rule 84 (expression -> expression NOT_STR_OP expression .)
    AND_STR_OP      reduce using rule 84 (expression -> expression NOT_STR_OP expression .)
    SEMICOLON       reduce using rule 84 (expression -> expression NOT_STR_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 84 (expression -> expression NOT_STR_OP expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    NOT_STR_OP      shift and go to state 109
    COMMA           shift and go to state 118
    ASSOCIATE_OP    shift and go to state 126
    ADV_ASSIGNMENT_OP shift and go to state 134
    ASSIGNMENT_OP   shift and go to state 120
    RANGE_OP        shift and go to state 111
    OR_OP           shift and go to state 116
    AND_OP          shift and go to state 128
    BIT_OR          shift and go to state 135
    BIT_XOR         shift and go to state 112
    BIT_AND         shift and go to state 123
    EQUALS_OP       shift and go to state 105
    NOT_EQUALS_OP   shift and go to state 107
    COMPARE_OP      shift and go to state 106
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! NOT_STR_OP      [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! COMMA           [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! ASSOCIATE_OP    [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! RANGE_OP        [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! OR_OP           [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! AND_OP          [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! BIT_OR          [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! BIT_AND         [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! LESS_OP         [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! REP_OP          [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 84 (expression -> expression NOT_STR_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]


state 166

    (108) expression -> expression DIVISION_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    XOR_STR_OP      reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    AND_STR_OP      reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    NOT_STR_OP      reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    COMMA           reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    ASSOCIATE_OP    reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    ASSIGNMENT_OP   reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    RANGE_OP        reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    OR_OP           reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    AND_OP          reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    BIT_OR          reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    BIT_XOR         reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    BIT_AND         reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    EQUALS_OP       reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    NOT_EQUALS_OP   reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    COMPARE_OP      reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    GREATER_OP      reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    LESS_OP         reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    GREATER_EQUAL_OP reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    LESS_EQUAL_OP   reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    PLUS_OP         reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    MINUS_OP        reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    CONCATENATE     reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    MULTIPLICATION_OP reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    DIVISION_OP     reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    MODULUS_OP      reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    REP_OP          reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    SEMICOLON       reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 108 (expression -> expression DIVISION_OP expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 108 (expression -> expression DIVISION_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 108 (expression -> expression DIVISION_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 108 (expression -> expression DIVISION_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 108 (expression -> expression DIVISION_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 108 (expression -> expression DIVISION_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]
  ! BIT_OR          [ shift and go to state 135 ]
  ! BIT_XOR         [ shift and go to state 112 ]
  ! BIT_AND         [ shift and go to state 123 ]
  ! EQUALS_OP       [ shift and go to state 105 ]
  ! NOT_EQUALS_OP   [ shift and go to state 107 ]
  ! COMPARE_OP      [ shift and go to state 106 ]
  ! GREATER_OP      [ shift and go to state 138 ]
  ! LESS_OP         [ shift and go to state 117 ]
  ! GREATER_EQUAL_OP [ shift and go to state 121 ]
  ! LESS_EQUAL_OP   [ shift and go to state 104 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 133 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 129 ]
  ! PLUS_OP         [ shift and go to state 136 ]
  ! MINUS_OP        [ shift and go to state 113 ]
  ! CONCATENATE     [ shift and go to state 131 ]
  ! MULTIPLICATION_OP [ shift and go to state 124 ]
  ! DIVISION_OP     [ shift and go to state 110 ]
  ! MODULUS_OP      [ shift and go to state 119 ]
  ! REP_OP          [ shift and go to state 130 ]


state 167

    (89) expression -> expression RANGE_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 89 (expression -> expression RANGE_OP expression .)
    XOR_STR_OP      reduce using rule 89 (expression -> expression RANGE_OP expression .)
    AND_STR_OP      reduce using rule 89 (expression -> expression RANGE_OP expression .)
    NOT_STR_OP      reduce using rule 89 (expression -> expression RANGE_OP expression .)
    COMMA           reduce using rule 89 (expression -> expression RANGE_OP expression .)
    ASSOCIATE_OP    reduce using rule 89 (expression -> expression RANGE_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 89 (expression -> expression RANGE_OP expression .)
    ASSIGNMENT_OP   reduce using rule 89 (expression -> expression RANGE_OP expression .)
    RANGE_OP        reduce using rule 89 (expression -> expression RANGE_OP expression .)
    SEMICOLON       reduce using rule 89 (expression -> expression RANGE_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 89 (expression -> expression RANGE_OP expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    OR_OP           shift and go to state 116
    AND_OP          shift and go to state 128
    BIT_OR          shift and go to state 135
    BIT_XOR         shift and go to state 112
    BIT_AND         shift and go to state 123
    EQUALS_OP       shift and go to state 105
    NOT_EQUALS_OP   shift and go to state 107
    COMPARE_OP      shift and go to state 106
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 89 (expression -> expression RANGE_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 89 (expression -> expression RANGE_OP expression .) ]
  ! OR_OP           [ reduce using rule 89 (expression -> expression RANGE_OP expression .) ]
  ! AND_OP          [ reduce using rule 89 (expression -> expression RANGE_OP expression .) ]
  ! BIT_OR          [ reduce using rule 89 (expression -> expression RANGE_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 89 (expression -> expression RANGE_OP expression .) ]
  ! BIT_AND         [ reduce using rule 89 (expression -> expression RANGE_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 89 (expression -> expression RANGE_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 89 (expression -> expression RANGE_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 89 (expression -> expression RANGE_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 89 (expression -> expression RANGE_OP expression .) ]
  ! LESS_OP         [ reduce using rule 89 (expression -> expression RANGE_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 89 (expression -> expression RANGE_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 89 (expression -> expression RANGE_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 89 (expression -> expression RANGE_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 89 (expression -> expression RANGE_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 89 (expression -> expression RANGE_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 89 (expression -> expression RANGE_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 89 (expression -> expression RANGE_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 89 (expression -> expression RANGE_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 89 (expression -> expression RANGE_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 89 (expression -> expression RANGE_OP expression .) ]
  ! REP_OP          [ reduce using rule 89 (expression -> expression RANGE_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 89 (expression -> expression RANGE_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 89 (expression -> expression RANGE_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 89 (expression -> expression RANGE_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]


state 168

    (93) expression -> expression BIT_XOR expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 93 (expression -> expression BIT_XOR expression .)
    XOR_STR_OP      reduce using rule 93 (expression -> expression BIT_XOR expression .)
    AND_STR_OP      reduce using rule 93 (expression -> expression BIT_XOR expression .)
    NOT_STR_OP      reduce using rule 93 (expression -> expression BIT_XOR expression .)
    COMMA           reduce using rule 93 (expression -> expression BIT_XOR expression .)
    ASSOCIATE_OP    reduce using rule 93 (expression -> expression BIT_XOR expression .)
    ADV_ASSIGNMENT_OP reduce using rule 93 (expression -> expression BIT_XOR expression .)
    ASSIGNMENT_OP   reduce using rule 93 (expression -> expression BIT_XOR expression .)
    RANGE_OP        reduce using rule 93 (expression -> expression BIT_XOR expression .)
    OR_OP           reduce using rule 93 (expression -> expression BIT_XOR expression .)
    AND_OP          reduce using rule 93 (expression -> expression BIT_XOR expression .)
    BIT_OR          reduce using rule 93 (expression -> expression BIT_XOR expression .)
    BIT_XOR         reduce using rule 93 (expression -> expression BIT_XOR expression .)
    SEMICOLON       reduce using rule 93 (expression -> expression BIT_XOR expression .)
    CLOSE_PARANTHESIS reduce using rule 93 (expression -> expression BIT_XOR expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    BIT_AND         shift and go to state 123
    EQUALS_OP       shift and go to state 105
    NOT_EQUALS_OP   shift and go to state 107
    COMPARE_OP      shift and go to state 106
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 93 (expression -> expression BIT_XOR expression .) ]
  ! DECREMENT_OP    [ reduce using rule 93 (expression -> expression BIT_XOR expression .) ]
  ! BIT_AND         [ reduce using rule 93 (expression -> expression BIT_XOR expression .) ]
  ! EQUALS_OP       [ reduce using rule 93 (expression -> expression BIT_XOR expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 93 (expression -> expression BIT_XOR expression .) ]
  ! COMPARE_OP      [ reduce using rule 93 (expression -> expression BIT_XOR expression .) ]
  ! GREATER_OP      [ reduce using rule 93 (expression -> expression BIT_XOR expression .) ]
  ! LESS_OP         [ reduce using rule 93 (expression -> expression BIT_XOR expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 93 (expression -> expression BIT_XOR expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 93 (expression -> expression BIT_XOR expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 93 (expression -> expression BIT_XOR expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 93 (expression -> expression BIT_XOR expression .) ]
  ! PLUS_OP         [ reduce using rule 93 (expression -> expression BIT_XOR expression .) ]
  ! MINUS_OP        [ reduce using rule 93 (expression -> expression BIT_XOR expression .) ]
  ! CONCATENATE     [ reduce using rule 93 (expression -> expression BIT_XOR expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 93 (expression -> expression BIT_XOR expression .) ]
  ! DIVISION_OP     [ reduce using rule 93 (expression -> expression BIT_XOR expression .) ]
  ! MODULUS_OP      [ reduce using rule 93 (expression -> expression BIT_XOR expression .) ]
  ! REP_OP          [ reduce using rule 93 (expression -> expression BIT_XOR expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 93 (expression -> expression BIT_XOR expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 93 (expression -> expression BIT_XOR expression .) ]
  ! EXPONENT_OP     [ reduce using rule 93 (expression -> expression BIT_XOR expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]
  ! BIT_OR          [ shift and go to state 135 ]
  ! BIT_XOR         [ shift and go to state 112 ]


state 169

    (105) expression -> expression MINUS_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 105 (expression -> expression MINUS_OP expression .)
    XOR_STR_OP      reduce using rule 105 (expression -> expression MINUS_OP expression .)
    AND_STR_OP      reduce using rule 105 (expression -> expression MINUS_OP expression .)
    NOT_STR_OP      reduce using rule 105 (expression -> expression MINUS_OP expression .)
    COMMA           reduce using rule 105 (expression -> expression MINUS_OP expression .)
    ASSOCIATE_OP    reduce using rule 105 (expression -> expression MINUS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 105 (expression -> expression MINUS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 105 (expression -> expression MINUS_OP expression .)
    RANGE_OP        reduce using rule 105 (expression -> expression MINUS_OP expression .)
    OR_OP           reduce using rule 105 (expression -> expression MINUS_OP expression .)
    AND_OP          reduce using rule 105 (expression -> expression MINUS_OP expression .)
    BIT_OR          reduce using rule 105 (expression -> expression MINUS_OP expression .)
    BIT_XOR         reduce using rule 105 (expression -> expression MINUS_OP expression .)
    BIT_AND         reduce using rule 105 (expression -> expression MINUS_OP expression .)
    EQUALS_OP       reduce using rule 105 (expression -> expression MINUS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 105 (expression -> expression MINUS_OP expression .)
    COMPARE_OP      reduce using rule 105 (expression -> expression MINUS_OP expression .)
    GREATER_OP      reduce using rule 105 (expression -> expression MINUS_OP expression .)
    LESS_OP         reduce using rule 105 (expression -> expression MINUS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 105 (expression -> expression MINUS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 105 (expression -> expression MINUS_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 105 (expression -> expression MINUS_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 105 (expression -> expression MINUS_OP expression .)
    PLUS_OP         reduce using rule 105 (expression -> expression MINUS_OP expression .)
    MINUS_OP        reduce using rule 105 (expression -> expression MINUS_OP expression .)
    CONCATENATE     reduce using rule 105 (expression -> expression MINUS_OP expression .)
    SEMICOLON       reduce using rule 105 (expression -> expression MINUS_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 105 (expression -> expression MINUS_OP expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 105 (expression -> expression MINUS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 105 (expression -> expression MINUS_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 105 (expression -> expression MINUS_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 105 (expression -> expression MINUS_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 105 (expression -> expression MINUS_OP expression .) ]
  ! REP_OP          [ reduce using rule 105 (expression -> expression MINUS_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 105 (expression -> expression MINUS_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 105 (expression -> expression MINUS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 105 (expression -> expression MINUS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]
  ! BIT_OR          [ shift and go to state 135 ]
  ! BIT_XOR         [ shift and go to state 112 ]
  ! BIT_AND         [ shift and go to state 123 ]
  ! EQUALS_OP       [ shift and go to state 105 ]
  ! NOT_EQUALS_OP   [ shift and go to state 107 ]
  ! COMPARE_OP      [ shift and go to state 106 ]
  ! GREATER_OP      [ shift and go to state 138 ]
  ! LESS_OP         [ shift and go to state 117 ]
  ! GREATER_EQUAL_OP [ shift and go to state 121 ]
  ! LESS_EQUAL_OP   [ shift and go to state 104 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 133 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 129 ]
  ! PLUS_OP         [ shift and go to state 136 ]
  ! MINUS_OP        [ shift and go to state 113 ]
  ! CONCATENATE     [ shift and go to state 131 ]


state 170

    (83) expression -> expression AND_STR_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 83 (expression -> expression AND_STR_OP expression .)
    XOR_STR_OP      reduce using rule 83 (expression -> expression AND_STR_OP expression .)
    AND_STR_OP      reduce using rule 83 (expression -> expression AND_STR_OP expression .)
    SEMICOLON       reduce using rule 83 (expression -> expression AND_STR_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 83 (expression -> expression AND_STR_OP expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    NOT_STR_OP      shift and go to state 109
    COMMA           shift and go to state 118
    ASSOCIATE_OP    shift and go to state 126
    ADV_ASSIGNMENT_OP shift and go to state 134
    ASSIGNMENT_OP   shift and go to state 120
    RANGE_OP        shift and go to state 111
    OR_OP           shift and go to state 116
    AND_OP          shift and go to state 128
    BIT_OR          shift and go to state 135
    BIT_XOR         shift and go to state 112
    BIT_AND         shift and go to state 123
    EQUALS_OP       shift and go to state 105
    NOT_EQUALS_OP   shift and go to state 107
    COMPARE_OP      shift and go to state 106
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! NOT_STR_OP      [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! COMMA           [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! ASSOCIATE_OP    [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! RANGE_OP        [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! OR_OP           [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! AND_OP          [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! BIT_OR          [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! BIT_AND         [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! LESS_OP         [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! REP_OP          [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 83 (expression -> expression AND_STR_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]


state 171

    (90) expression -> expression OR_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 90 (expression -> expression OR_OP expression .)
    XOR_STR_OP      reduce using rule 90 (expression -> expression OR_OP expression .)
    AND_STR_OP      reduce using rule 90 (expression -> expression OR_OP expression .)
    NOT_STR_OP      reduce using rule 90 (expression -> expression OR_OP expression .)
    COMMA           reduce using rule 90 (expression -> expression OR_OP expression .)
    ASSOCIATE_OP    reduce using rule 90 (expression -> expression OR_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 90 (expression -> expression OR_OP expression .)
    ASSIGNMENT_OP   reduce using rule 90 (expression -> expression OR_OP expression .)
    RANGE_OP        reduce using rule 90 (expression -> expression OR_OP expression .)
    OR_OP           reduce using rule 90 (expression -> expression OR_OP expression .)
    SEMICOLON       reduce using rule 90 (expression -> expression OR_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 90 (expression -> expression OR_OP expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    AND_OP          shift and go to state 128
    BIT_OR          shift and go to state 135
    BIT_XOR         shift and go to state 112
    BIT_AND         shift and go to state 123
    EQUALS_OP       shift and go to state 105
    NOT_EQUALS_OP   shift and go to state 107
    COMPARE_OP      shift and go to state 106
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 90 (expression -> expression OR_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 90 (expression -> expression OR_OP expression .) ]
  ! AND_OP          [ reduce using rule 90 (expression -> expression OR_OP expression .) ]
  ! BIT_OR          [ reduce using rule 90 (expression -> expression OR_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 90 (expression -> expression OR_OP expression .) ]
  ! BIT_AND         [ reduce using rule 90 (expression -> expression OR_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 90 (expression -> expression OR_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 90 (expression -> expression OR_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 90 (expression -> expression OR_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 90 (expression -> expression OR_OP expression .) ]
  ! LESS_OP         [ reduce using rule 90 (expression -> expression OR_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 90 (expression -> expression OR_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 90 (expression -> expression OR_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 90 (expression -> expression OR_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 90 (expression -> expression OR_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 90 (expression -> expression OR_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 90 (expression -> expression OR_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 90 (expression -> expression OR_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 90 (expression -> expression OR_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 90 (expression -> expression OR_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 90 (expression -> expression OR_OP expression .) ]
  ! REP_OP          [ reduce using rule 90 (expression -> expression OR_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 90 (expression -> expression OR_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 90 (expression -> expression OR_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 90 (expression -> expression OR_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]


state 172

    (99) expression -> expression LESS_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 99 (expression -> expression LESS_OP expression .)
    XOR_STR_OP      reduce using rule 99 (expression -> expression LESS_OP expression .)
    AND_STR_OP      reduce using rule 99 (expression -> expression LESS_OP expression .)
    NOT_STR_OP      reduce using rule 99 (expression -> expression LESS_OP expression .)
    COMMA           reduce using rule 99 (expression -> expression LESS_OP expression .)
    ASSOCIATE_OP    reduce using rule 99 (expression -> expression LESS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 99 (expression -> expression LESS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 99 (expression -> expression LESS_OP expression .)
    RANGE_OP        reduce using rule 99 (expression -> expression LESS_OP expression .)
    OR_OP           reduce using rule 99 (expression -> expression LESS_OP expression .)
    AND_OP          reduce using rule 99 (expression -> expression LESS_OP expression .)
    BIT_OR          reduce using rule 99 (expression -> expression LESS_OP expression .)
    BIT_XOR         reduce using rule 99 (expression -> expression LESS_OP expression .)
    BIT_AND         reduce using rule 99 (expression -> expression LESS_OP expression .)
    EQUALS_OP       reduce using rule 99 (expression -> expression LESS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 99 (expression -> expression LESS_OP expression .)
    COMPARE_OP      reduce using rule 99 (expression -> expression LESS_OP expression .)
    GREATER_OP      reduce using rule 99 (expression -> expression LESS_OP expression .)
    LESS_OP         reduce using rule 99 (expression -> expression LESS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 99 (expression -> expression LESS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 99 (expression -> expression LESS_OP expression .)
    SEMICOLON       reduce using rule 99 (expression -> expression LESS_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 99 (expression -> expression LESS_OP expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 99 (expression -> expression LESS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 99 (expression -> expression LESS_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 99 (expression -> expression LESS_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 99 (expression -> expression LESS_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 99 (expression -> expression LESS_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 99 (expression -> expression LESS_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 99 (expression -> expression LESS_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 99 (expression -> expression LESS_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 99 (expression -> expression LESS_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 99 (expression -> expression LESS_OP expression .) ]
  ! REP_OP          [ reduce using rule 99 (expression -> expression LESS_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 99 (expression -> expression LESS_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 99 (expression -> expression LESS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 99 (expression -> expression LESS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]
  ! BIT_OR          [ shift and go to state 135 ]
  ! BIT_XOR         [ shift and go to state 112 ]
  ! BIT_AND         [ shift and go to state 123 ]
  ! EQUALS_OP       [ shift and go to state 105 ]
  ! NOT_EQUALS_OP   [ shift and go to state 107 ]
  ! COMPARE_OP      [ shift and go to state 106 ]
  ! GREATER_OP      [ shift and go to state 138 ]
  ! LESS_OP         [ shift and go to state 117 ]
  ! GREATER_EQUAL_OP [ shift and go to state 121 ]
  ! LESS_EQUAL_OP   [ shift and go to state 104 ]


state 173

    (85) expression -> expression COMMA expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 85 (expression -> expression COMMA expression .)
    XOR_STR_OP      reduce using rule 85 (expression -> expression COMMA expression .)
    AND_STR_OP      reduce using rule 85 (expression -> expression COMMA expression .)
    NOT_STR_OP      reduce using rule 85 (expression -> expression COMMA expression .)
    COMMA           reduce using rule 85 (expression -> expression COMMA expression .)
    ASSOCIATE_OP    reduce using rule 85 (expression -> expression COMMA expression .)
    SEMICOLON       reduce using rule 85 (expression -> expression COMMA expression .)
    CLOSE_PARANTHESIS reduce using rule 85 (expression -> expression COMMA expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    ADV_ASSIGNMENT_OP shift and go to state 134
    ASSIGNMENT_OP   shift and go to state 120
    RANGE_OP        shift and go to state 111
    OR_OP           shift and go to state 116
    AND_OP          shift and go to state 128
    BIT_OR          shift and go to state 135
    BIT_XOR         shift and go to state 112
    BIT_AND         shift and go to state 123
    EQUALS_OP       shift and go to state 105
    NOT_EQUALS_OP   shift and go to state 107
    COMPARE_OP      shift and go to state 106
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! DECREMENT_OP    [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! RANGE_OP        [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! OR_OP           [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! AND_OP          [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! BIT_OR          [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! BIT_XOR         [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! BIT_AND         [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! EQUALS_OP       [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! COMPARE_OP      [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! GREATER_OP      [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! LESS_OP         [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! PLUS_OP         [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! MINUS_OP        [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! CONCATENATE     [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! DIVISION_OP     [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! MODULUS_OP      [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! REP_OP          [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! EXPONENT_OP     [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]


state 174

    (109) expression -> expression MODULUS_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    XOR_STR_OP      reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    AND_STR_OP      reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    NOT_STR_OP      reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    COMMA           reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    ASSOCIATE_OP    reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    RANGE_OP        reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    OR_OP           reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    AND_OP          reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    BIT_OR          reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    BIT_XOR         reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    BIT_AND         reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    EQUALS_OP       reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    COMPARE_OP      reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    GREATER_OP      reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    LESS_OP         reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    PLUS_OP         reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    MINUS_OP        reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    CONCATENATE     reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    MULTIPLICATION_OP reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    DIVISION_OP     reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    MODULUS_OP      reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    REP_OP          reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    SEMICOLON       reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 109 (expression -> expression MODULUS_OP expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 109 (expression -> expression MODULUS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 109 (expression -> expression MODULUS_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 109 (expression -> expression MODULUS_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 109 (expression -> expression MODULUS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 109 (expression -> expression MODULUS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]
  ! BIT_OR          [ shift and go to state 135 ]
  ! BIT_XOR         [ shift and go to state 112 ]
  ! BIT_AND         [ shift and go to state 123 ]
  ! EQUALS_OP       [ shift and go to state 105 ]
  ! NOT_EQUALS_OP   [ shift and go to state 107 ]
  ! COMPARE_OP      [ shift and go to state 106 ]
  ! GREATER_OP      [ shift and go to state 138 ]
  ! LESS_OP         [ shift and go to state 117 ]
  ! GREATER_EQUAL_OP [ shift and go to state 121 ]
  ! LESS_EQUAL_OP   [ shift and go to state 104 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 133 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 129 ]
  ! PLUS_OP         [ shift and go to state 136 ]
  ! MINUS_OP        [ shift and go to state 113 ]
  ! CONCATENATE     [ shift and go to state 131 ]
  ! MULTIPLICATION_OP [ shift and go to state 124 ]
  ! DIVISION_OP     [ shift and go to state 110 ]
  ! MODULUS_OP      [ shift and go to state 119 ]
  ! REP_OP          [ shift and go to state 130 ]


state 175

    (88) expression -> expression ASSIGNMENT_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .)
    XOR_STR_OP      reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .)
    AND_STR_OP      reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .)
    NOT_STR_OP      reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .)
    COMMA           reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .)
    ASSOCIATE_OP    reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .)
    SEMICOLON       reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    ADV_ASSIGNMENT_OP shift and go to state 134
    ASSIGNMENT_OP   shift and go to state 120
    RANGE_OP        shift and go to state 111
    OR_OP           shift and go to state 116
    AND_OP          shift and go to state 128
    BIT_OR          shift and go to state 135
    BIT_XOR         shift and go to state 112
    BIT_AND         shift and go to state 123
    EQUALS_OP       shift and go to state 105
    NOT_EQUALS_OP   shift and go to state 107
    COMPARE_OP      shift and go to state 106
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! RANGE_OP        [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! OR_OP           [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! AND_OP          [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! BIT_OR          [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! BIT_AND         [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! LESS_OP         [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! REP_OP          [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 88 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]


state 176

    (100) expression -> expression GREATER_EQUAL_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .)
    XOR_STR_OP      reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .)
    AND_STR_OP      reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .)
    NOT_STR_OP      reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .)
    COMMA           reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .)
    ASSOCIATE_OP    reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .)
    ASSIGNMENT_OP   reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .)
    RANGE_OP        reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .)
    OR_OP           reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .)
    AND_OP          reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .)
    BIT_OR          reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .)
    BIT_XOR         reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .)
    BIT_AND         reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .)
    EQUALS_OP       reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .)
    NOT_EQUALS_OP   reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .)
    COMPARE_OP      reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .)
    GREATER_OP      reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .)
    LESS_OP         reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .)
    GREATER_EQUAL_OP reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .)
    LESS_EQUAL_OP   reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .)
    SEMICOLON       reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! REP_OP          [ reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 100 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]
  ! BIT_OR          [ shift and go to state 135 ]
  ! BIT_XOR         [ shift and go to state 112 ]
  ! BIT_AND         [ shift and go to state 123 ]
  ! EQUALS_OP       [ shift and go to state 105 ]
  ! NOT_EQUALS_OP   [ shift and go to state 107 ]
  ! COMPARE_OP      [ shift and go to state 106 ]
  ! GREATER_OP      [ shift and go to state 138 ]
  ! LESS_OP         [ shift and go to state 117 ]
  ! GREATER_EQUAL_OP [ shift and go to state 121 ]
  ! LESS_EQUAL_OP   [ shift and go to state 104 ]


state 177

    (82) expression -> expression XOR_STR_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 82 (expression -> expression XOR_STR_OP expression .)
    XOR_STR_OP      reduce using rule 82 (expression -> expression XOR_STR_OP expression .)
    SEMICOLON       reduce using rule 82 (expression -> expression XOR_STR_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 82 (expression -> expression XOR_STR_OP expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    AND_STR_OP      shift and go to state 115
    NOT_STR_OP      shift and go to state 109
    COMMA           shift and go to state 118
    ASSOCIATE_OP    shift and go to state 126
    ADV_ASSIGNMENT_OP shift and go to state 134
    ASSIGNMENT_OP   shift and go to state 120
    RANGE_OP        shift and go to state 111
    OR_OP           shift and go to state 116
    AND_OP          shift and go to state 128
    BIT_OR          shift and go to state 135
    BIT_XOR         shift and go to state 112
    BIT_AND         shift and go to state 123
    EQUALS_OP       shift and go to state 105
    NOT_EQUALS_OP   shift and go to state 107
    COMPARE_OP      shift and go to state 106
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! AND_STR_OP      [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! NOT_STR_OP      [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! COMMA           [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! ASSOCIATE_OP    [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! RANGE_OP        [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! OR_OP           [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! AND_OP          [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! BIT_OR          [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! BIT_AND         [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! LESS_OP         [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! REP_OP          [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 82 (expression -> expression XOR_STR_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]


state 178

    (94) expression -> expression BIT_AND expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 94 (expression -> expression BIT_AND expression .)
    XOR_STR_OP      reduce using rule 94 (expression -> expression BIT_AND expression .)
    AND_STR_OP      reduce using rule 94 (expression -> expression BIT_AND expression .)
    NOT_STR_OP      reduce using rule 94 (expression -> expression BIT_AND expression .)
    COMMA           reduce using rule 94 (expression -> expression BIT_AND expression .)
    ASSOCIATE_OP    reduce using rule 94 (expression -> expression BIT_AND expression .)
    ADV_ASSIGNMENT_OP reduce using rule 94 (expression -> expression BIT_AND expression .)
    ASSIGNMENT_OP   reduce using rule 94 (expression -> expression BIT_AND expression .)
    RANGE_OP        reduce using rule 94 (expression -> expression BIT_AND expression .)
    OR_OP           reduce using rule 94 (expression -> expression BIT_AND expression .)
    AND_OP          reduce using rule 94 (expression -> expression BIT_AND expression .)
    BIT_OR          reduce using rule 94 (expression -> expression BIT_AND expression .)
    BIT_XOR         reduce using rule 94 (expression -> expression BIT_AND expression .)
    BIT_AND         reduce using rule 94 (expression -> expression BIT_AND expression .)
    SEMICOLON       reduce using rule 94 (expression -> expression BIT_AND expression .)
    CLOSE_PARANTHESIS reduce using rule 94 (expression -> expression BIT_AND expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    EQUALS_OP       shift and go to state 105
    NOT_EQUALS_OP   shift and go to state 107
    COMPARE_OP      shift and go to state 106
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 94 (expression -> expression BIT_AND expression .) ]
  ! DECREMENT_OP    [ reduce using rule 94 (expression -> expression BIT_AND expression .) ]
  ! EQUALS_OP       [ reduce using rule 94 (expression -> expression BIT_AND expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 94 (expression -> expression BIT_AND expression .) ]
  ! COMPARE_OP      [ reduce using rule 94 (expression -> expression BIT_AND expression .) ]
  ! GREATER_OP      [ reduce using rule 94 (expression -> expression BIT_AND expression .) ]
  ! LESS_OP         [ reduce using rule 94 (expression -> expression BIT_AND expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 94 (expression -> expression BIT_AND expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 94 (expression -> expression BIT_AND expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 94 (expression -> expression BIT_AND expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 94 (expression -> expression BIT_AND expression .) ]
  ! PLUS_OP         [ reduce using rule 94 (expression -> expression BIT_AND expression .) ]
  ! MINUS_OP        [ reduce using rule 94 (expression -> expression BIT_AND expression .) ]
  ! CONCATENATE     [ reduce using rule 94 (expression -> expression BIT_AND expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 94 (expression -> expression BIT_AND expression .) ]
  ! DIVISION_OP     [ reduce using rule 94 (expression -> expression BIT_AND expression .) ]
  ! MODULUS_OP      [ reduce using rule 94 (expression -> expression BIT_AND expression .) ]
  ! REP_OP          [ reduce using rule 94 (expression -> expression BIT_AND expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 94 (expression -> expression BIT_AND expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 94 (expression -> expression BIT_AND expression .) ]
  ! EXPONENT_OP     [ reduce using rule 94 (expression -> expression BIT_AND expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]
  ! BIT_OR          [ shift and go to state 135 ]
  ! BIT_XOR         [ shift and go to state 112 ]
  ! BIT_AND         [ shift and go to state 123 ]


state 179

    (107) expression -> expression MULTIPLICATION_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    XOR_STR_OP      reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    AND_STR_OP      reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    NOT_STR_OP      reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    COMMA           reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    ASSOCIATE_OP    reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    ASSIGNMENT_OP   reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    RANGE_OP        reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    OR_OP           reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    AND_OP          reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    BIT_OR          reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    BIT_XOR         reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    BIT_AND         reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    EQUALS_OP       reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    NOT_EQUALS_OP   reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    COMPARE_OP      reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    GREATER_OP      reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    LESS_OP         reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    GREATER_EQUAL_OP reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    LESS_EQUAL_OP   reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    PLUS_OP         reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    MINUS_OP        reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    CONCATENATE     reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    MULTIPLICATION_OP reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    DIVISION_OP     reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    MODULUS_OP      reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    REP_OP          reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    SEMICOLON       reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 107 (expression -> expression MULTIPLICATION_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]
  ! BIT_OR          [ shift and go to state 135 ]
  ! BIT_XOR         [ shift and go to state 112 ]
  ! BIT_AND         [ shift and go to state 123 ]
  ! EQUALS_OP       [ shift and go to state 105 ]
  ! NOT_EQUALS_OP   [ shift and go to state 107 ]
  ! COMPARE_OP      [ shift and go to state 106 ]
  ! GREATER_OP      [ shift and go to state 138 ]
  ! LESS_OP         [ shift and go to state 117 ]
  ! GREATER_EQUAL_OP [ shift and go to state 121 ]
  ! LESS_EQUAL_OP   [ shift and go to state 104 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 133 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 129 ]
  ! PLUS_OP         [ shift and go to state 136 ]
  ! MINUS_OP        [ shift and go to state 113 ]
  ! CONCATENATE     [ shift and go to state 131 ]
  ! MULTIPLICATION_OP [ shift and go to state 124 ]
  ! DIVISION_OP     [ shift and go to state 110 ]
  ! MODULUS_OP      [ shift and go to state 119 ]
  ! REP_OP          [ shift and go to state 130 ]


state 180

    (86) expression -> expression ASSOCIATE_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .)
    XOR_STR_OP      reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .)
    AND_STR_OP      reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .)
    NOT_STR_OP      reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .)
    COMMA           reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .)
    ASSOCIATE_OP    reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .)
    SEMICOLON       reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    ADV_ASSIGNMENT_OP shift and go to state 134
    ASSIGNMENT_OP   shift and go to state 120
    RANGE_OP        shift and go to state 111
    OR_OP           shift and go to state 116
    AND_OP          shift and go to state 128
    BIT_OR          shift and go to state 135
    BIT_XOR         shift and go to state 112
    BIT_AND         shift and go to state 123
    EQUALS_OP       shift and go to state 105
    NOT_EQUALS_OP   shift and go to state 107
    COMPARE_OP      shift and go to state 106
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! RANGE_OP        [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! OR_OP           [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! AND_OP          [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! BIT_OR          [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! BIT_AND         [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! LESS_OP         [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! REP_OP          [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 86 (expression -> expression ASSOCIATE_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]


state 181

    (81) expression -> expression OR_STR_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 81 (expression -> expression OR_STR_OP expression .)
    XOR_STR_OP      reduce using rule 81 (expression -> expression OR_STR_OP expression .)
    SEMICOLON       reduce using rule 81 (expression -> expression OR_STR_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 81 (expression -> expression OR_STR_OP expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    AND_STR_OP      shift and go to state 115
    NOT_STR_OP      shift and go to state 109
    COMMA           shift and go to state 118
    ASSOCIATE_OP    shift and go to state 126
    ADV_ASSIGNMENT_OP shift and go to state 134
    ASSIGNMENT_OP   shift and go to state 120
    RANGE_OP        shift and go to state 111
    OR_OP           shift and go to state 116
    AND_OP          shift and go to state 128
    BIT_OR          shift and go to state 135
    BIT_XOR         shift and go to state 112
    BIT_AND         shift and go to state 123
    EQUALS_OP       shift and go to state 105
    NOT_EQUALS_OP   shift and go to state 107
    COMPARE_OP      shift and go to state 106
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! AND_STR_OP      [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! NOT_STR_OP      [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! COMMA           [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! ASSOCIATE_OP    [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! RANGE_OP        [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! OR_OP           [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! AND_OP          [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! BIT_OR          [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! BIT_AND         [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! LESS_OP         [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! REP_OP          [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 81 (expression -> expression OR_STR_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]


state 182

    (91) expression -> expression AND_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 91 (expression -> expression AND_OP expression .)
    XOR_STR_OP      reduce using rule 91 (expression -> expression AND_OP expression .)
    AND_STR_OP      reduce using rule 91 (expression -> expression AND_OP expression .)
    NOT_STR_OP      reduce using rule 91 (expression -> expression AND_OP expression .)
    COMMA           reduce using rule 91 (expression -> expression AND_OP expression .)
    ASSOCIATE_OP    reduce using rule 91 (expression -> expression AND_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 91 (expression -> expression AND_OP expression .)
    ASSIGNMENT_OP   reduce using rule 91 (expression -> expression AND_OP expression .)
    RANGE_OP        reduce using rule 91 (expression -> expression AND_OP expression .)
    OR_OP           reduce using rule 91 (expression -> expression AND_OP expression .)
    AND_OP          reduce using rule 91 (expression -> expression AND_OP expression .)
    SEMICOLON       reduce using rule 91 (expression -> expression AND_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 91 (expression -> expression AND_OP expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    BIT_OR          shift and go to state 135
    BIT_XOR         shift and go to state 112
    BIT_AND         shift and go to state 123
    EQUALS_OP       shift and go to state 105
    NOT_EQUALS_OP   shift and go to state 107
    COMPARE_OP      shift and go to state 106
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 91 (expression -> expression AND_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 91 (expression -> expression AND_OP expression .) ]
  ! BIT_OR          [ reduce using rule 91 (expression -> expression AND_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 91 (expression -> expression AND_OP expression .) ]
  ! BIT_AND         [ reduce using rule 91 (expression -> expression AND_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 91 (expression -> expression AND_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 91 (expression -> expression AND_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 91 (expression -> expression AND_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 91 (expression -> expression AND_OP expression .) ]
  ! LESS_OP         [ reduce using rule 91 (expression -> expression AND_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 91 (expression -> expression AND_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 91 (expression -> expression AND_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 91 (expression -> expression AND_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 91 (expression -> expression AND_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 91 (expression -> expression AND_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 91 (expression -> expression AND_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 91 (expression -> expression AND_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 91 (expression -> expression AND_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 91 (expression -> expression AND_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 91 (expression -> expression AND_OP expression .) ]
  ! REP_OP          [ reduce using rule 91 (expression -> expression AND_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 91 (expression -> expression AND_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 91 (expression -> expression AND_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 91 (expression -> expression AND_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]


state 183

    (103) expression -> expression BIT_LEFT_SHIFT expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .)
    XOR_STR_OP      reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .)
    AND_STR_OP      reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .)
    NOT_STR_OP      reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .)
    COMMA           reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .)
    ASSOCIATE_OP    reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .)
    ADV_ASSIGNMENT_OP reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .)
    ASSIGNMENT_OP   reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .)
    RANGE_OP        reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .)
    OR_OP           reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .)
    AND_OP          reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .)
    BIT_OR          reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .)
    BIT_XOR         reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .)
    BIT_AND         reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .)
    EQUALS_OP       reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .)
    NOT_EQUALS_OP   reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .)
    COMPARE_OP      reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .)
    GREATER_OP      reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .)
    LESS_OP         reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .)
    GREATER_EQUAL_OP reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .)
    LESS_EQUAL_OP   reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .)
    BIT_RIGHT_SHIFT reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .)
    BIT_LEFT_SHIFT  reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .)
    SEMICOLON       reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .)
    CLOSE_PARANTHESIS reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! DECREMENT_OP    [ reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! PLUS_OP         [ reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! MINUS_OP        [ reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! CONCATENATE     [ reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! DIVISION_OP     [ reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! MODULUS_OP      [ reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! REP_OP          [ reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! EXPONENT_OP     [ reduce using rule 103 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]
  ! BIT_OR          [ shift and go to state 135 ]
  ! BIT_XOR         [ shift and go to state 112 ]
  ! BIT_AND         [ shift and go to state 123 ]
  ! EQUALS_OP       [ shift and go to state 105 ]
  ! NOT_EQUALS_OP   [ shift and go to state 107 ]
  ! COMPARE_OP      [ shift and go to state 106 ]
  ! GREATER_OP      [ shift and go to state 138 ]
  ! LESS_OP         [ shift and go to state 117 ]
  ! GREATER_EQUAL_OP [ shift and go to state 121 ]
  ! LESS_EQUAL_OP   [ shift and go to state 104 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 133 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 129 ]


state 184

    (110) expression -> expression REP_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 110 (expression -> expression REP_OP expression .)
    XOR_STR_OP      reduce using rule 110 (expression -> expression REP_OP expression .)
    AND_STR_OP      reduce using rule 110 (expression -> expression REP_OP expression .)
    NOT_STR_OP      reduce using rule 110 (expression -> expression REP_OP expression .)
    COMMA           reduce using rule 110 (expression -> expression REP_OP expression .)
    ASSOCIATE_OP    reduce using rule 110 (expression -> expression REP_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 110 (expression -> expression REP_OP expression .)
    ASSIGNMENT_OP   reduce using rule 110 (expression -> expression REP_OP expression .)
    RANGE_OP        reduce using rule 110 (expression -> expression REP_OP expression .)
    OR_OP           reduce using rule 110 (expression -> expression REP_OP expression .)
    AND_OP          reduce using rule 110 (expression -> expression REP_OP expression .)
    BIT_OR          reduce using rule 110 (expression -> expression REP_OP expression .)
    BIT_XOR         reduce using rule 110 (expression -> expression REP_OP expression .)
    BIT_AND         reduce using rule 110 (expression -> expression REP_OP expression .)
    EQUALS_OP       reduce using rule 110 (expression -> expression REP_OP expression .)
    NOT_EQUALS_OP   reduce using rule 110 (expression -> expression REP_OP expression .)
    COMPARE_OP      reduce using rule 110 (expression -> expression REP_OP expression .)
    GREATER_OP      reduce using rule 110 (expression -> expression REP_OP expression .)
    LESS_OP         reduce using rule 110 (expression -> expression REP_OP expression .)
    GREATER_EQUAL_OP reduce using rule 110 (expression -> expression REP_OP expression .)
    LESS_EQUAL_OP   reduce using rule 110 (expression -> expression REP_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 110 (expression -> expression REP_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 110 (expression -> expression REP_OP expression .)
    PLUS_OP         reduce using rule 110 (expression -> expression REP_OP expression .)
    MINUS_OP        reduce using rule 110 (expression -> expression REP_OP expression .)
    CONCATENATE     reduce using rule 110 (expression -> expression REP_OP expression .)
    MULTIPLICATION_OP reduce using rule 110 (expression -> expression REP_OP expression .)
    DIVISION_OP     reduce using rule 110 (expression -> expression REP_OP expression .)
    MODULUS_OP      reduce using rule 110 (expression -> expression REP_OP expression .)
    REP_OP          reduce using rule 110 (expression -> expression REP_OP expression .)
    SEMICOLON       reduce using rule 110 (expression -> expression REP_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 110 (expression -> expression REP_OP expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 110 (expression -> expression REP_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 110 (expression -> expression REP_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 110 (expression -> expression REP_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 110 (expression -> expression REP_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 110 (expression -> expression REP_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]
  ! BIT_OR          [ shift and go to state 135 ]
  ! BIT_XOR         [ shift and go to state 112 ]
  ! BIT_AND         [ shift and go to state 123 ]
  ! EQUALS_OP       [ shift and go to state 105 ]
  ! NOT_EQUALS_OP   [ shift and go to state 107 ]
  ! COMPARE_OP      [ shift and go to state 106 ]
  ! GREATER_OP      [ shift and go to state 138 ]
  ! LESS_OP         [ shift and go to state 117 ]
  ! GREATER_EQUAL_OP [ shift and go to state 121 ]
  ! LESS_EQUAL_OP   [ shift and go to state 104 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 133 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 129 ]
  ! PLUS_OP         [ shift and go to state 136 ]
  ! MINUS_OP        [ shift and go to state 113 ]
  ! CONCATENATE     [ shift and go to state 131 ]
  ! MULTIPLICATION_OP [ shift and go to state 124 ]
  ! DIVISION_OP     [ shift and go to state 110 ]
  ! MODULUS_OP      [ shift and go to state 119 ]
  ! REP_OP          [ shift and go to state 130 ]


state 185

    (106) expression -> expression CONCATENATE expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 106 (expression -> expression CONCATENATE expression .)
    XOR_STR_OP      reduce using rule 106 (expression -> expression CONCATENATE expression .)
    AND_STR_OP      reduce using rule 106 (expression -> expression CONCATENATE expression .)
    NOT_STR_OP      reduce using rule 106 (expression -> expression CONCATENATE expression .)
    COMMA           reduce using rule 106 (expression -> expression CONCATENATE expression .)
    ASSOCIATE_OP    reduce using rule 106 (expression -> expression CONCATENATE expression .)
    ADV_ASSIGNMENT_OP reduce using rule 106 (expression -> expression CONCATENATE expression .)
    ASSIGNMENT_OP   reduce using rule 106 (expression -> expression CONCATENATE expression .)
    RANGE_OP        reduce using rule 106 (expression -> expression CONCATENATE expression .)
    OR_OP           reduce using rule 106 (expression -> expression CONCATENATE expression .)
    AND_OP          reduce using rule 106 (expression -> expression CONCATENATE expression .)
    BIT_OR          reduce using rule 106 (expression -> expression CONCATENATE expression .)
    BIT_XOR         reduce using rule 106 (expression -> expression CONCATENATE expression .)
    BIT_AND         reduce using rule 106 (expression -> expression CONCATENATE expression .)
    EQUALS_OP       reduce using rule 106 (expression -> expression CONCATENATE expression .)
    NOT_EQUALS_OP   reduce using rule 106 (expression -> expression CONCATENATE expression .)
    COMPARE_OP      reduce using rule 106 (expression -> expression CONCATENATE expression .)
    GREATER_OP      reduce using rule 106 (expression -> expression CONCATENATE expression .)
    LESS_OP         reduce using rule 106 (expression -> expression CONCATENATE expression .)
    GREATER_EQUAL_OP reduce using rule 106 (expression -> expression CONCATENATE expression .)
    LESS_EQUAL_OP   reduce using rule 106 (expression -> expression CONCATENATE expression .)
    BIT_RIGHT_SHIFT reduce using rule 106 (expression -> expression CONCATENATE expression .)
    BIT_LEFT_SHIFT  reduce using rule 106 (expression -> expression CONCATENATE expression .)
    PLUS_OP         reduce using rule 106 (expression -> expression CONCATENATE expression .)
    MINUS_OP        reduce using rule 106 (expression -> expression CONCATENATE expression .)
    CONCATENATE     reduce using rule 106 (expression -> expression CONCATENATE expression .)
    SEMICOLON       reduce using rule 106 (expression -> expression CONCATENATE expression .)
    CLOSE_PARANTHESIS reduce using rule 106 (expression -> expression CONCATENATE expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 106 (expression -> expression CONCATENATE expression .) ]
  ! DECREMENT_OP    [ reduce using rule 106 (expression -> expression CONCATENATE expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 106 (expression -> expression CONCATENATE expression .) ]
  ! DIVISION_OP     [ reduce using rule 106 (expression -> expression CONCATENATE expression .) ]
  ! MODULUS_OP      [ reduce using rule 106 (expression -> expression CONCATENATE expression .) ]
  ! REP_OP          [ reduce using rule 106 (expression -> expression CONCATENATE expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 106 (expression -> expression CONCATENATE expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 106 (expression -> expression CONCATENATE expression .) ]
  ! EXPONENT_OP     [ reduce using rule 106 (expression -> expression CONCATENATE expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]
  ! BIT_OR          [ shift and go to state 135 ]
  ! BIT_XOR         [ shift and go to state 112 ]
  ! BIT_AND         [ shift and go to state 123 ]
  ! EQUALS_OP       [ shift and go to state 105 ]
  ! NOT_EQUALS_OP   [ shift and go to state 107 ]
  ! COMPARE_OP      [ shift and go to state 106 ]
  ! GREATER_OP      [ shift and go to state 138 ]
  ! LESS_OP         [ shift and go to state 117 ]
  ! GREATER_EQUAL_OP [ shift and go to state 121 ]
  ! LESS_EQUAL_OP   [ shift and go to state 104 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 133 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 129 ]
  ! PLUS_OP         [ shift and go to state 136 ]
  ! MINUS_OP        [ shift and go to state 113 ]
  ! CONCATENATE     [ shift and go to state 131 ]


state 186

    (102) expression -> expression BIT_RIGHT_SHIFT expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .)
    XOR_STR_OP      reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .)
    AND_STR_OP      reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .)
    NOT_STR_OP      reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .)
    COMMA           reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .)
    ASSOCIATE_OP    reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .)
    ADV_ASSIGNMENT_OP reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .)
    ASSIGNMENT_OP   reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .)
    RANGE_OP        reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .)
    OR_OP           reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .)
    AND_OP          reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .)
    BIT_OR          reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .)
    BIT_XOR         reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .)
    BIT_AND         reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .)
    EQUALS_OP       reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .)
    NOT_EQUALS_OP   reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .)
    COMPARE_OP      reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .)
    GREATER_OP      reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .)
    LESS_OP         reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .)
    GREATER_EQUAL_OP reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .)
    LESS_EQUAL_OP   reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .)
    BIT_RIGHT_SHIFT reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .)
    BIT_LEFT_SHIFT  reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .)
    SEMICOLON       reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .)
    CLOSE_PARANTHESIS reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! DECREMENT_OP    [ reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! PLUS_OP         [ reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! MINUS_OP        [ reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! CONCATENATE     [ reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! DIVISION_OP     [ reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! MODULUS_OP      [ reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! REP_OP          [ reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! EXPONENT_OP     [ reduce using rule 102 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]
  ! BIT_OR          [ shift and go to state 135 ]
  ! BIT_XOR         [ shift and go to state 112 ]
  ! BIT_AND         [ shift and go to state 123 ]
  ! EQUALS_OP       [ shift and go to state 105 ]
  ! NOT_EQUALS_OP   [ shift and go to state 107 ]
  ! COMPARE_OP      [ shift and go to state 106 ]
  ! GREATER_OP      [ shift and go to state 138 ]
  ! LESS_OP         [ shift and go to state 117 ]
  ! GREATER_EQUAL_OP [ shift and go to state 121 ]
  ! LESS_EQUAL_OP   [ shift and go to state 104 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 133 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 129 ]


state 187

    (87) expression -> expression ADV_ASSIGNMENT_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    XOR_STR_OP      reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    AND_STR_OP      reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    NOT_STR_OP      reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    COMMA           reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    ASSOCIATE_OP    reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    SEMICOLON       reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    ADV_ASSIGNMENT_OP shift and go to state 134
    ASSIGNMENT_OP   shift and go to state 120
    RANGE_OP        shift and go to state 111
    OR_OP           shift and go to state 116
    AND_OP          shift and go to state 128
    BIT_OR          shift and go to state 135
    BIT_XOR         shift and go to state 112
    BIT_AND         shift and go to state 123
    EQUALS_OP       shift and go to state 105
    NOT_EQUALS_OP   shift and go to state 107
    COMPARE_OP      shift and go to state 106
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! RANGE_OP        [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! OR_OP           [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! AND_OP          [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! BIT_OR          [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! BIT_AND         [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! LESS_OP         [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! REP_OP          [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 87 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]


state 188

    (92) expression -> expression BIT_OR expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 92 (expression -> expression BIT_OR expression .)
    XOR_STR_OP      reduce using rule 92 (expression -> expression BIT_OR expression .)
    AND_STR_OP      reduce using rule 92 (expression -> expression BIT_OR expression .)
    NOT_STR_OP      reduce using rule 92 (expression -> expression BIT_OR expression .)
    COMMA           reduce using rule 92 (expression -> expression BIT_OR expression .)
    ASSOCIATE_OP    reduce using rule 92 (expression -> expression BIT_OR expression .)
    ADV_ASSIGNMENT_OP reduce using rule 92 (expression -> expression BIT_OR expression .)
    ASSIGNMENT_OP   reduce using rule 92 (expression -> expression BIT_OR expression .)
    RANGE_OP        reduce using rule 92 (expression -> expression BIT_OR expression .)
    OR_OP           reduce using rule 92 (expression -> expression BIT_OR expression .)
    AND_OP          reduce using rule 92 (expression -> expression BIT_OR expression .)
    BIT_OR          reduce using rule 92 (expression -> expression BIT_OR expression .)
    BIT_XOR         reduce using rule 92 (expression -> expression BIT_OR expression .)
    SEMICOLON       reduce using rule 92 (expression -> expression BIT_OR expression .)
    CLOSE_PARANTHESIS reduce using rule 92 (expression -> expression BIT_OR expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    BIT_AND         shift and go to state 123
    EQUALS_OP       shift and go to state 105
    NOT_EQUALS_OP   shift and go to state 107
    COMPARE_OP      shift and go to state 106
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 92 (expression -> expression BIT_OR expression .) ]
  ! DECREMENT_OP    [ reduce using rule 92 (expression -> expression BIT_OR expression .) ]
  ! BIT_AND         [ reduce using rule 92 (expression -> expression BIT_OR expression .) ]
  ! EQUALS_OP       [ reduce using rule 92 (expression -> expression BIT_OR expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 92 (expression -> expression BIT_OR expression .) ]
  ! COMPARE_OP      [ reduce using rule 92 (expression -> expression BIT_OR expression .) ]
  ! GREATER_OP      [ reduce using rule 92 (expression -> expression BIT_OR expression .) ]
  ! LESS_OP         [ reduce using rule 92 (expression -> expression BIT_OR expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 92 (expression -> expression BIT_OR expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 92 (expression -> expression BIT_OR expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 92 (expression -> expression BIT_OR expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 92 (expression -> expression BIT_OR expression .) ]
  ! PLUS_OP         [ reduce using rule 92 (expression -> expression BIT_OR expression .) ]
  ! MINUS_OP        [ reduce using rule 92 (expression -> expression BIT_OR expression .) ]
  ! CONCATENATE     [ reduce using rule 92 (expression -> expression BIT_OR expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 92 (expression -> expression BIT_OR expression .) ]
  ! DIVISION_OP     [ reduce using rule 92 (expression -> expression BIT_OR expression .) ]
  ! MODULUS_OP      [ reduce using rule 92 (expression -> expression BIT_OR expression .) ]
  ! REP_OP          [ reduce using rule 92 (expression -> expression BIT_OR expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 92 (expression -> expression BIT_OR expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 92 (expression -> expression BIT_OR expression .) ]
  ! EXPONENT_OP     [ reduce using rule 92 (expression -> expression BIT_OR expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]
  ! BIT_OR          [ shift and go to state 135 ]
  ! BIT_XOR         [ shift and go to state 112 ]


state 189

    (104) expression -> expression PLUS_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 104 (expression -> expression PLUS_OP expression .)
    XOR_STR_OP      reduce using rule 104 (expression -> expression PLUS_OP expression .)
    AND_STR_OP      reduce using rule 104 (expression -> expression PLUS_OP expression .)
    NOT_STR_OP      reduce using rule 104 (expression -> expression PLUS_OP expression .)
    COMMA           reduce using rule 104 (expression -> expression PLUS_OP expression .)
    ASSOCIATE_OP    reduce using rule 104 (expression -> expression PLUS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 104 (expression -> expression PLUS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 104 (expression -> expression PLUS_OP expression .)
    RANGE_OP        reduce using rule 104 (expression -> expression PLUS_OP expression .)
    OR_OP           reduce using rule 104 (expression -> expression PLUS_OP expression .)
    AND_OP          reduce using rule 104 (expression -> expression PLUS_OP expression .)
    BIT_OR          reduce using rule 104 (expression -> expression PLUS_OP expression .)
    BIT_XOR         reduce using rule 104 (expression -> expression PLUS_OP expression .)
    BIT_AND         reduce using rule 104 (expression -> expression PLUS_OP expression .)
    EQUALS_OP       reduce using rule 104 (expression -> expression PLUS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 104 (expression -> expression PLUS_OP expression .)
    COMPARE_OP      reduce using rule 104 (expression -> expression PLUS_OP expression .)
    GREATER_OP      reduce using rule 104 (expression -> expression PLUS_OP expression .)
    LESS_OP         reduce using rule 104 (expression -> expression PLUS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 104 (expression -> expression PLUS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 104 (expression -> expression PLUS_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 104 (expression -> expression PLUS_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 104 (expression -> expression PLUS_OP expression .)
    PLUS_OP         reduce using rule 104 (expression -> expression PLUS_OP expression .)
    MINUS_OP        reduce using rule 104 (expression -> expression PLUS_OP expression .)
    CONCATENATE     reduce using rule 104 (expression -> expression PLUS_OP expression .)
    SEMICOLON       reduce using rule 104 (expression -> expression PLUS_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 104 (expression -> expression PLUS_OP expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 104 (expression -> expression PLUS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 104 (expression -> expression PLUS_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 104 (expression -> expression PLUS_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 104 (expression -> expression PLUS_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 104 (expression -> expression PLUS_OP expression .) ]
  ! REP_OP          [ reduce using rule 104 (expression -> expression PLUS_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 104 (expression -> expression PLUS_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 104 (expression -> expression PLUS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 104 (expression -> expression PLUS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]
  ! BIT_OR          [ shift and go to state 135 ]
  ! BIT_XOR         [ shift and go to state 112 ]
  ! BIT_AND         [ shift and go to state 123 ]
  ! EQUALS_OP       [ shift and go to state 105 ]
  ! NOT_EQUALS_OP   [ shift and go to state 107 ]
  ! COMPARE_OP      [ shift and go to state 106 ]
  ! GREATER_OP      [ shift and go to state 138 ]
  ! LESS_OP         [ shift and go to state 117 ]
  ! GREATER_EQUAL_OP [ shift and go to state 121 ]
  ! LESS_EQUAL_OP   [ shift and go to state 104 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 133 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 129 ]
  ! PLUS_OP         [ shift and go to state 136 ]
  ! MINUS_OP        [ shift and go to state 113 ]
  ! CONCATENATE     [ shift and go to state 131 ]


state 190

    (112) expression -> expression SEARCH_MODIFY_NEG expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    XOR_STR_OP      reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    AND_STR_OP      reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    NOT_STR_OP      reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    COMMA           reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    ASSOCIATE_OP    reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    ADV_ASSIGNMENT_OP reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    ASSIGNMENT_OP   reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    RANGE_OP        reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    OR_OP           reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    AND_OP          reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    BIT_OR          reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    BIT_XOR         reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    BIT_AND         reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    EQUALS_OP       reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    NOT_EQUALS_OP   reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    COMPARE_OP      reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    GREATER_OP      reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    LESS_OP         reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    GREATER_EQUAL_OP reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    LESS_EQUAL_OP   reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    BIT_RIGHT_SHIFT reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    BIT_LEFT_SHIFT  reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    PLUS_OP         reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    MINUS_OP        reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    CONCATENATE     reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    MULTIPLICATION_OP reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    DIVISION_OP     reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    MODULUS_OP      reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    REP_OP          reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    SEARCH_MODIFY   reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    SEARCH_MODIFY_NEG reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    SEMICOLON       reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    CLOSE_PARANTHESIS reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .) ]
  ! DECREMENT_OP    [ reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .) ]
  ! EXPONENT_OP     [ reduce using rule 112 (expression -> expression SEARCH_MODIFY_NEG expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]
  ! BIT_OR          [ shift and go to state 135 ]
  ! BIT_XOR         [ shift and go to state 112 ]
  ! BIT_AND         [ shift and go to state 123 ]
  ! EQUALS_OP       [ shift and go to state 105 ]
  ! NOT_EQUALS_OP   [ shift and go to state 107 ]
  ! COMPARE_OP      [ shift and go to state 106 ]
  ! GREATER_OP      [ shift and go to state 138 ]
  ! LESS_OP         [ shift and go to state 117 ]
  ! GREATER_EQUAL_OP [ shift and go to state 121 ]
  ! LESS_EQUAL_OP   [ shift and go to state 104 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 133 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 129 ]
  ! PLUS_OP         [ shift and go to state 136 ]
  ! MINUS_OP        [ shift and go to state 113 ]
  ! CONCATENATE     [ shift and go to state 131 ]
  ! MULTIPLICATION_OP [ shift and go to state 124 ]
  ! DIVISION_OP     [ shift and go to state 110 ]
  ! MODULUS_OP      [ shift and go to state 119 ]
  ! REP_OP          [ shift and go to state 130 ]
  ! SEARCH_MODIFY   [ shift and go to state 103 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 137 ]


state 191

    (98) expression -> expression GREATER_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 98 (expression -> expression GREATER_OP expression .)
    XOR_STR_OP      reduce using rule 98 (expression -> expression GREATER_OP expression .)
    AND_STR_OP      reduce using rule 98 (expression -> expression GREATER_OP expression .)
    NOT_STR_OP      reduce using rule 98 (expression -> expression GREATER_OP expression .)
    COMMA           reduce using rule 98 (expression -> expression GREATER_OP expression .)
    ASSOCIATE_OP    reduce using rule 98 (expression -> expression GREATER_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 98 (expression -> expression GREATER_OP expression .)
    ASSIGNMENT_OP   reduce using rule 98 (expression -> expression GREATER_OP expression .)
    RANGE_OP        reduce using rule 98 (expression -> expression GREATER_OP expression .)
    OR_OP           reduce using rule 98 (expression -> expression GREATER_OP expression .)
    AND_OP          reduce using rule 98 (expression -> expression GREATER_OP expression .)
    BIT_OR          reduce using rule 98 (expression -> expression GREATER_OP expression .)
    BIT_XOR         reduce using rule 98 (expression -> expression GREATER_OP expression .)
    BIT_AND         reduce using rule 98 (expression -> expression GREATER_OP expression .)
    EQUALS_OP       reduce using rule 98 (expression -> expression GREATER_OP expression .)
    NOT_EQUALS_OP   reduce using rule 98 (expression -> expression GREATER_OP expression .)
    COMPARE_OP      reduce using rule 98 (expression -> expression GREATER_OP expression .)
    GREATER_OP      reduce using rule 98 (expression -> expression GREATER_OP expression .)
    LESS_OP         reduce using rule 98 (expression -> expression GREATER_OP expression .)
    GREATER_EQUAL_OP reduce using rule 98 (expression -> expression GREATER_OP expression .)
    LESS_EQUAL_OP   reduce using rule 98 (expression -> expression GREATER_OP expression .)
    SEMICOLON       reduce using rule 98 (expression -> expression GREATER_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 98 (expression -> expression GREATER_OP expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 98 (expression -> expression GREATER_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 98 (expression -> expression GREATER_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 98 (expression -> expression GREATER_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 98 (expression -> expression GREATER_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 98 (expression -> expression GREATER_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 98 (expression -> expression GREATER_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 98 (expression -> expression GREATER_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 98 (expression -> expression GREATER_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 98 (expression -> expression GREATER_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 98 (expression -> expression GREATER_OP expression .) ]
  ! REP_OP          [ reduce using rule 98 (expression -> expression GREATER_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 98 (expression -> expression GREATER_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 98 (expression -> expression GREATER_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 98 (expression -> expression GREATER_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! COMMA           [ shift and go to state 118 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 134 ]
  ! ASSIGNMENT_OP   [ shift and go to state 120 ]
  ! RANGE_OP        [ shift and go to state 111 ]
  ! OR_OP           [ shift and go to state 116 ]
  ! AND_OP          [ shift and go to state 128 ]
  ! BIT_OR          [ shift and go to state 135 ]
  ! BIT_XOR         [ shift and go to state 112 ]
  ! BIT_AND         [ shift and go to state 123 ]
  ! EQUALS_OP       [ shift and go to state 105 ]
  ! NOT_EQUALS_OP   [ shift and go to state 107 ]
  ! COMPARE_OP      [ shift and go to state 106 ]
  ! GREATER_OP      [ shift and go to state 138 ]
  ! LESS_OP         [ shift and go to state 117 ]
  ! GREATER_EQUAL_OP [ shift and go to state 121 ]
  ! LESS_EQUAL_OP   [ shift and go to state 104 ]


state 192

    (23) caselist -> CASE . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block caselist

    OPEN_PARANTHESIS shift and go to state 206


state 193

    (22) switchStatement -> SWITCH lefthandside BLOCK_BEGIN caselist . BLOCK_ENDS

    BLOCK_ENDS      shift and go to state 207


state 194

    (24) caselist -> ELSE . block
    (3) block -> . BLOCK_BEGIN statements BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 7

    block                          shift and go to state 208

state 195

    (25) caselist -> empty .

    BLOCK_ENDS      reduce using rule 25 (caselist -> empty .)


state 196

    (39) lefthandside -> PRIVATE OPEN_PARANTHESIS type decList . CLOSE_PARANTHESIS

    CLOSE_PARANTHESIS shift and go to state 209


state 197

    (47) functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 210


state 198

    (48) parameters -> expression COMMA . parameters
    (85) expression -> expression COMMA . expression
    (48) parameters -> . expression COMMA parameters
    (49) parameters -> . expression
    (50) parameters -> . empty
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    parameters                     shift and go to state 211
    expression                     shift and go to state 212
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 143

state 199

    (52) forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON . expression SEMICOLON expression CLOSE_PARANTHESIS block
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    SEMICOLON       reduce using rule 6 (empty -> .)
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 213
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 200

    (35) assignment -> lefthandside assignmenttype expression SEMICOLON .

    RETURN          reduce using rule 35 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    IDENTIFIER      reduce using rule 35 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    WHILE           reduce using rule 35 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    FOR             reduce using rule 35 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    PRINT           reduce using rule 35 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    SUB             reduce using rule 35 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    LAST            reduce using rule 35 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    NEXT            reduce using rule 35 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    IF              reduce using rule 35 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    USE             reduce using rule 35 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    SWITCH          reduce using rule 35 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    PRIVATE         reduce using rule 35 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    LOCAL           reduce using rule 35 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 35 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    ARRAY           reduce using rule 35 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    HASH            reduce using rule 35 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    VARIABLE        reduce using rule 35 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    $end            reduce using rule 35 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    BLOCK_ENDS      reduce using rule 35 (assignment -> lefthandside assignmenttype expression SEMICOLON .)


state 201

    (41) lefthandside -> LOCAL OPEN_PARANTHESIS type decList . CLOSE_PARANTHESIS

    CLOSE_PARANTHESIS shift and go to state 214


state 202

    (26) ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS . block
    (27) ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS . block ELSE block
    (3) block -> . BLOCK_BEGIN statements BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 7

    block                          shift and go to state 215

state 203

    (45) decList -> COMMA type decList .

    CLOSE_PARANTHESIS reduce using rule 45 (decList -> COMMA type decList .)
    SEMICOLON       reduce using rule 45 (decList -> COMMA type decList .)
    ADV_ASSIGNMENT_OP reduce using rule 45 (decList -> COMMA type decList .)
    ASSIGNMENT_OP   reduce using rule 45 (decList -> COMMA type decList .)
    BLOCK_BEGIN     reduce using rule 45 (decList -> COMMA type decList .)


state 204

    (51) whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .

    RETURN          reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    IDENTIFIER      reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    WHILE           reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    FOR             reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    PRINT           reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    SUB             reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    LAST            reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    NEXT            reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    IF              reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    USE             reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    SWITCH          reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    PRIVATE         reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    LOCAL           reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    OPEN_PARANTHESIS reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    ARRAY           reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    HASH            reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    VARIABLE        reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    BLOCK_ENDS      reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    $end            reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)


state 205

    (31) printStatement -> PRINT OPEN_PARANTHESIS string CLOSE_PARANTHESIS SEMICOLON .

    RETURN          reduce using rule 31 (printStatement -> PRINT OPEN_PARANTHESIS string CLOSE_PARANTHESIS SEMICOLON .)
    IDENTIFIER      reduce using rule 31 (printStatement -> PRINT OPEN_PARANTHESIS string CLOSE_PARANTHESIS SEMICOLON .)
    WHILE           reduce using rule 31 (printStatement -> PRINT OPEN_PARANTHESIS string CLOSE_PARANTHESIS SEMICOLON .)
    FOR             reduce using rule 31 (printStatement -> PRINT OPEN_PARANTHESIS string CLOSE_PARANTHESIS SEMICOLON .)
    PRINT           reduce using rule 31 (printStatement -> PRINT OPEN_PARANTHESIS string CLOSE_PARANTHESIS SEMICOLON .)
    SUB             reduce using rule 31 (printStatement -> PRINT OPEN_PARANTHESIS string CLOSE_PARANTHESIS SEMICOLON .)
    LAST            reduce using rule 31 (printStatement -> PRINT OPEN_PARANTHESIS string CLOSE_PARANTHESIS SEMICOLON .)
    NEXT            reduce using rule 31 (printStatement -> PRINT OPEN_PARANTHESIS string CLOSE_PARANTHESIS SEMICOLON .)
    IF              reduce using rule 31 (printStatement -> PRINT OPEN_PARANTHESIS string CLOSE_PARANTHESIS SEMICOLON .)
    USE             reduce using rule 31 (printStatement -> PRINT OPEN_PARANTHESIS string CLOSE_PARANTHESIS SEMICOLON .)
    SWITCH          reduce using rule 31 (printStatement -> PRINT OPEN_PARANTHESIS string CLOSE_PARANTHESIS SEMICOLON .)
    PRIVATE         reduce using rule 31 (printStatement -> PRINT OPEN_PARANTHESIS string CLOSE_PARANTHESIS SEMICOLON .)
    LOCAL           reduce using rule 31 (printStatement -> PRINT OPEN_PARANTHESIS string CLOSE_PARANTHESIS SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 31 (printStatement -> PRINT OPEN_PARANTHESIS string CLOSE_PARANTHESIS SEMICOLON .)
    ARRAY           reduce using rule 31 (printStatement -> PRINT OPEN_PARANTHESIS string CLOSE_PARANTHESIS SEMICOLON .)
    HASH            reduce using rule 31 (printStatement -> PRINT OPEN_PARANTHESIS string CLOSE_PARANTHESIS SEMICOLON .)
    VARIABLE        reduce using rule 31 (printStatement -> PRINT OPEN_PARANTHESIS string CLOSE_PARANTHESIS SEMICOLON .)
    $end            reduce using rule 31 (printStatement -> PRINT OPEN_PARANTHESIS string CLOSE_PARANTHESIS SEMICOLON .)
    BLOCK_ENDS      reduce using rule 31 (printStatement -> PRINT OPEN_PARANTHESIS string CLOSE_PARANTHESIS SEMICOLON .)


state 206

    (23) caselist -> CASE OPEN_PARANTHESIS . expression CLOSE_PARANTHESIS block caselist
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    type                           shift and go to state 54
    number                         shift and go to state 48
    variable                       shift and go to state 59
    expression                     shift and go to state 216
    empty                          shift and go to state 55

state 207

    (22) switchStatement -> SWITCH lefthandside BLOCK_BEGIN caselist BLOCK_ENDS .

    RETURN          reduce using rule 22 (switchStatement -> SWITCH lefthandside BLOCK_BEGIN caselist BLOCK_ENDS .)
    IDENTIFIER      reduce using rule 22 (switchStatement -> SWITCH lefthandside BLOCK_BEGIN caselist BLOCK_ENDS .)
    WHILE           reduce using rule 22 (switchStatement -> SWITCH lefthandside BLOCK_BEGIN caselist BLOCK_ENDS .)
    FOR             reduce using rule 22 (switchStatement -> SWITCH lefthandside BLOCK_BEGIN caselist BLOCK_ENDS .)
    PRINT           reduce using rule 22 (switchStatement -> SWITCH lefthandside BLOCK_BEGIN caselist BLOCK_ENDS .)
    SUB             reduce using rule 22 (switchStatement -> SWITCH lefthandside BLOCK_BEGIN caselist BLOCK_ENDS .)
    LAST            reduce using rule 22 (switchStatement -> SWITCH lefthandside BLOCK_BEGIN caselist BLOCK_ENDS .)
    NEXT            reduce using rule 22 (switchStatement -> SWITCH lefthandside BLOCK_BEGIN caselist BLOCK_ENDS .)
    IF              reduce using rule 22 (switchStatement -> SWITCH lefthandside BLOCK_BEGIN caselist BLOCK_ENDS .)
    USE             reduce using rule 22 (switchStatement -> SWITCH lefthandside BLOCK_BEGIN caselist BLOCK_ENDS .)
    SWITCH          reduce using rule 22 (switchStatement -> SWITCH lefthandside BLOCK_BEGIN caselist BLOCK_ENDS .)
    PRIVATE         reduce using rule 22 (switchStatement -> SWITCH lefthandside BLOCK_BEGIN caselist BLOCK_ENDS .)
    LOCAL           reduce using rule 22 (switchStatement -> SWITCH lefthandside BLOCK_BEGIN caselist BLOCK_ENDS .)
    OPEN_PARANTHESIS reduce using rule 22 (switchStatement -> SWITCH lefthandside BLOCK_BEGIN caselist BLOCK_ENDS .)
    ARRAY           reduce using rule 22 (switchStatement -> SWITCH lefthandside BLOCK_BEGIN caselist BLOCK_ENDS .)
    HASH            reduce using rule 22 (switchStatement -> SWITCH lefthandside BLOCK_BEGIN caselist BLOCK_ENDS .)
    VARIABLE        reduce using rule 22 (switchStatement -> SWITCH lefthandside BLOCK_BEGIN caselist BLOCK_ENDS .)
    BLOCK_ENDS      reduce using rule 22 (switchStatement -> SWITCH lefthandside BLOCK_BEGIN caselist BLOCK_ENDS .)
    $end            reduce using rule 22 (switchStatement -> SWITCH lefthandside BLOCK_BEGIN caselist BLOCK_ENDS .)


state 208

    (24) caselist -> ELSE block .

    BLOCK_ENDS      reduce using rule 24 (caselist -> ELSE block .)


state 209

    (39) lefthandside -> PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .

    SEMICOLON       reduce using rule 39 (lefthandside -> PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    ADV_ASSIGNMENT_OP reduce using rule 39 (lefthandside -> PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    ASSIGNMENT_OP   reduce using rule 39 (lefthandside -> PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    BLOCK_BEGIN     reduce using rule 39 (lefthandside -> PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)


state 210

    (47) functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .

    RETURN          reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    IDENTIFIER      reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    WHILE           reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    FOR             reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    PRINT           reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    SUB             reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    LAST            reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    NEXT            reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    IF              reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    USE             reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    SWITCH          reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    PRIVATE         reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    LOCAL           reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    ARRAY           reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    HASH            reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    VARIABLE        reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    $end            reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    BLOCK_ENDS      reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)


state 211

    (48) parameters -> expression COMMA parameters .

    CLOSE_PARANTHESIS reduce using rule 48 (parameters -> expression COMMA parameters .)


state 212

    (85) expression -> expression COMMA expression .
    (48) parameters -> expression . COMMA parameters
    (49) parameters -> expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

  ! reduce/reduce conflict for CLOSE_PARANTHESIS resolved using rule 49 (parameters -> expression .)
    COMMA           reduce using rule 85 (expression -> expression COMMA expression .)
    OR_STR_OP       reduce using rule 85 (expression -> expression COMMA expression .)
    XOR_STR_OP      reduce using rule 85 (expression -> expression COMMA expression .)
    AND_STR_OP      reduce using rule 85 (expression -> expression COMMA expression .)
    NOT_STR_OP      reduce using rule 85 (expression -> expression COMMA expression .)
    ASSOCIATE_OP    reduce using rule 85 (expression -> expression COMMA expression .)
    CLOSE_PARANTHESIS reduce using rule 49 (parameters -> expression .)
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    ADV_ASSIGNMENT_OP shift and go to state 134
    ASSIGNMENT_OP   shift and go to state 120
    RANGE_OP        shift and go to state 111
    OR_OP           shift and go to state 116
    AND_OP          shift and go to state 128
    BIT_OR          shift and go to state 135
    BIT_XOR         shift and go to state 112
    BIT_AND         shift and go to state 123
    EQUALS_OP       shift and go to state 105
    NOT_EQUALS_OP   shift and go to state 107
    COMPARE_OP      shift and go to state 106
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108

  ! INCREMENT_OP    [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! DECREMENT_OP    [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! RANGE_OP        [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! OR_OP           [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! AND_OP          [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! BIT_OR          [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! BIT_XOR         [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! BIT_AND         [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! EQUALS_OP       [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! COMPARE_OP      [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! GREATER_OP      [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! LESS_OP         [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! PLUS_OP         [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! MINUS_OP        [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! CONCATENATE     [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! DIVISION_OP     [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! MODULUS_OP      [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! REP_OP          [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! EXPONENT_OP     [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! CLOSE_PARANTHESIS [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! COMMA           [ shift and go to state 198 ]
  ! OR_STR_OP       [ shift and go to state 127 ]
  ! XOR_STR_OP      [ shift and go to state 122 ]
  ! AND_STR_OP      [ shift and go to state 115 ]
  ! NOT_STR_OP      [ shift and go to state 109 ]
  ! ASSOCIATE_OP    [ shift and go to state 126 ]


state 213

    (52) forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression . SEMICOLON expression CLOSE_PARANTHESIS block
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    SEMICOLON       shift and go to state 217
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    OR_STR_OP       shift and go to state 127
    XOR_STR_OP      shift and go to state 122
    AND_STR_OP      shift and go to state 115
    NOT_STR_OP      shift and go to state 109
    COMMA           shift and go to state 118
    ASSOCIATE_OP    shift and go to state 126
    ADV_ASSIGNMENT_OP shift and go to state 134
    ASSIGNMENT_OP   shift and go to state 120
    RANGE_OP        shift and go to state 111
    OR_OP           shift and go to state 116
    AND_OP          shift and go to state 128
    BIT_OR          shift and go to state 135
    BIT_XOR         shift and go to state 112
    BIT_AND         shift and go to state 123
    EQUALS_OP       shift and go to state 105
    NOT_EQUALS_OP   shift and go to state 107
    COMPARE_OP      shift and go to state 106
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108


state 214

    (41) lefthandside -> LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .

    SEMICOLON       reduce using rule 41 (lefthandside -> LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    ADV_ASSIGNMENT_OP reduce using rule 41 (lefthandside -> LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    ASSIGNMENT_OP   reduce using rule 41 (lefthandside -> LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    BLOCK_BEGIN     reduce using rule 41 (lefthandside -> LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)


state 215

    (26) ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .
    (27) ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block . ELSE block

    RETURN          reduce using rule 26 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    IDENTIFIER      reduce using rule 26 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    WHILE           reduce using rule 26 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    FOR             reduce using rule 26 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    PRINT           reduce using rule 26 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    SUB             reduce using rule 26 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    LAST            reduce using rule 26 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    NEXT            reduce using rule 26 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    IF              reduce using rule 26 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    USE             reduce using rule 26 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    SWITCH          reduce using rule 26 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    PRIVATE         reduce using rule 26 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    LOCAL           reduce using rule 26 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    OPEN_PARANTHESIS reduce using rule 26 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    ARRAY           reduce using rule 26 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    HASH            reduce using rule 26 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    VARIABLE        reduce using rule 26 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    $end            reduce using rule 26 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    BLOCK_ENDS      reduce using rule 26 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    ELSE            shift and go to state 218


state 216

    (23) caselist -> CASE OPEN_PARANTHESIS expression . CLOSE_PARANTHESIS block caselist
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS shift and go to state 219
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    OR_STR_OP       shift and go to state 127
    XOR_STR_OP      shift and go to state 122
    AND_STR_OP      shift and go to state 115
    NOT_STR_OP      shift and go to state 109
    COMMA           shift and go to state 118
    ASSOCIATE_OP    shift and go to state 126
    ADV_ASSIGNMENT_OP shift and go to state 134
    ASSIGNMENT_OP   shift and go to state 120
    RANGE_OP        shift and go to state 111
    OR_OP           shift and go to state 116
    AND_OP          shift and go to state 128
    BIT_OR          shift and go to state 135
    BIT_XOR         shift and go to state 112
    BIT_AND         shift and go to state 123
    EQUALS_OP       shift and go to state 105
    NOT_EQUALS_OP   shift and go to state 107
    COMPARE_OP      shift and go to state 106
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108


state 217

    (52) forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON . expression CLOSE_PARANTHESIS block
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . empty
    (80) expression -> . term
    (81) expression -> . expression OR_STR_OP expression
    (82) expression -> . expression XOR_STR_OP expression
    (83) expression -> . expression AND_STR_OP expression
    (84) expression -> . expression NOT_STR_OP expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression ASSOCIATE_OP expression
    (87) expression -> . expression ADV_ASSIGNMENT_OP expression
    (88) expression -> . expression ASSIGNMENT_OP expression
    (89) expression -> . expression RANGE_OP expression
    (90) expression -> . expression OR_OP expression
    (91) expression -> . expression AND_OP expression
    (92) expression -> . expression BIT_OR expression
    (93) expression -> . expression BIT_XOR expression
    (94) expression -> . expression BIT_AND expression
    (95) expression -> . expression EQUALS_OP expression
    (96) expression -> . expression NOT_EQUALS_OP expression
    (97) expression -> . expression COMPARE_OP expression
    (98) expression -> . expression GREATER_OP expression
    (99) expression -> . expression LESS_OP expression
    (100) expression -> . expression GREATER_EQUAL_OP expression
    (101) expression -> . expression LESS_EQUAL_OP expression
    (102) expression -> . expression BIT_RIGHT_SHIFT expression
    (103) expression -> . expression BIT_LEFT_SHIFT expression
    (104) expression -> . expression PLUS_OP expression
    (105) expression -> . expression MINUS_OP expression
    (106) expression -> . expression CONCATENATE expression
    (107) expression -> . expression MULTIPLICATION_OP expression
    (108) expression -> . expression DIVISION_OP expression
    (109) expression -> . expression MODULUS_OP expression
    (110) expression -> . expression REP_OP expression
    (111) expression -> . expression SEARCH_MODIFY expression
    (112) expression -> . expression SEARCH_MODIFY_NEG expression
    (113) expression -> . expression EXPONENT_OP expression
    (6) empty -> .
    (63) term -> . number
    (64) term -> . type
    (65) term -> . variable
    (66) term -> . string
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    PLUS_OP         shift and go to state 65
    MINUS_OP        shift and go to state 47
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 49
    INCREMENT_OP    shift and go to state 63
    DECREMENT_OP    shift and go to state 56
    CLOSE_PARANTHESIS reduce using rule 6 (empty -> .)
    OR_STR_OP       reduce using rule 6 (empty -> .)
    XOR_STR_OP      reduce using rule 6 (empty -> .)
    AND_STR_OP      reduce using rule 6 (empty -> .)
    NOT_STR_OP      reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)
    ASSOCIATE_OP    reduce using rule 6 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 6 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 6 (empty -> .)
    RANGE_OP        reduce using rule 6 (empty -> .)
    OR_OP           reduce using rule 6 (empty -> .)
    AND_OP          reduce using rule 6 (empty -> .)
    BIT_OR          reduce using rule 6 (empty -> .)
    BIT_XOR         reduce using rule 6 (empty -> .)
    BIT_AND         reduce using rule 6 (empty -> .)
    EQUALS_OP       reduce using rule 6 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 6 (empty -> .)
    COMPARE_OP      reduce using rule 6 (empty -> .)
    GREATER_OP      reduce using rule 6 (empty -> .)
    LESS_OP         reduce using rule 6 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 6 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 6 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 6 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 6 (empty -> .)
    CONCATENATE     reduce using rule 6 (empty -> .)
    MULTIPLICATION_OP reduce using rule 6 (empty -> .)
    DIVISION_OP     reduce using rule 6 (empty -> .)
    MODULUS_OP      reduce using rule 6 (empty -> .)
    REP_OP          reduce using rule 6 (empty -> .)
    SEARCH_MODIFY   reduce using rule 6 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 6 (empty -> .)
    EXPONENT_OP     reduce using rule 6 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 67
    NUMBER          shift and go to state 57
    SCI_NOT         shift and go to state 58
    FLOAT           shift and go to state 64
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 62
    ARRAY           shift and go to state 37
    HASH            shift and go to state 25
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 51
    RES_STRING      shift and go to state 52

  ! INCREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 6 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 6 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 6 (empty -> .) ]

    term                           shift and go to state 61
    string                         shift and go to state 68
    expression                     shift and go to state 220
    number                         shift and go to state 48
    variable                       shift and go to state 59
    type                           shift and go to state 54
    empty                          shift and go to state 55

state 218

    (27) ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE . block
    (3) block -> . BLOCK_BEGIN statements BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 7

    block                          shift and go to state 221

state 219

    (23) caselist -> CASE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS . block caselist
    (3) block -> . BLOCK_BEGIN statements BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 7

    block                          shift and go to state 222

state 220

    (52) forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression . CLOSE_PARANTHESIS block
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (81) expression -> expression . OR_STR_OP expression
    (82) expression -> expression . XOR_STR_OP expression
    (83) expression -> expression . AND_STR_OP expression
    (84) expression -> expression . NOT_STR_OP expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . ASSOCIATE_OP expression
    (87) expression -> expression . ADV_ASSIGNMENT_OP expression
    (88) expression -> expression . ASSIGNMENT_OP expression
    (89) expression -> expression . RANGE_OP expression
    (90) expression -> expression . OR_OP expression
    (91) expression -> expression . AND_OP expression
    (92) expression -> expression . BIT_OR expression
    (93) expression -> expression . BIT_XOR expression
    (94) expression -> expression . BIT_AND expression
    (95) expression -> expression . EQUALS_OP expression
    (96) expression -> expression . NOT_EQUALS_OP expression
    (97) expression -> expression . COMPARE_OP expression
    (98) expression -> expression . GREATER_OP expression
    (99) expression -> expression . LESS_OP expression
    (100) expression -> expression . GREATER_EQUAL_OP expression
    (101) expression -> expression . LESS_EQUAL_OP expression
    (102) expression -> expression . BIT_RIGHT_SHIFT expression
    (103) expression -> expression . BIT_LEFT_SHIFT expression
    (104) expression -> expression . PLUS_OP expression
    (105) expression -> expression . MINUS_OP expression
    (106) expression -> expression . CONCATENATE expression
    (107) expression -> expression . MULTIPLICATION_OP expression
    (108) expression -> expression . DIVISION_OP expression
    (109) expression -> expression . MODULUS_OP expression
    (110) expression -> expression . REP_OP expression
    (111) expression -> expression . SEARCH_MODIFY expression
    (112) expression -> expression . SEARCH_MODIFY_NEG expression
    (113) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS shift and go to state 223
    INCREMENT_OP    shift and go to state 132
    DECREMENT_OP    shift and go to state 125
    OR_STR_OP       shift and go to state 127
    XOR_STR_OP      shift and go to state 122
    AND_STR_OP      shift and go to state 115
    NOT_STR_OP      shift and go to state 109
    COMMA           shift and go to state 118
    ASSOCIATE_OP    shift and go to state 126
    ADV_ASSIGNMENT_OP shift and go to state 134
    ASSIGNMENT_OP   shift and go to state 120
    RANGE_OP        shift and go to state 111
    OR_OP           shift and go to state 116
    AND_OP          shift and go to state 128
    BIT_OR          shift and go to state 135
    BIT_XOR         shift and go to state 112
    BIT_AND         shift and go to state 123
    EQUALS_OP       shift and go to state 105
    NOT_EQUALS_OP   shift and go to state 107
    COMPARE_OP      shift and go to state 106
    GREATER_OP      shift and go to state 138
    LESS_OP         shift and go to state 117
    GREATER_EQUAL_OP shift and go to state 121
    LESS_EQUAL_OP   shift and go to state 104
    BIT_RIGHT_SHIFT shift and go to state 133
    BIT_LEFT_SHIFT  shift and go to state 129
    PLUS_OP         shift and go to state 136
    MINUS_OP        shift and go to state 113
    CONCATENATE     shift and go to state 131
    MULTIPLICATION_OP shift and go to state 124
    DIVISION_OP     shift and go to state 110
    MODULUS_OP      shift and go to state 119
    REP_OP          shift and go to state 130
    SEARCH_MODIFY   shift and go to state 103
    SEARCH_MODIFY_NEG shift and go to state 137
    EXPONENT_OP     shift and go to state 108


state 221

    (27) ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .

    RETURN          reduce using rule 27 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    IDENTIFIER      reduce using rule 27 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    WHILE           reduce using rule 27 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    FOR             reduce using rule 27 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    PRINT           reduce using rule 27 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    SUB             reduce using rule 27 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    LAST            reduce using rule 27 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    NEXT            reduce using rule 27 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    IF              reduce using rule 27 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    USE             reduce using rule 27 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    SWITCH          reduce using rule 27 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    PRIVATE         reduce using rule 27 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    LOCAL           reduce using rule 27 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    OPEN_PARANTHESIS reduce using rule 27 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    ARRAY           reduce using rule 27 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    HASH            reduce using rule 27 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    VARIABLE        reduce using rule 27 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    BLOCK_ENDS      reduce using rule 27 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    $end            reduce using rule 27 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)


state 222

    (23) caselist -> CASE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block . caselist
    (23) caselist -> . CASE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block caselist
    (24) caselist -> . ELSE block
    (25) caselist -> . empty
    (6) empty -> .

    CASE            shift and go to state 192
    ELSE            shift and go to state 194
    BLOCK_ENDS      reduce using rule 6 (empty -> .)

    caselist                       shift and go to state 224
    empty                          shift and go to state 195

state 223

    (52) forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS . block
    (3) block -> . BLOCK_BEGIN statements BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 7

    block                          shift and go to state 225

state 224

    (23) caselist -> CASE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block caselist .

    BLOCK_ENDS      reduce using rule 23 (caselist -> CASE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block caselist .)


state 225

    (52) forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .

    RETURN          reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    IDENTIFIER      reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    WHILE           reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    FOR             reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    PRINT           reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    SUB             reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    LAST            reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    NEXT            reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    IF              reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    USE             reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    SWITCH          reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    PRIVATE         reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    LOCAL           reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    OPEN_PARANTHESIS reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    ARRAY           reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    HASH            reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    VARIABLE        reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    BLOCK_ENDS      reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    $end            reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for BLOCK_BEGIN in state 8 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 60 resolved as shift
WARNING: shift/reduce conflict for CLOSE_PARANTHESIS in state 94 resolved as shift
WARNING: reduce/reduce conflict in state 59 resolved using rule (term -> variable)
WARNING: rejected rule (type -> variable) in state 59
WARNING: reduce/reduce conflict in state 143 resolved using rule (parameters -> empty)
WARNING: rejected rule (expression -> empty) in state 143
WARNING: reduce/reduce conflict in state 212 resolved using rule (parameters -> expression)
WARNING: rejected rule (expression -> expression COMMA expression) in state 212
