Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    FORMAT
    COMMENT
    TRANSLATION
    GOTO
    FOREACH
    ELSIF
    SUBSTITUTE
    SELECT
    FILE_HANDLING_OPTIONS
    COLON
    UNLESS
    UNTIL
    WHITESPACE
    USER_INPUT_OP
    QUESTION_MARK
    REDO
    WRITE
    MATCH
    DO
    SYSTEM_COMMAND
    CONTINUE

Grammar

Rule 0     S' -> start
Rule 1     start -> block
Rule 2     start -> statements
Rule 3     block -> BLOCK_BEGIN statements BLOCK_ENDS
Rule 4     statements -> statement statements
Rule 5     statements -> statement empty
Rule 6     statements -> empty empty
Rule 7     empty -> <empty>
Rule 8     statement -> assignment
Rule 9     statement -> declaration
Rule 10    statement -> returnStatement
Rule 11    statement -> functionCall
Rule 12    statement -> whileStatement
Rule 13    statement -> forStatement
Rule 14    statement -> printStatement
Rule 15    statement -> functionStatement
Rule 16    statement -> lastStatement
Rule 17    statement -> nextStatement
Rule 18    statement -> ifthen
Rule 19    statement -> ifthenelse
Rule 20    statement -> useStatement
Rule 21    statement -> switchStatement
Rule 22    useStatement -> USE IDENTIFIER SEMICOLON
Rule 23    switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS
Rule 24    caselist -> CASE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block caselist
Rule 25    caselist -> ELSE empty empty empty block empty
Rule 26    caselist -> empty empty empty empty empty empty
Rule 27    ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
Rule 28    ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block
Rule 29    lastStatement -> LAST SEMICOLON
Rule 30    nextStatement -> NEXT SEMICOLON
Rule 31    functionStatement -> SUB IDENTIFIER block
Rule 32    printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON
Rule 33    printStatement -> PRINT empty string1 empty SEMICOLON
Rule 34    printStatement -> PRINT empty expression empty SEMICOLON
Rule 35    string1 -> STRING
Rule 36    string1 -> RES_STRING
Rule 37    returnStatement -> RETURN expression SEMICOLON
Rule 38    assignment -> lefthandside assignmenttype expression SEMICOLON
Rule 39    assignmenttype -> ADV_ASSIGNMENT_OP
Rule 40    assignmenttype -> ASSIGNMENT_OP
Rule 41    lefthandside -> PRIVATE empty type decList
Rule 42    lefthandside -> PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
Rule 43    lefthandside -> LOCAL empty type decList
Rule 44    lefthandside -> LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
Rule 45    lefthandside -> OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
Rule 46    lefthandside -> type
Rule 47    declaration -> lefthandside decList empty SEMICOLON
Rule 48    declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON
Rule 49    decList -> COMMA type decList
Rule 50    decList -> empty empty empty
Rule 51    functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON
Rule 52    parameters -> expression COMMA parameters
Rule 53    parameters -> expression empty empty
Rule 54    parameters -> empty empty empty
Rule 55    whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
Rule 56    forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block
Rule 57    string -> STRING
Rule 58    string -> RES_STRING
Rule 59    number -> NUMBER
Rule 60    number -> SCI_NOT
Rule 61    number -> FLOAT
Rule 62    number -> HEXADECIMAL
Rule 63    number -> OCTAL
Rule 64    variable -> VARIABLE empty empty empty
Rule 65    variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
Rule 66    variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS
Rule 67    term -> empty number empty
Rule 68    term -> empty type empty
Rule 69    term -> empty variable empty
Rule 70    term -> empty string empty
Rule 71    term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
Rule 72    type -> ARRAY
Rule 73    type -> HASH
Rule 74    type -> variable
Rule 75    expression -> PLUS_OP expression
Rule 76    expression -> MINUS_OP expression
Rule 77    expression -> BIT_FLIP expression
Rule 78    expression -> NOT_OP expression
Rule 79    expression -> INCREMENT_OP expression
Rule 80    expression -> DECREMENT_OP expression
Rule 81    expression -> expression INCREMENT_OP
Rule 82    expression -> expression DECREMENT_OP
Rule 83    expression -> empty
Rule 84    expression -> term
Rule 85    expression -> expression OR_STR_OP expression
Rule 86    expression -> expression XOR_STR_OP expression
Rule 87    expression -> expression AND_STR_OP expression
Rule 88    expression -> expression NOT_STR_OP expression
Rule 89    expression -> expression COMMA expression
Rule 90    expression -> expression ASSOCIATE_OP expression
Rule 91    expression -> expression ADV_ASSIGNMENT_OP expression
Rule 92    expression -> expression ASSIGNMENT_OP expression
Rule 93    expression -> expression RANGE_OP expression
Rule 94    expression -> expression OR_OP expression
Rule 95    expression -> expression AND_OP expression
Rule 96    expression -> expression BIT_OR expression
Rule 97    expression -> expression BIT_XOR expression
Rule 98    expression -> expression BIT_AND expression
Rule 99    expression -> expression EQUALS_OP expression
Rule 100   expression -> expression NOT_EQUALS_OP expression
Rule 101   expression -> expression COMPARE_OP expression
Rule 102   expression -> expression GREATER_OP expression
Rule 103   expression -> expression LESS_OP expression
Rule 104   expression -> expression GREATER_EQUAL_OP expression
Rule 105   expression -> expression LESS_EQUAL_OP expression
Rule 106   expression -> expression BIT_RIGHT_SHIFT expression
Rule 107   expression -> expression BIT_LEFT_SHIFT expression
Rule 108   expression -> expression PLUS_OP expression
Rule 109   expression -> expression MINUS_OP expression
Rule 110   expression -> expression CONCATENATE expression
Rule 111   expression -> expression MULTIPLICATION_OP expression
Rule 112   expression -> expression DIVISION_OP expression
Rule 113   expression -> expression MODULUS_OP expression
Rule 114   expression -> expression REP_OP expression
Rule 115   expression -> expression SEARCH_MODIFY expression
Rule 116   expression -> expression SEARCH_MODIFY_NEG expression
Rule 117   expression -> expression EXPONENT_OP expression

Terminals, with rules where they appear

ADV_ASSIGNMENT_OP    : 39 91
AND_OP               : 95
AND_STR_OP           : 87
ARRAY                : 72
ASSIGNMENT_OP        : 40 92
ASSOCIATE_OP         : 90
BIT_AND              : 98
BIT_FLIP             : 77
BIT_LEFT_SHIFT       : 107
BIT_OR               : 96
BIT_RIGHT_SHIFT      : 106
BIT_XOR              : 97
BLOCK_BEGIN          : 3 23 66
BLOCK_ENDS           : 3 23 66
CASE                 : 24
CLOSE_BRACKET        : 65
CLOSE_PARANTHESIS    : 24 27 28 32 42 44 45 48 51 55 56 71
COLON                : 
COMMA                : 49 52 89
COMMENT              : 
COMPARE_OP           : 101
CONCATENATE          : 110
CONTINUE             : 
DECREMENT_OP         : 80 82
DIVISION_OP          : 112
DO                   : 
ELSE                 : 25 28
ELSIF                : 
EQUALS_OP            : 99
EXPONENT_OP          : 117
FILE_HANDLING_OPTIONS : 
FLOAT                : 61
FOR                  : 56
FOREACH              : 
FORMAT               : 
GOTO                 : 
GREATER_EQUAL_OP     : 104
GREATER_OP           : 102
HASH                 : 73
HEXADECIMAL          : 62
IDENTIFIER           : 22 31 51
IF                   : 27 28
INCREMENT_OP         : 79 81
LAST                 : 29
LESS_EQUAL_OP        : 105
LESS_OP              : 103
LOCAL                : 43 44
MATCH                : 
MINUS_OP             : 76 109
MODULUS_OP           : 113
MULTIPLICATION_OP    : 111
NEXT                 : 30
NOT_EQUALS_OP        : 100
NOT_OP               : 78
NOT_STR_OP           : 88
NUMBER               : 59 65
OCTAL                : 63
OPEN_BRACKET         : 65
OPEN_PARANTHESIS     : 24 27 28 32 42 44 45 51 55 56 71
OR_OP                : 94
OR_STR_OP            : 85
PLUS_OP              : 75 108
PRINT                : 32 33 34
PRIVATE              : 41 42
QUESTION_MARK        : 
RANGE_OP             : 93
REDO                 : 
REP_OP               : 114
RES_STRING           : 36 58
RETURN               : 37
SCI_NOT              : 60
SEARCH_MODIFY        : 115
SEARCH_MODIFY_NEG    : 116
SELECT               : 
SEMICOLON            : 22 29 30 32 33 34 37 38 47 48 51 56 56
STRING               : 35 57
SUB                  : 31
SUBSTITUTE           : 
SWITCH               : 23
SYSTEM_COMMAND       : 
TRANSLATION          : 
UNLESS               : 
UNTIL                : 
USE                  : 22
USER_INPUT_OP        : 
VARIABLE             : 64 65 66
WHILE                : 55
WHITESPACE           : 
WRITE                : 
XOR_STR_OP           : 86
error                : 

Nonterminals, with rules where they appear

assignment           : 8
assignmenttype       : 38
block                : 1 24 25 27 28 28 31 55 56
caselist             : 23 24
decList              : 41 42 43 44 45 47 48 49
declaration          : 9
empty                : 5 6 6 23 23 25 25 25 25 26 26 26 26 26 26 33 33 34 34 41 43 47 50 50 50 53 53 54 54 54 64 64 64 67 67 68 68 69 69 70 70 83
expression           : 24 27 28 34 37 38 52 53 55 56 56 56 71 75 76 77 78 79 80 81 82 85 85 86 86 87 87 88 88 89 89 90 90 91 91 92 92 93 93 94 94 95 95 96 96 97 97 98 98 99 99 100 100 101 101 102 102 103 103 104 104 105 105 106 106 107 107 108 108 109 109 110 110 111 111 112 112 113 113 114 114 115 115 116 116 117 117
forStatement         : 13
functionCall         : 11
functionStatement    : 15
ifthen               : 18
ifthenelse           : 19
lastStatement        : 16
lefthandside         : 23 38 47 48
nextStatement        : 17
number               : 67
parameters           : 51 52
printStatement       : 14
returnStatement      : 10
start                : 0
statement            : 4 5
statements           : 2 3 4
string               : 66 70
string1              : 32 33
switchStatement      : 21
term                 : 84
type                 : 41 42 43 44 45 46 49 68
useStatement         : 20
variable             : 69 74
whileStatement       : 12

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . block
    (2) start -> . statements
    (3) block -> . BLOCK_BEGIN statements BLOCK_ENDS
    (4) statements -> . statement statements
    (5) statements -> . statement empty
    (6) statements -> . empty empty
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . returnStatement
    (11) statement -> . functionCall
    (12) statement -> . whileStatement
    (13) statement -> . forStatement
    (14) statement -> . printStatement
    (15) statement -> . functionStatement
    (16) statement -> . lastStatement
    (17) statement -> . nextStatement
    (18) statement -> . ifthen
    (19) statement -> . ifthenelse
    (20) statement -> . useStatement
    (21) statement -> . switchStatement
    (7) empty -> .
    (38) assignment -> . lefthandside assignmenttype expression SEMICOLON
    (47) declaration -> . lefthandside decList empty SEMICOLON
    (48) declaration -> . lefthandside decList CLOSE_PARANTHESIS SEMICOLON
    (37) returnStatement -> . RETURN expression SEMICOLON
    (51) functionCall -> . IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON
    (55) whileStatement -> . WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
    (56) forStatement -> . FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block
    (32) printStatement -> . PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON
    (33) printStatement -> . PRINT empty string1 empty SEMICOLON
    (34) printStatement -> . PRINT empty expression empty SEMICOLON
    (31) functionStatement -> . SUB IDENTIFIER block
    (29) lastStatement -> . LAST SEMICOLON
    (30) nextStatement -> . NEXT SEMICOLON
    (27) ifthen -> . IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
    (28) ifthenelse -> . IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block
    (22) useStatement -> . USE IDENTIFIER SEMICOLON
    (23) switchStatement -> . SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS
    (41) lefthandside -> . PRIVATE empty type decList
    (42) lefthandside -> . PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (43) lefthandside -> . LOCAL empty type decList
    (44) lefthandside -> . LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (45) lefthandside -> . OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (46) lefthandside -> . type
    (72) type -> . ARRAY
    (73) type -> . HASH
    (74) type -> . variable
    (64) variable -> . VARIABLE empty empty empty
    (65) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (66) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 7
    $end            reduce using rule 7 (empty -> .)
    RETURN          shift and go to state 11
    IDENTIFIER      shift and go to state 24
    WHILE           shift and go to state 9
    FOR             shift and go to state 29
    PRINT           shift and go to state 10
    SUB             shift and go to state 13
    LAST            shift and go to state 14
    NEXT            shift and go to state 18
    IF              shift and go to state 39
    USE             shift and go to state 2
    SWITCH          shift and go to state 16
    PRIVATE         shift and go to state 17
    LOCAL           shift and go to state 37
    OPEN_PARANTHESIS shift and go to state 4
    ARRAY           shift and go to state 38
    HASH            shift and go to state 27
    VARIABLE        shift and go to state 8

    forStatement                   shift and go to state 1
    statements                     shift and go to state 3
    functionStatement              shift and go to state 5
    switchStatement                shift and go to state 6
    ifthen                         shift and go to state 12
    nextStatement                  shift and go to state 15
    start                          shift and go to state 19
    lastStatement                  shift and go to state 20
    useStatement                   shift and go to state 21
    statement                      shift and go to state 22
    printStatement                 shift and go to state 23
    type                           shift and go to state 25
    empty                          shift and go to state 26
    ifthenelse                     shift and go to state 28
    assignment                     shift and go to state 30
    whileStatement                 shift and go to state 31
    lefthandside                   shift and go to state 32
    functionCall                   shift and go to state 33
    declaration                    shift and go to state 34
    variable                       shift and go to state 35
    returnStatement                shift and go to state 36
    block                          shift and go to state 40

state 1

    (13) statement -> forStatement .

    RETURN          reduce using rule 13 (statement -> forStatement .)
    IDENTIFIER      reduce using rule 13 (statement -> forStatement .)
    WHILE           reduce using rule 13 (statement -> forStatement .)
    FOR             reduce using rule 13 (statement -> forStatement .)
    PRINT           reduce using rule 13 (statement -> forStatement .)
    SUB             reduce using rule 13 (statement -> forStatement .)
    LAST            reduce using rule 13 (statement -> forStatement .)
    NEXT            reduce using rule 13 (statement -> forStatement .)
    IF              reduce using rule 13 (statement -> forStatement .)
    USE             reduce using rule 13 (statement -> forStatement .)
    SWITCH          reduce using rule 13 (statement -> forStatement .)
    PRIVATE         reduce using rule 13 (statement -> forStatement .)
    LOCAL           reduce using rule 13 (statement -> forStatement .)
    OPEN_PARANTHESIS reduce using rule 13 (statement -> forStatement .)
    ARRAY           reduce using rule 13 (statement -> forStatement .)
    HASH            reduce using rule 13 (statement -> forStatement .)
    VARIABLE        reduce using rule 13 (statement -> forStatement .)
    $end            reduce using rule 13 (statement -> forStatement .)
    BLOCK_ENDS      reduce using rule 13 (statement -> forStatement .)


state 2

    (22) useStatement -> USE . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 41


state 3

    (2) start -> statements .

    $end            reduce using rule 2 (start -> statements .)


state 4

    (45) lefthandside -> OPEN_PARANTHESIS . type decList CLOSE_PARANTHESIS
    (72) type -> . ARRAY
    (73) type -> . HASH
    (74) type -> . variable
    (64) variable -> . VARIABLE empty empty empty
    (65) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (66) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    ARRAY           shift and go to state 38
    HASH            shift and go to state 27
    VARIABLE        shift and go to state 8

    variable                       shift and go to state 35
    type                           shift and go to state 42

state 5

    (15) statement -> functionStatement .

    RETURN          reduce using rule 15 (statement -> functionStatement .)
    IDENTIFIER      reduce using rule 15 (statement -> functionStatement .)
    WHILE           reduce using rule 15 (statement -> functionStatement .)
    FOR             reduce using rule 15 (statement -> functionStatement .)
    PRINT           reduce using rule 15 (statement -> functionStatement .)
    SUB             reduce using rule 15 (statement -> functionStatement .)
    LAST            reduce using rule 15 (statement -> functionStatement .)
    NEXT            reduce using rule 15 (statement -> functionStatement .)
    IF              reduce using rule 15 (statement -> functionStatement .)
    USE             reduce using rule 15 (statement -> functionStatement .)
    SWITCH          reduce using rule 15 (statement -> functionStatement .)
    PRIVATE         reduce using rule 15 (statement -> functionStatement .)
    LOCAL           reduce using rule 15 (statement -> functionStatement .)
    OPEN_PARANTHESIS reduce using rule 15 (statement -> functionStatement .)
    ARRAY           reduce using rule 15 (statement -> functionStatement .)
    HASH            reduce using rule 15 (statement -> functionStatement .)
    VARIABLE        reduce using rule 15 (statement -> functionStatement .)
    $end            reduce using rule 15 (statement -> functionStatement .)
    BLOCK_ENDS      reduce using rule 15 (statement -> functionStatement .)


state 6

    (21) statement -> switchStatement .

    RETURN          reduce using rule 21 (statement -> switchStatement .)
    IDENTIFIER      reduce using rule 21 (statement -> switchStatement .)
    WHILE           reduce using rule 21 (statement -> switchStatement .)
    FOR             reduce using rule 21 (statement -> switchStatement .)
    PRINT           reduce using rule 21 (statement -> switchStatement .)
    SUB             reduce using rule 21 (statement -> switchStatement .)
    LAST            reduce using rule 21 (statement -> switchStatement .)
    NEXT            reduce using rule 21 (statement -> switchStatement .)
    IF              reduce using rule 21 (statement -> switchStatement .)
    USE             reduce using rule 21 (statement -> switchStatement .)
    SWITCH          reduce using rule 21 (statement -> switchStatement .)
    PRIVATE         reduce using rule 21 (statement -> switchStatement .)
    LOCAL           reduce using rule 21 (statement -> switchStatement .)
    OPEN_PARANTHESIS reduce using rule 21 (statement -> switchStatement .)
    ARRAY           reduce using rule 21 (statement -> switchStatement .)
    HASH            reduce using rule 21 (statement -> switchStatement .)
    VARIABLE        reduce using rule 21 (statement -> switchStatement .)
    $end            reduce using rule 21 (statement -> switchStatement .)
    BLOCK_ENDS      reduce using rule 21 (statement -> switchStatement .)


state 7

    (3) block -> BLOCK_BEGIN . statements BLOCK_ENDS
    (4) statements -> . statement statements
    (5) statements -> . statement empty
    (6) statements -> . empty empty
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . returnStatement
    (11) statement -> . functionCall
    (12) statement -> . whileStatement
    (13) statement -> . forStatement
    (14) statement -> . printStatement
    (15) statement -> . functionStatement
    (16) statement -> . lastStatement
    (17) statement -> . nextStatement
    (18) statement -> . ifthen
    (19) statement -> . ifthenelse
    (20) statement -> . useStatement
    (21) statement -> . switchStatement
    (7) empty -> .
    (38) assignment -> . lefthandside assignmenttype expression SEMICOLON
    (47) declaration -> . lefthandside decList empty SEMICOLON
    (48) declaration -> . lefthandside decList CLOSE_PARANTHESIS SEMICOLON
    (37) returnStatement -> . RETURN expression SEMICOLON
    (51) functionCall -> . IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON
    (55) whileStatement -> . WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
    (56) forStatement -> . FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block
    (32) printStatement -> . PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON
    (33) printStatement -> . PRINT empty string1 empty SEMICOLON
    (34) printStatement -> . PRINT empty expression empty SEMICOLON
    (31) functionStatement -> . SUB IDENTIFIER block
    (29) lastStatement -> . LAST SEMICOLON
    (30) nextStatement -> . NEXT SEMICOLON
    (27) ifthen -> . IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
    (28) ifthenelse -> . IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block
    (22) useStatement -> . USE IDENTIFIER SEMICOLON
    (23) switchStatement -> . SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS
    (41) lefthandside -> . PRIVATE empty type decList
    (42) lefthandside -> . PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (43) lefthandside -> . LOCAL empty type decList
    (44) lefthandside -> . LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (45) lefthandside -> . OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (46) lefthandside -> . type
    (72) type -> . ARRAY
    (73) type -> . HASH
    (74) type -> . variable
    (64) variable -> . VARIABLE empty empty empty
    (65) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (66) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    BLOCK_ENDS      reduce using rule 7 (empty -> .)
    RETURN          shift and go to state 11
    IDENTIFIER      shift and go to state 24
    WHILE           shift and go to state 9
    FOR             shift and go to state 29
    PRINT           shift and go to state 10
    SUB             shift and go to state 13
    LAST            shift and go to state 14
    NEXT            shift and go to state 18
    IF              shift and go to state 39
    USE             shift and go to state 2
    SWITCH          shift and go to state 16
    PRIVATE         shift and go to state 17
    LOCAL           shift and go to state 37
    OPEN_PARANTHESIS shift and go to state 4
    ARRAY           shift and go to state 38
    HASH            shift and go to state 27
    VARIABLE        shift and go to state 8

    forStatement                   shift and go to state 1
    statements                     shift and go to state 43
    functionStatement              shift and go to state 5
    switchStatement                shift and go to state 6
    ifthen                         shift and go to state 12
    nextStatement                  shift and go to state 15
    lastStatement                  shift and go to state 20
    useStatement                   shift and go to state 21
    statement                      shift and go to state 22
    printStatement                 shift and go to state 23
    type                           shift and go to state 25
    empty                          shift and go to state 26
    ifthenelse                     shift and go to state 28
    assignment                     shift and go to state 30
    whileStatement                 shift and go to state 31
    lefthandside                   shift and go to state 32
    functionCall                   shift and go to state 33
    declaration                    shift and go to state 34
    variable                       shift and go to state 35
    returnStatement                shift and go to state 36

state 8

    (64) variable -> VARIABLE . empty empty empty
    (65) variable -> VARIABLE . OPEN_BRACKET NUMBER CLOSE_BRACKET
    (66) variable -> VARIABLE . BLOCK_BEGIN string BLOCK_ENDS
    (7) empty -> .

  ! shift/reduce conflict for BLOCK_BEGIN resolved as shift
    OPEN_BRACKET    shift and go to state 44
    BLOCK_BEGIN     shift and go to state 45
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    INCREMENT_OP    reduce using rule 7 (empty -> .)
    DECREMENT_OP    reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    PLUS_OP         reduce using rule 7 (empty -> .)
    MINUS_OP        reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)

  ! BLOCK_BEGIN     [ reduce using rule 7 (empty -> .) ]

    empty                          shift and go to state 46

state 9

    (55) whileStatement -> WHILE . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block

    OPEN_PARANTHESIS shift and go to state 47


state 10

    (32) printStatement -> PRINT . OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON
    (33) printStatement -> PRINT . empty string1 empty SEMICOLON
    (34) printStatement -> PRINT . empty expression empty SEMICOLON
    (7) empty -> .

  ! shift/reduce conflict for OPEN_PARANTHESIS resolved as shift
    OPEN_PARANTHESIS shift and go to state 48
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    PLUS_OP         reduce using rule 7 (empty -> .)
    MINUS_OP        reduce using rule 7 (empty -> .)
    BIT_FLIP        reduce using rule 7 (empty -> .)
    NOT_OP          reduce using rule 7 (empty -> .)
    INCREMENT_OP    reduce using rule 7 (empty -> .)
    DECREMENT_OP    reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)

  ! OPEN_PARANTHESIS [ reduce using rule 7 (empty -> .) ]

    empty                          shift and go to state 49

state 11

    (37) returnStatement -> RETURN . expression SEMICOLON
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 59
    empty                          shift and go to state 54

state 12

    (18) statement -> ifthen .

    RETURN          reduce using rule 18 (statement -> ifthen .)
    IDENTIFIER      reduce using rule 18 (statement -> ifthen .)
    WHILE           reduce using rule 18 (statement -> ifthen .)
    FOR             reduce using rule 18 (statement -> ifthen .)
    PRINT           reduce using rule 18 (statement -> ifthen .)
    SUB             reduce using rule 18 (statement -> ifthen .)
    LAST            reduce using rule 18 (statement -> ifthen .)
    NEXT            reduce using rule 18 (statement -> ifthen .)
    IF              reduce using rule 18 (statement -> ifthen .)
    USE             reduce using rule 18 (statement -> ifthen .)
    SWITCH          reduce using rule 18 (statement -> ifthen .)
    PRIVATE         reduce using rule 18 (statement -> ifthen .)
    LOCAL           reduce using rule 18 (statement -> ifthen .)
    OPEN_PARANTHESIS reduce using rule 18 (statement -> ifthen .)
    ARRAY           reduce using rule 18 (statement -> ifthen .)
    HASH            reduce using rule 18 (statement -> ifthen .)
    VARIABLE        reduce using rule 18 (statement -> ifthen .)
    $end            reduce using rule 18 (statement -> ifthen .)
    BLOCK_ENDS      reduce using rule 18 (statement -> ifthen .)


state 13

    (31) functionStatement -> SUB . IDENTIFIER block

    IDENTIFIER      shift and go to state 60


state 14

    (29) lastStatement -> LAST . SEMICOLON

    SEMICOLON       shift and go to state 61


state 15

    (17) statement -> nextStatement .

    RETURN          reduce using rule 17 (statement -> nextStatement .)
    IDENTIFIER      reduce using rule 17 (statement -> nextStatement .)
    WHILE           reduce using rule 17 (statement -> nextStatement .)
    FOR             reduce using rule 17 (statement -> nextStatement .)
    PRINT           reduce using rule 17 (statement -> nextStatement .)
    SUB             reduce using rule 17 (statement -> nextStatement .)
    LAST            reduce using rule 17 (statement -> nextStatement .)
    NEXT            reduce using rule 17 (statement -> nextStatement .)
    IF              reduce using rule 17 (statement -> nextStatement .)
    USE             reduce using rule 17 (statement -> nextStatement .)
    SWITCH          reduce using rule 17 (statement -> nextStatement .)
    PRIVATE         reduce using rule 17 (statement -> nextStatement .)
    LOCAL           reduce using rule 17 (statement -> nextStatement .)
    OPEN_PARANTHESIS reduce using rule 17 (statement -> nextStatement .)
    ARRAY           reduce using rule 17 (statement -> nextStatement .)
    HASH            reduce using rule 17 (statement -> nextStatement .)
    VARIABLE        reduce using rule 17 (statement -> nextStatement .)
    $end            reduce using rule 17 (statement -> nextStatement .)
    BLOCK_ENDS      reduce using rule 17 (statement -> nextStatement .)


state 16

    (23) switchStatement -> SWITCH . empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS
    (7) empty -> .

    PRIVATE         reduce using rule 7 (empty -> .)
    LOCAL           reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)

    empty                          shift and go to state 62

state 17

    (41) lefthandside -> PRIVATE . empty type decList
    (42) lefthandside -> PRIVATE . OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (7) empty -> .

    OPEN_PARANTHESIS shift and go to state 63
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)

    empty                          shift and go to state 64

state 18

    (30) nextStatement -> NEXT . SEMICOLON

    SEMICOLON       shift and go to state 65


state 19

    (0) S' -> start .



state 20

    (16) statement -> lastStatement .

    RETURN          reduce using rule 16 (statement -> lastStatement .)
    IDENTIFIER      reduce using rule 16 (statement -> lastStatement .)
    WHILE           reduce using rule 16 (statement -> lastStatement .)
    FOR             reduce using rule 16 (statement -> lastStatement .)
    PRINT           reduce using rule 16 (statement -> lastStatement .)
    SUB             reduce using rule 16 (statement -> lastStatement .)
    LAST            reduce using rule 16 (statement -> lastStatement .)
    NEXT            reduce using rule 16 (statement -> lastStatement .)
    IF              reduce using rule 16 (statement -> lastStatement .)
    USE             reduce using rule 16 (statement -> lastStatement .)
    SWITCH          reduce using rule 16 (statement -> lastStatement .)
    PRIVATE         reduce using rule 16 (statement -> lastStatement .)
    LOCAL           reduce using rule 16 (statement -> lastStatement .)
    OPEN_PARANTHESIS reduce using rule 16 (statement -> lastStatement .)
    ARRAY           reduce using rule 16 (statement -> lastStatement .)
    HASH            reduce using rule 16 (statement -> lastStatement .)
    VARIABLE        reduce using rule 16 (statement -> lastStatement .)
    $end            reduce using rule 16 (statement -> lastStatement .)
    BLOCK_ENDS      reduce using rule 16 (statement -> lastStatement .)


state 21

    (20) statement -> useStatement .

    RETURN          reduce using rule 20 (statement -> useStatement .)
    IDENTIFIER      reduce using rule 20 (statement -> useStatement .)
    WHILE           reduce using rule 20 (statement -> useStatement .)
    FOR             reduce using rule 20 (statement -> useStatement .)
    PRINT           reduce using rule 20 (statement -> useStatement .)
    SUB             reduce using rule 20 (statement -> useStatement .)
    LAST            reduce using rule 20 (statement -> useStatement .)
    NEXT            reduce using rule 20 (statement -> useStatement .)
    IF              reduce using rule 20 (statement -> useStatement .)
    USE             reduce using rule 20 (statement -> useStatement .)
    SWITCH          reduce using rule 20 (statement -> useStatement .)
    PRIVATE         reduce using rule 20 (statement -> useStatement .)
    LOCAL           reduce using rule 20 (statement -> useStatement .)
    OPEN_PARANTHESIS reduce using rule 20 (statement -> useStatement .)
    ARRAY           reduce using rule 20 (statement -> useStatement .)
    HASH            reduce using rule 20 (statement -> useStatement .)
    VARIABLE        reduce using rule 20 (statement -> useStatement .)
    $end            reduce using rule 20 (statement -> useStatement .)
    BLOCK_ENDS      reduce using rule 20 (statement -> useStatement .)


state 22

    (4) statements -> statement . statements
    (5) statements -> statement . empty
    (4) statements -> . statement statements
    (5) statements -> . statement empty
    (6) statements -> . empty empty
    (7) empty -> .
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . returnStatement
    (11) statement -> . functionCall
    (12) statement -> . whileStatement
    (13) statement -> . forStatement
    (14) statement -> . printStatement
    (15) statement -> . functionStatement
    (16) statement -> . lastStatement
    (17) statement -> . nextStatement
    (18) statement -> . ifthen
    (19) statement -> . ifthenelse
    (20) statement -> . useStatement
    (21) statement -> . switchStatement
    (38) assignment -> . lefthandside assignmenttype expression SEMICOLON
    (47) declaration -> . lefthandside decList empty SEMICOLON
    (48) declaration -> . lefthandside decList CLOSE_PARANTHESIS SEMICOLON
    (37) returnStatement -> . RETURN expression SEMICOLON
    (51) functionCall -> . IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON
    (55) whileStatement -> . WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
    (56) forStatement -> . FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block
    (32) printStatement -> . PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON
    (33) printStatement -> . PRINT empty string1 empty SEMICOLON
    (34) printStatement -> . PRINT empty expression empty SEMICOLON
    (31) functionStatement -> . SUB IDENTIFIER block
    (29) lastStatement -> . LAST SEMICOLON
    (30) nextStatement -> . NEXT SEMICOLON
    (27) ifthen -> . IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
    (28) ifthenelse -> . IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block
    (22) useStatement -> . USE IDENTIFIER SEMICOLON
    (23) switchStatement -> . SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS
    (41) lefthandside -> . PRIVATE empty type decList
    (42) lefthandside -> . PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (43) lefthandside -> . LOCAL empty type decList
    (44) lefthandside -> . LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (45) lefthandside -> . OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (46) lefthandside -> . type
    (72) type -> . ARRAY
    (73) type -> . HASH
    (74) type -> . variable
    (64) variable -> . VARIABLE empty empty empty
    (65) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (66) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    $end            reduce using rule 7 (empty -> .)
    BLOCK_ENDS      reduce using rule 7 (empty -> .)
    RETURN          shift and go to state 11
    IDENTIFIER      shift and go to state 24
    WHILE           shift and go to state 9
    FOR             shift and go to state 29
    PRINT           shift and go to state 10
    SUB             shift and go to state 13
    LAST            shift and go to state 14
    NEXT            shift and go to state 18
    IF              shift and go to state 39
    USE             shift and go to state 2
    SWITCH          shift and go to state 16
    PRIVATE         shift and go to state 17
    LOCAL           shift and go to state 37
    OPEN_PARANTHESIS shift and go to state 4
    ARRAY           shift and go to state 38
    HASH            shift and go to state 27
    VARIABLE        shift and go to state 8

    forStatement                   shift and go to state 1
    statements                     shift and go to state 66
    functionStatement              shift and go to state 5
    switchStatement                shift and go to state 6
    ifthen                         shift and go to state 12
    nextStatement                  shift and go to state 15
    lastStatement                  shift and go to state 20
    useStatement                   shift and go to state 21
    statement                      shift and go to state 22
    printStatement                 shift and go to state 23
    type                           shift and go to state 25
    empty                          shift and go to state 67
    ifthenelse                     shift and go to state 28
    assignment                     shift and go to state 30
    whileStatement                 shift and go to state 31
    lefthandside                   shift and go to state 32
    functionCall                   shift and go to state 33
    declaration                    shift and go to state 34
    variable                       shift and go to state 35
    returnStatement                shift and go to state 36

state 23

    (14) statement -> printStatement .

    RETURN          reduce using rule 14 (statement -> printStatement .)
    IDENTIFIER      reduce using rule 14 (statement -> printStatement .)
    WHILE           reduce using rule 14 (statement -> printStatement .)
    FOR             reduce using rule 14 (statement -> printStatement .)
    PRINT           reduce using rule 14 (statement -> printStatement .)
    SUB             reduce using rule 14 (statement -> printStatement .)
    LAST            reduce using rule 14 (statement -> printStatement .)
    NEXT            reduce using rule 14 (statement -> printStatement .)
    IF              reduce using rule 14 (statement -> printStatement .)
    USE             reduce using rule 14 (statement -> printStatement .)
    SWITCH          reduce using rule 14 (statement -> printStatement .)
    PRIVATE         reduce using rule 14 (statement -> printStatement .)
    LOCAL           reduce using rule 14 (statement -> printStatement .)
    OPEN_PARANTHESIS reduce using rule 14 (statement -> printStatement .)
    ARRAY           reduce using rule 14 (statement -> printStatement .)
    HASH            reduce using rule 14 (statement -> printStatement .)
    VARIABLE        reduce using rule 14 (statement -> printStatement .)
    $end            reduce using rule 14 (statement -> printStatement .)
    BLOCK_ENDS      reduce using rule 14 (statement -> printStatement .)


state 24

    (51) functionCall -> IDENTIFIER . OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON

    OPEN_PARANTHESIS shift and go to state 68


state 25

    (46) lefthandside -> type .

    ADV_ASSIGNMENT_OP reduce using rule 46 (lefthandside -> type .)
    ASSIGNMENT_OP   reduce using rule 46 (lefthandside -> type .)
    COMMA           reduce using rule 46 (lefthandside -> type .)
    CLOSE_PARANTHESIS reduce using rule 46 (lefthandside -> type .)
    SEMICOLON       reduce using rule 46 (lefthandside -> type .)
    BLOCK_BEGIN     reduce using rule 46 (lefthandside -> type .)


state 26

    (6) statements -> empty . empty
    (7) empty -> .

    $end            reduce using rule 7 (empty -> .)
    BLOCK_ENDS      reduce using rule 7 (empty -> .)

    empty                          shift and go to state 69

state 27

    (73) type -> HASH .

    COMMA           reduce using rule 73 (type -> HASH .)
    CLOSE_PARANTHESIS reduce using rule 73 (type -> HASH .)
    INCREMENT_OP    reduce using rule 73 (type -> HASH .)
    DECREMENT_OP    reduce using rule 73 (type -> HASH .)
    OR_STR_OP       reduce using rule 73 (type -> HASH .)
    XOR_STR_OP      reduce using rule 73 (type -> HASH .)
    AND_STR_OP      reduce using rule 73 (type -> HASH .)
    NOT_STR_OP      reduce using rule 73 (type -> HASH .)
    ASSOCIATE_OP    reduce using rule 73 (type -> HASH .)
    ADV_ASSIGNMENT_OP reduce using rule 73 (type -> HASH .)
    ASSIGNMENT_OP   reduce using rule 73 (type -> HASH .)
    RANGE_OP        reduce using rule 73 (type -> HASH .)
    OR_OP           reduce using rule 73 (type -> HASH .)
    AND_OP          reduce using rule 73 (type -> HASH .)
    BIT_OR          reduce using rule 73 (type -> HASH .)
    BIT_XOR         reduce using rule 73 (type -> HASH .)
    BIT_AND         reduce using rule 73 (type -> HASH .)
    EQUALS_OP       reduce using rule 73 (type -> HASH .)
    NOT_EQUALS_OP   reduce using rule 73 (type -> HASH .)
    COMPARE_OP      reduce using rule 73 (type -> HASH .)
    GREATER_OP      reduce using rule 73 (type -> HASH .)
    LESS_OP         reduce using rule 73 (type -> HASH .)
    GREATER_EQUAL_OP reduce using rule 73 (type -> HASH .)
    LESS_EQUAL_OP   reduce using rule 73 (type -> HASH .)
    BIT_RIGHT_SHIFT reduce using rule 73 (type -> HASH .)
    BIT_LEFT_SHIFT  reduce using rule 73 (type -> HASH .)
    PLUS_OP         reduce using rule 73 (type -> HASH .)
    MINUS_OP        reduce using rule 73 (type -> HASH .)
    CONCATENATE     reduce using rule 73 (type -> HASH .)
    MULTIPLICATION_OP reduce using rule 73 (type -> HASH .)
    DIVISION_OP     reduce using rule 73 (type -> HASH .)
    MODULUS_OP      reduce using rule 73 (type -> HASH .)
    REP_OP          reduce using rule 73 (type -> HASH .)
    SEARCH_MODIFY   reduce using rule 73 (type -> HASH .)
    SEARCH_MODIFY_NEG reduce using rule 73 (type -> HASH .)
    EXPONENT_OP     reduce using rule 73 (type -> HASH .)
    SEMICOLON       reduce using rule 73 (type -> HASH .)
    BLOCK_BEGIN     reduce using rule 73 (type -> HASH .)


state 28

    (19) statement -> ifthenelse .

    RETURN          reduce using rule 19 (statement -> ifthenelse .)
    IDENTIFIER      reduce using rule 19 (statement -> ifthenelse .)
    WHILE           reduce using rule 19 (statement -> ifthenelse .)
    FOR             reduce using rule 19 (statement -> ifthenelse .)
    PRINT           reduce using rule 19 (statement -> ifthenelse .)
    SUB             reduce using rule 19 (statement -> ifthenelse .)
    LAST            reduce using rule 19 (statement -> ifthenelse .)
    NEXT            reduce using rule 19 (statement -> ifthenelse .)
    IF              reduce using rule 19 (statement -> ifthenelse .)
    USE             reduce using rule 19 (statement -> ifthenelse .)
    SWITCH          reduce using rule 19 (statement -> ifthenelse .)
    PRIVATE         reduce using rule 19 (statement -> ifthenelse .)
    LOCAL           reduce using rule 19 (statement -> ifthenelse .)
    OPEN_PARANTHESIS reduce using rule 19 (statement -> ifthenelse .)
    ARRAY           reduce using rule 19 (statement -> ifthenelse .)
    HASH            reduce using rule 19 (statement -> ifthenelse .)
    VARIABLE        reduce using rule 19 (statement -> ifthenelse .)
    $end            reduce using rule 19 (statement -> ifthenelse .)
    BLOCK_ENDS      reduce using rule 19 (statement -> ifthenelse .)


state 29

    (56) forStatement -> FOR . OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block

    OPEN_PARANTHESIS shift and go to state 70


state 30

    (8) statement -> assignment .

    RETURN          reduce using rule 8 (statement -> assignment .)
    IDENTIFIER      reduce using rule 8 (statement -> assignment .)
    WHILE           reduce using rule 8 (statement -> assignment .)
    FOR             reduce using rule 8 (statement -> assignment .)
    PRINT           reduce using rule 8 (statement -> assignment .)
    SUB             reduce using rule 8 (statement -> assignment .)
    LAST            reduce using rule 8 (statement -> assignment .)
    NEXT            reduce using rule 8 (statement -> assignment .)
    IF              reduce using rule 8 (statement -> assignment .)
    USE             reduce using rule 8 (statement -> assignment .)
    SWITCH          reduce using rule 8 (statement -> assignment .)
    PRIVATE         reduce using rule 8 (statement -> assignment .)
    LOCAL           reduce using rule 8 (statement -> assignment .)
    OPEN_PARANTHESIS reduce using rule 8 (statement -> assignment .)
    ARRAY           reduce using rule 8 (statement -> assignment .)
    HASH            reduce using rule 8 (statement -> assignment .)
    VARIABLE        reduce using rule 8 (statement -> assignment .)
    $end            reduce using rule 8 (statement -> assignment .)
    BLOCK_ENDS      reduce using rule 8 (statement -> assignment .)


state 31

    (12) statement -> whileStatement .

    RETURN          reduce using rule 12 (statement -> whileStatement .)
    IDENTIFIER      reduce using rule 12 (statement -> whileStatement .)
    WHILE           reduce using rule 12 (statement -> whileStatement .)
    FOR             reduce using rule 12 (statement -> whileStatement .)
    PRINT           reduce using rule 12 (statement -> whileStatement .)
    SUB             reduce using rule 12 (statement -> whileStatement .)
    LAST            reduce using rule 12 (statement -> whileStatement .)
    NEXT            reduce using rule 12 (statement -> whileStatement .)
    IF              reduce using rule 12 (statement -> whileStatement .)
    USE             reduce using rule 12 (statement -> whileStatement .)
    SWITCH          reduce using rule 12 (statement -> whileStatement .)
    PRIVATE         reduce using rule 12 (statement -> whileStatement .)
    LOCAL           reduce using rule 12 (statement -> whileStatement .)
    OPEN_PARANTHESIS reduce using rule 12 (statement -> whileStatement .)
    ARRAY           reduce using rule 12 (statement -> whileStatement .)
    HASH            reduce using rule 12 (statement -> whileStatement .)
    VARIABLE        reduce using rule 12 (statement -> whileStatement .)
    $end            reduce using rule 12 (statement -> whileStatement .)
    BLOCK_ENDS      reduce using rule 12 (statement -> whileStatement .)


state 32

    (38) assignment -> lefthandside . assignmenttype expression SEMICOLON
    (47) declaration -> lefthandside . decList empty SEMICOLON
    (48) declaration -> lefthandside . decList CLOSE_PARANTHESIS SEMICOLON
    (39) assignmenttype -> . ADV_ASSIGNMENT_OP
    (40) assignmenttype -> . ASSIGNMENT_OP
    (49) decList -> . COMMA type decList
    (50) decList -> . empty empty empty
    (7) empty -> .

    ADV_ASSIGNMENT_OP shift and go to state 73
    ASSIGNMENT_OP   shift and go to state 75
    COMMA           shift and go to state 74
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)

    assignmenttype                 shift and go to state 71
    decList                        shift and go to state 72
    empty                          shift and go to state 76

state 33

    (11) statement -> functionCall .

    RETURN          reduce using rule 11 (statement -> functionCall .)
    IDENTIFIER      reduce using rule 11 (statement -> functionCall .)
    WHILE           reduce using rule 11 (statement -> functionCall .)
    FOR             reduce using rule 11 (statement -> functionCall .)
    PRINT           reduce using rule 11 (statement -> functionCall .)
    SUB             reduce using rule 11 (statement -> functionCall .)
    LAST            reduce using rule 11 (statement -> functionCall .)
    NEXT            reduce using rule 11 (statement -> functionCall .)
    IF              reduce using rule 11 (statement -> functionCall .)
    USE             reduce using rule 11 (statement -> functionCall .)
    SWITCH          reduce using rule 11 (statement -> functionCall .)
    PRIVATE         reduce using rule 11 (statement -> functionCall .)
    LOCAL           reduce using rule 11 (statement -> functionCall .)
    OPEN_PARANTHESIS reduce using rule 11 (statement -> functionCall .)
    ARRAY           reduce using rule 11 (statement -> functionCall .)
    HASH            reduce using rule 11 (statement -> functionCall .)
    VARIABLE        reduce using rule 11 (statement -> functionCall .)
    $end            reduce using rule 11 (statement -> functionCall .)
    BLOCK_ENDS      reduce using rule 11 (statement -> functionCall .)


state 34

    (9) statement -> declaration .

    RETURN          reduce using rule 9 (statement -> declaration .)
    IDENTIFIER      reduce using rule 9 (statement -> declaration .)
    WHILE           reduce using rule 9 (statement -> declaration .)
    FOR             reduce using rule 9 (statement -> declaration .)
    PRINT           reduce using rule 9 (statement -> declaration .)
    SUB             reduce using rule 9 (statement -> declaration .)
    LAST            reduce using rule 9 (statement -> declaration .)
    NEXT            reduce using rule 9 (statement -> declaration .)
    IF              reduce using rule 9 (statement -> declaration .)
    USE             reduce using rule 9 (statement -> declaration .)
    SWITCH          reduce using rule 9 (statement -> declaration .)
    PRIVATE         reduce using rule 9 (statement -> declaration .)
    LOCAL           reduce using rule 9 (statement -> declaration .)
    OPEN_PARANTHESIS reduce using rule 9 (statement -> declaration .)
    ARRAY           reduce using rule 9 (statement -> declaration .)
    HASH            reduce using rule 9 (statement -> declaration .)
    VARIABLE        reduce using rule 9 (statement -> declaration .)
    $end            reduce using rule 9 (statement -> declaration .)
    BLOCK_ENDS      reduce using rule 9 (statement -> declaration .)


state 35

    (74) type -> variable .

    COMMA           reduce using rule 74 (type -> variable .)
    CLOSE_PARANTHESIS reduce using rule 74 (type -> variable .)
    ADV_ASSIGNMENT_OP reduce using rule 74 (type -> variable .)
    ASSIGNMENT_OP   reduce using rule 74 (type -> variable .)
    SEMICOLON       reduce using rule 74 (type -> variable .)
    BLOCK_BEGIN     reduce using rule 74 (type -> variable .)


state 36

    (10) statement -> returnStatement .

    RETURN          reduce using rule 10 (statement -> returnStatement .)
    IDENTIFIER      reduce using rule 10 (statement -> returnStatement .)
    WHILE           reduce using rule 10 (statement -> returnStatement .)
    FOR             reduce using rule 10 (statement -> returnStatement .)
    PRINT           reduce using rule 10 (statement -> returnStatement .)
    SUB             reduce using rule 10 (statement -> returnStatement .)
    LAST            reduce using rule 10 (statement -> returnStatement .)
    NEXT            reduce using rule 10 (statement -> returnStatement .)
    IF              reduce using rule 10 (statement -> returnStatement .)
    USE             reduce using rule 10 (statement -> returnStatement .)
    SWITCH          reduce using rule 10 (statement -> returnStatement .)
    PRIVATE         reduce using rule 10 (statement -> returnStatement .)
    LOCAL           reduce using rule 10 (statement -> returnStatement .)
    OPEN_PARANTHESIS reduce using rule 10 (statement -> returnStatement .)
    ARRAY           reduce using rule 10 (statement -> returnStatement .)
    HASH            reduce using rule 10 (statement -> returnStatement .)
    VARIABLE        reduce using rule 10 (statement -> returnStatement .)
    $end            reduce using rule 10 (statement -> returnStatement .)
    BLOCK_ENDS      reduce using rule 10 (statement -> returnStatement .)


state 37

    (43) lefthandside -> LOCAL . empty type decList
    (44) lefthandside -> LOCAL . OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (7) empty -> .

    OPEN_PARANTHESIS shift and go to state 77
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)

    empty                          shift and go to state 78

state 38

    (72) type -> ARRAY .

    COMMA           reduce using rule 72 (type -> ARRAY .)
    CLOSE_PARANTHESIS reduce using rule 72 (type -> ARRAY .)
    INCREMENT_OP    reduce using rule 72 (type -> ARRAY .)
    DECREMENT_OP    reduce using rule 72 (type -> ARRAY .)
    OR_STR_OP       reduce using rule 72 (type -> ARRAY .)
    XOR_STR_OP      reduce using rule 72 (type -> ARRAY .)
    AND_STR_OP      reduce using rule 72 (type -> ARRAY .)
    NOT_STR_OP      reduce using rule 72 (type -> ARRAY .)
    ASSOCIATE_OP    reduce using rule 72 (type -> ARRAY .)
    ADV_ASSIGNMENT_OP reduce using rule 72 (type -> ARRAY .)
    ASSIGNMENT_OP   reduce using rule 72 (type -> ARRAY .)
    RANGE_OP        reduce using rule 72 (type -> ARRAY .)
    OR_OP           reduce using rule 72 (type -> ARRAY .)
    AND_OP          reduce using rule 72 (type -> ARRAY .)
    BIT_OR          reduce using rule 72 (type -> ARRAY .)
    BIT_XOR         reduce using rule 72 (type -> ARRAY .)
    BIT_AND         reduce using rule 72 (type -> ARRAY .)
    EQUALS_OP       reduce using rule 72 (type -> ARRAY .)
    NOT_EQUALS_OP   reduce using rule 72 (type -> ARRAY .)
    COMPARE_OP      reduce using rule 72 (type -> ARRAY .)
    GREATER_OP      reduce using rule 72 (type -> ARRAY .)
    LESS_OP         reduce using rule 72 (type -> ARRAY .)
    GREATER_EQUAL_OP reduce using rule 72 (type -> ARRAY .)
    LESS_EQUAL_OP   reduce using rule 72 (type -> ARRAY .)
    BIT_RIGHT_SHIFT reduce using rule 72 (type -> ARRAY .)
    BIT_LEFT_SHIFT  reduce using rule 72 (type -> ARRAY .)
    PLUS_OP         reduce using rule 72 (type -> ARRAY .)
    MINUS_OP        reduce using rule 72 (type -> ARRAY .)
    CONCATENATE     reduce using rule 72 (type -> ARRAY .)
    MULTIPLICATION_OP reduce using rule 72 (type -> ARRAY .)
    DIVISION_OP     reduce using rule 72 (type -> ARRAY .)
    MODULUS_OP      reduce using rule 72 (type -> ARRAY .)
    REP_OP          reduce using rule 72 (type -> ARRAY .)
    SEARCH_MODIFY   reduce using rule 72 (type -> ARRAY .)
    SEARCH_MODIFY_NEG reduce using rule 72 (type -> ARRAY .)
    EXPONENT_OP     reduce using rule 72 (type -> ARRAY .)
    SEMICOLON       reduce using rule 72 (type -> ARRAY .)
    BLOCK_BEGIN     reduce using rule 72 (type -> ARRAY .)


state 39

    (27) ifthen -> IF . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
    (28) ifthenelse -> IF . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block

    OPEN_PARANTHESIS shift and go to state 79


state 40

    (1) start -> block .

    $end            reduce using rule 1 (start -> block .)


state 41

    (22) useStatement -> USE IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 80


state 42

    (45) lefthandside -> OPEN_PARANTHESIS type . decList CLOSE_PARANTHESIS
    (49) decList -> . COMMA type decList
    (50) decList -> . empty empty empty
    (7) empty -> .

    COMMA           shift and go to state 74
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)

    empty                          shift and go to state 76
    decList                        shift and go to state 81

state 43

    (3) block -> BLOCK_BEGIN statements . BLOCK_ENDS

    BLOCK_ENDS      shift and go to state 82


state 44

    (65) variable -> VARIABLE OPEN_BRACKET . NUMBER CLOSE_BRACKET

    NUMBER          shift and go to state 83


state 45

    (66) variable -> VARIABLE BLOCK_BEGIN . string BLOCK_ENDS
    (57) string -> . STRING
    (58) string -> . RES_STRING

    STRING          shift and go to state 86
    RES_STRING      shift and go to state 85

    string                         shift and go to state 84

state 46

    (64) variable -> VARIABLE empty . empty empty
    (7) empty -> .

    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    INCREMENT_OP    reduce using rule 7 (empty -> .)
    DECREMENT_OP    reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    PLUS_OP         reduce using rule 7 (empty -> .)
    MINUS_OP        reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    BLOCK_BEGIN     reduce using rule 7 (empty -> .)

    empty                          shift and go to state 87

state 47

    (55) whileStatement -> WHILE OPEN_PARANTHESIS . expression CLOSE_PARANTHESIS block
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 88
    empty                          shift and go to state 54

state 48

    (32) printStatement -> PRINT OPEN_PARANTHESIS . string1 CLOSE_PARANTHESIS SEMICOLON
    (35) string1 -> . STRING
    (36) string1 -> . RES_STRING

    STRING          shift and go to state 89
    RES_STRING      shift and go to state 90

    string1                        shift and go to state 91

state 49

    (33) printStatement -> PRINT empty . string1 empty SEMICOLON
    (34) printStatement -> PRINT empty . expression empty SEMICOLON
    (35) string1 -> . STRING
    (36) string1 -> . RES_STRING
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for RES_STRING resolved as shift
    STRING          shift and go to state 89
    RES_STRING      shift and go to state 90
    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! STRING          [ reduce using rule 7 (empty -> .) ]
  ! RES_STRING      [ reduce using rule 7 (empty -> .) ]
  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 93
    empty                          shift and go to state 54
    string1                        shift and go to state 92

state 50

    (71) term -> OPEN_PARANTHESIS . expression CLOSE_PARANTHESIS
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 94
    empty                          shift and go to state 54

state 51

    (76) expression -> MINUS_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 95
    empty                          shift and go to state 54

state 52

    (78) expression -> NOT_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 96
    empty                          shift and go to state 54

state 53

    (77) expression -> BIT_FLIP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 97
    empty                          shift and go to state 54

state 54

    (83) expression -> empty .
    (67) term -> empty . number empty
    (68) term -> empty . type empty
    (69) term -> empty . variable empty
    (70) term -> empty . string empty
    (59) number -> . NUMBER
    (60) number -> . SCI_NOT
    (61) number -> . FLOAT
    (62) number -> . HEXADECIMAL
    (63) number -> . OCTAL
    (72) type -> . ARRAY
    (73) type -> . HASH
    (74) type -> . variable
    (64) variable -> . VARIABLE empty empty empty
    (65) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (66) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (57) string -> . STRING
    (58) string -> . RES_STRING

    INCREMENT_OP    reduce using rule 83 (expression -> empty .)
    DECREMENT_OP    reduce using rule 83 (expression -> empty .)
    OR_STR_OP       reduce using rule 83 (expression -> empty .)
    XOR_STR_OP      reduce using rule 83 (expression -> empty .)
    AND_STR_OP      reduce using rule 83 (expression -> empty .)
    NOT_STR_OP      reduce using rule 83 (expression -> empty .)
    COMMA           reduce using rule 83 (expression -> empty .)
    ASSOCIATE_OP    reduce using rule 83 (expression -> empty .)
    ADV_ASSIGNMENT_OP reduce using rule 83 (expression -> empty .)
    ASSIGNMENT_OP   reduce using rule 83 (expression -> empty .)
    RANGE_OP        reduce using rule 83 (expression -> empty .)
    OR_OP           reduce using rule 83 (expression -> empty .)
    AND_OP          reduce using rule 83 (expression -> empty .)
    BIT_OR          reduce using rule 83 (expression -> empty .)
    BIT_XOR         reduce using rule 83 (expression -> empty .)
    BIT_AND         reduce using rule 83 (expression -> empty .)
    EQUALS_OP       reduce using rule 83 (expression -> empty .)
    NOT_EQUALS_OP   reduce using rule 83 (expression -> empty .)
    COMPARE_OP      reduce using rule 83 (expression -> empty .)
    GREATER_OP      reduce using rule 83 (expression -> empty .)
    LESS_OP         reduce using rule 83 (expression -> empty .)
    GREATER_EQUAL_OP reduce using rule 83 (expression -> empty .)
    LESS_EQUAL_OP   reduce using rule 83 (expression -> empty .)
    BIT_RIGHT_SHIFT reduce using rule 83 (expression -> empty .)
    BIT_LEFT_SHIFT  reduce using rule 83 (expression -> empty .)
    PLUS_OP         reduce using rule 83 (expression -> empty .)
    MINUS_OP        reduce using rule 83 (expression -> empty .)
    CONCATENATE     reduce using rule 83 (expression -> empty .)
    MULTIPLICATION_OP reduce using rule 83 (expression -> empty .)
    DIVISION_OP     reduce using rule 83 (expression -> empty .)
    MODULUS_OP      reduce using rule 83 (expression -> empty .)
    REP_OP          reduce using rule 83 (expression -> empty .)
    SEARCH_MODIFY   reduce using rule 83 (expression -> empty .)
    SEARCH_MODIFY_NEG reduce using rule 83 (expression -> empty .)
    EXPONENT_OP     reduce using rule 83 (expression -> empty .)
    SEMICOLON       reduce using rule 83 (expression -> empty .)
    CLOSE_PARANTHESIS reduce using rule 83 (expression -> empty .)
    NUMBER          shift and go to state 100
    SCI_NOT         shift and go to state 101
    FLOAT           shift and go to state 99
    HEXADECIMAL     shift and go to state 105
    OCTAL           shift and go to state 103
    ARRAY           shift and go to state 38
    HASH            shift and go to state 27
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 86
    RES_STRING      shift and go to state 85

    variable                       shift and go to state 104
    type                           shift and go to state 106
    number                         shift and go to state 102
    string                         shift and go to state 98

state 55

    (80) expression -> DECREMENT_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 107
    empty                          shift and go to state 54

state 56

    (84) expression -> term .

    INCREMENT_OP    reduce using rule 84 (expression -> term .)
    DECREMENT_OP    reduce using rule 84 (expression -> term .)
    OR_STR_OP       reduce using rule 84 (expression -> term .)
    XOR_STR_OP      reduce using rule 84 (expression -> term .)
    AND_STR_OP      reduce using rule 84 (expression -> term .)
    NOT_STR_OP      reduce using rule 84 (expression -> term .)
    COMMA           reduce using rule 84 (expression -> term .)
    ASSOCIATE_OP    reduce using rule 84 (expression -> term .)
    ADV_ASSIGNMENT_OP reduce using rule 84 (expression -> term .)
    ASSIGNMENT_OP   reduce using rule 84 (expression -> term .)
    RANGE_OP        reduce using rule 84 (expression -> term .)
    OR_OP           reduce using rule 84 (expression -> term .)
    AND_OP          reduce using rule 84 (expression -> term .)
    BIT_OR          reduce using rule 84 (expression -> term .)
    BIT_XOR         reduce using rule 84 (expression -> term .)
    BIT_AND         reduce using rule 84 (expression -> term .)
    EQUALS_OP       reduce using rule 84 (expression -> term .)
    NOT_EQUALS_OP   reduce using rule 84 (expression -> term .)
    COMPARE_OP      reduce using rule 84 (expression -> term .)
    GREATER_OP      reduce using rule 84 (expression -> term .)
    LESS_OP         reduce using rule 84 (expression -> term .)
    GREATER_EQUAL_OP reduce using rule 84 (expression -> term .)
    LESS_EQUAL_OP   reduce using rule 84 (expression -> term .)
    BIT_RIGHT_SHIFT reduce using rule 84 (expression -> term .)
    BIT_LEFT_SHIFT  reduce using rule 84 (expression -> term .)
    PLUS_OP         reduce using rule 84 (expression -> term .)
    MINUS_OP        reduce using rule 84 (expression -> term .)
    CONCATENATE     reduce using rule 84 (expression -> term .)
    MULTIPLICATION_OP reduce using rule 84 (expression -> term .)
    DIVISION_OP     reduce using rule 84 (expression -> term .)
    MODULUS_OP      reduce using rule 84 (expression -> term .)
    REP_OP          reduce using rule 84 (expression -> term .)
    SEARCH_MODIFY   reduce using rule 84 (expression -> term .)
    SEARCH_MODIFY_NEG reduce using rule 84 (expression -> term .)
    EXPONENT_OP     reduce using rule 84 (expression -> term .)
    SEMICOLON       reduce using rule 84 (expression -> term .)
    CLOSE_PARANTHESIS reduce using rule 84 (expression -> term .)


state 57

    (79) expression -> INCREMENT_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 108
    empty                          shift and go to state 54

state 58

    (75) expression -> PLUS_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 109
    empty                          shift and go to state 54

state 59

    (37) returnStatement -> RETURN expression . SEMICOLON
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    SEMICOLON       shift and go to state 121
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    OR_STR_OP       shift and go to state 134
    XOR_STR_OP      shift and go to state 129
    AND_STR_OP      shift and go to state 122
    NOT_STR_OP      shift and go to state 116
    COMMA           shift and go to state 125
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115


state 60

    (31) functionStatement -> SUB IDENTIFIER . block
    (3) block -> . BLOCK_BEGIN statements BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 7

    block                          shift and go to state 146

state 61

    (29) lastStatement -> LAST SEMICOLON .

    RETURN          reduce using rule 29 (lastStatement -> LAST SEMICOLON .)
    IDENTIFIER      reduce using rule 29 (lastStatement -> LAST SEMICOLON .)
    WHILE           reduce using rule 29 (lastStatement -> LAST SEMICOLON .)
    FOR             reduce using rule 29 (lastStatement -> LAST SEMICOLON .)
    PRINT           reduce using rule 29 (lastStatement -> LAST SEMICOLON .)
    SUB             reduce using rule 29 (lastStatement -> LAST SEMICOLON .)
    LAST            reduce using rule 29 (lastStatement -> LAST SEMICOLON .)
    NEXT            reduce using rule 29 (lastStatement -> LAST SEMICOLON .)
    IF              reduce using rule 29 (lastStatement -> LAST SEMICOLON .)
    USE             reduce using rule 29 (lastStatement -> LAST SEMICOLON .)
    SWITCH          reduce using rule 29 (lastStatement -> LAST SEMICOLON .)
    PRIVATE         reduce using rule 29 (lastStatement -> LAST SEMICOLON .)
    LOCAL           reduce using rule 29 (lastStatement -> LAST SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 29 (lastStatement -> LAST SEMICOLON .)
    ARRAY           reduce using rule 29 (lastStatement -> LAST SEMICOLON .)
    HASH            reduce using rule 29 (lastStatement -> LAST SEMICOLON .)
    VARIABLE        reduce using rule 29 (lastStatement -> LAST SEMICOLON .)
    $end            reduce using rule 29 (lastStatement -> LAST SEMICOLON .)
    BLOCK_ENDS      reduce using rule 29 (lastStatement -> LAST SEMICOLON .)


state 62

    (23) switchStatement -> SWITCH empty . lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS
    (41) lefthandside -> . PRIVATE empty type decList
    (42) lefthandside -> . PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (43) lefthandside -> . LOCAL empty type decList
    (44) lefthandside -> . LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (45) lefthandside -> . OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (46) lefthandside -> . type
    (72) type -> . ARRAY
    (73) type -> . HASH
    (74) type -> . variable
    (64) variable -> . VARIABLE empty empty empty
    (65) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (66) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    PRIVATE         shift and go to state 17
    LOCAL           shift and go to state 37
    OPEN_PARANTHESIS shift and go to state 4
    ARRAY           shift and go to state 38
    HASH            shift and go to state 27
    VARIABLE        shift and go to state 8

    lefthandside                   shift and go to state 147
    variable                       shift and go to state 35
    type                           shift and go to state 25

state 63

    (42) lefthandside -> PRIVATE OPEN_PARANTHESIS . type decList CLOSE_PARANTHESIS
    (72) type -> . ARRAY
    (73) type -> . HASH
    (74) type -> . variable
    (64) variable -> . VARIABLE empty empty empty
    (65) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (66) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    ARRAY           shift and go to state 38
    HASH            shift and go to state 27
    VARIABLE        shift and go to state 8

    variable                       shift and go to state 35
    type                           shift and go to state 148

state 64

    (41) lefthandside -> PRIVATE empty . type decList
    (72) type -> . ARRAY
    (73) type -> . HASH
    (74) type -> . variable
    (64) variable -> . VARIABLE empty empty empty
    (65) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (66) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    ARRAY           shift and go to state 38
    HASH            shift and go to state 27
    VARIABLE        shift and go to state 8

    variable                       shift and go to state 35
    type                           shift and go to state 149

state 65

    (30) nextStatement -> NEXT SEMICOLON .

    RETURN          reduce using rule 30 (nextStatement -> NEXT SEMICOLON .)
    IDENTIFIER      reduce using rule 30 (nextStatement -> NEXT SEMICOLON .)
    WHILE           reduce using rule 30 (nextStatement -> NEXT SEMICOLON .)
    FOR             reduce using rule 30 (nextStatement -> NEXT SEMICOLON .)
    PRINT           reduce using rule 30 (nextStatement -> NEXT SEMICOLON .)
    SUB             reduce using rule 30 (nextStatement -> NEXT SEMICOLON .)
    LAST            reduce using rule 30 (nextStatement -> NEXT SEMICOLON .)
    NEXT            reduce using rule 30 (nextStatement -> NEXT SEMICOLON .)
    IF              reduce using rule 30 (nextStatement -> NEXT SEMICOLON .)
    USE             reduce using rule 30 (nextStatement -> NEXT SEMICOLON .)
    SWITCH          reduce using rule 30 (nextStatement -> NEXT SEMICOLON .)
    PRIVATE         reduce using rule 30 (nextStatement -> NEXT SEMICOLON .)
    LOCAL           reduce using rule 30 (nextStatement -> NEXT SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 30 (nextStatement -> NEXT SEMICOLON .)
    ARRAY           reduce using rule 30 (nextStatement -> NEXT SEMICOLON .)
    HASH            reduce using rule 30 (nextStatement -> NEXT SEMICOLON .)
    VARIABLE        reduce using rule 30 (nextStatement -> NEXT SEMICOLON .)
    $end            reduce using rule 30 (nextStatement -> NEXT SEMICOLON .)
    BLOCK_ENDS      reduce using rule 30 (nextStatement -> NEXT SEMICOLON .)


state 66

    (4) statements -> statement statements .

    $end            reduce using rule 4 (statements -> statement statements .)
    BLOCK_ENDS      reduce using rule 4 (statements -> statement statements .)


state 67

    (5) statements -> statement empty .
    (6) statements -> empty . empty
    (7) empty -> .

  ! reduce/reduce conflict for $end resolved using rule 5 (statements -> statement empty .)
  ! reduce/reduce conflict for BLOCK_ENDS resolved using rule 5 (statements -> statement empty .)
    $end            reduce using rule 5 (statements -> statement empty .)
    BLOCK_ENDS      reduce using rule 5 (statements -> statement empty .)

  ! $end            [ reduce using rule 7 (empty -> .) ]
  ! BLOCK_ENDS      [ reduce using rule 7 (empty -> .) ]

    empty                          shift and go to state 69

state 68

    (51) functionCall -> IDENTIFIER OPEN_PARANTHESIS . parameters CLOSE_PARANTHESIS SEMICOLON
    (52) parameters -> . expression COMMA parameters
    (53) parameters -> . expression empty empty
    (54) parameters -> . empty empty empty
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    parameters                     shift and go to state 151
    expression                     shift and go to state 152
    empty                          shift and go to state 150

state 69

    (6) statements -> empty empty .

    $end            reduce using rule 6 (statements -> empty empty .)
    BLOCK_ENDS      reduce using rule 6 (statements -> empty empty .)


state 70

    (56) forStatement -> FOR OPEN_PARANTHESIS . expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 153
    empty                          shift and go to state 54

state 71

    (38) assignment -> lefthandside assignmenttype . expression SEMICOLON
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 154
    empty                          shift and go to state 54

state 72

    (47) declaration -> lefthandside decList . empty SEMICOLON
    (48) declaration -> lefthandside decList . CLOSE_PARANTHESIS SEMICOLON
    (7) empty -> .

    CLOSE_PARANTHESIS shift and go to state 155
    SEMICOLON       reduce using rule 7 (empty -> .)

    empty                          shift and go to state 156

state 73

    (39) assignmenttype -> ADV_ASSIGNMENT_OP .

    PLUS_OP         reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    MINUS_OP        reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    BIT_FLIP        reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    NOT_OP          reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    INCREMENT_OP    reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    DECREMENT_OP    reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    OPEN_PARANTHESIS reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    SEMICOLON       reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    OR_STR_OP       reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    XOR_STR_OP      reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    AND_STR_OP      reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    NOT_STR_OP      reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    COMMA           reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    ASSOCIATE_OP    reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    ADV_ASSIGNMENT_OP reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    ASSIGNMENT_OP   reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    RANGE_OP        reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    OR_OP           reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    AND_OP          reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    BIT_OR          reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    BIT_XOR         reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    BIT_AND         reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    EQUALS_OP       reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    NOT_EQUALS_OP   reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    COMPARE_OP      reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    GREATER_OP      reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    LESS_OP         reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    GREATER_EQUAL_OP reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    LESS_EQUAL_OP   reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    BIT_RIGHT_SHIFT reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    BIT_LEFT_SHIFT  reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    CONCATENATE     reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    MULTIPLICATION_OP reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    DIVISION_OP     reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    MODULUS_OP      reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    REP_OP          reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    SEARCH_MODIFY   reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    SEARCH_MODIFY_NEG reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    EXPONENT_OP     reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    NUMBER          reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    SCI_NOT         reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    FLOAT           reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    HEXADECIMAL     reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    OCTAL           reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    ARRAY           reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    HASH            reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    VARIABLE        reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    STRING          reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    RES_STRING      reduce using rule 39 (assignmenttype -> ADV_ASSIGNMENT_OP .)


state 74

    (49) decList -> COMMA . type decList
    (72) type -> . ARRAY
    (73) type -> . HASH
    (74) type -> . variable
    (64) variable -> . VARIABLE empty empty empty
    (65) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (66) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    ARRAY           shift and go to state 38
    HASH            shift and go to state 27
    VARIABLE        shift and go to state 8

    variable                       shift and go to state 35
    type                           shift and go to state 157

state 75

    (40) assignmenttype -> ASSIGNMENT_OP .

    PLUS_OP         reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    MINUS_OP        reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    BIT_FLIP        reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    NOT_OP          reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    INCREMENT_OP    reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    DECREMENT_OP    reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    OPEN_PARANTHESIS reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    SEMICOLON       reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    OR_STR_OP       reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    XOR_STR_OP      reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    AND_STR_OP      reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    NOT_STR_OP      reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    COMMA           reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    ASSOCIATE_OP    reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    ADV_ASSIGNMENT_OP reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    ASSIGNMENT_OP   reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    RANGE_OP        reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    OR_OP           reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    AND_OP          reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    BIT_OR          reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    BIT_XOR         reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    BIT_AND         reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    EQUALS_OP       reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    NOT_EQUALS_OP   reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    COMPARE_OP      reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    GREATER_OP      reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    LESS_OP         reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    GREATER_EQUAL_OP reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    LESS_EQUAL_OP   reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    BIT_RIGHT_SHIFT reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    BIT_LEFT_SHIFT  reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    CONCATENATE     reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    MULTIPLICATION_OP reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    DIVISION_OP     reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    MODULUS_OP      reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    REP_OP          reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    SEARCH_MODIFY   reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    SEARCH_MODIFY_NEG reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    EXPONENT_OP     reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    NUMBER          reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    SCI_NOT         reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    FLOAT           reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    HEXADECIMAL     reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    OCTAL           reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    ARRAY           reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    HASH            reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    VARIABLE        reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    STRING          reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)
    RES_STRING      reduce using rule 40 (assignmenttype -> ASSIGNMENT_OP .)


state 76

    (50) decList -> empty . empty empty
    (7) empty -> .

    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    BLOCK_BEGIN     reduce using rule 7 (empty -> .)

    empty                          shift and go to state 158

state 77

    (44) lefthandside -> LOCAL OPEN_PARANTHESIS . type decList CLOSE_PARANTHESIS
    (72) type -> . ARRAY
    (73) type -> . HASH
    (74) type -> . variable
    (64) variable -> . VARIABLE empty empty empty
    (65) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (66) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    ARRAY           shift and go to state 38
    HASH            shift and go to state 27
    VARIABLE        shift and go to state 8

    variable                       shift and go to state 35
    type                           shift and go to state 159

state 78

    (43) lefthandside -> LOCAL empty . type decList
    (72) type -> . ARRAY
    (73) type -> . HASH
    (74) type -> . variable
    (64) variable -> . VARIABLE empty empty empty
    (65) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (66) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    ARRAY           shift and go to state 38
    HASH            shift and go to state 27
    VARIABLE        shift and go to state 8

    variable                       shift and go to state 35
    type                           shift and go to state 160

state 79

    (27) ifthen -> IF OPEN_PARANTHESIS . expression CLOSE_PARANTHESIS block
    (28) ifthenelse -> IF OPEN_PARANTHESIS . expression CLOSE_PARANTHESIS block ELSE block
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 161
    empty                          shift and go to state 54

state 80

    (22) useStatement -> USE IDENTIFIER SEMICOLON .

    RETURN          reduce using rule 22 (useStatement -> USE IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 22 (useStatement -> USE IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 22 (useStatement -> USE IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 22 (useStatement -> USE IDENTIFIER SEMICOLON .)
    PRINT           reduce using rule 22 (useStatement -> USE IDENTIFIER SEMICOLON .)
    SUB             reduce using rule 22 (useStatement -> USE IDENTIFIER SEMICOLON .)
    LAST            reduce using rule 22 (useStatement -> USE IDENTIFIER SEMICOLON .)
    NEXT            reduce using rule 22 (useStatement -> USE IDENTIFIER SEMICOLON .)
    IF              reduce using rule 22 (useStatement -> USE IDENTIFIER SEMICOLON .)
    USE             reduce using rule 22 (useStatement -> USE IDENTIFIER SEMICOLON .)
    SWITCH          reduce using rule 22 (useStatement -> USE IDENTIFIER SEMICOLON .)
    PRIVATE         reduce using rule 22 (useStatement -> USE IDENTIFIER SEMICOLON .)
    LOCAL           reduce using rule 22 (useStatement -> USE IDENTIFIER SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 22 (useStatement -> USE IDENTIFIER SEMICOLON .)
    ARRAY           reduce using rule 22 (useStatement -> USE IDENTIFIER SEMICOLON .)
    HASH            reduce using rule 22 (useStatement -> USE IDENTIFIER SEMICOLON .)
    VARIABLE        reduce using rule 22 (useStatement -> USE IDENTIFIER SEMICOLON .)
    BLOCK_ENDS      reduce using rule 22 (useStatement -> USE IDENTIFIER SEMICOLON .)
    $end            reduce using rule 22 (useStatement -> USE IDENTIFIER SEMICOLON .)


state 81

    (45) lefthandside -> OPEN_PARANTHESIS type decList . CLOSE_PARANTHESIS

    CLOSE_PARANTHESIS shift and go to state 162


state 82

    (3) block -> BLOCK_BEGIN statements BLOCK_ENDS .

    CASE            reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    ELSE            reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    BLOCK_ENDS      reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    RETURN          reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    IDENTIFIER      reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    WHILE           reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    FOR             reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    PRINT           reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    SUB             reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    LAST            reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    NEXT            reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    IF              reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    USE             reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    SWITCH          reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    PRIVATE         reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    LOCAL           reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    OPEN_PARANTHESIS reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    ARRAY           reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    HASH            reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    VARIABLE        reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    $end            reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)


state 83

    (65) variable -> VARIABLE OPEN_BRACKET NUMBER . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 163


state 84

    (66) variable -> VARIABLE BLOCK_BEGIN string . BLOCK_ENDS

    BLOCK_ENDS      shift and go to state 164


state 85

    (58) string -> RES_STRING .

    COMMA           reduce using rule 58 (string -> RES_STRING .)
    INCREMENT_OP    reduce using rule 58 (string -> RES_STRING .)
    DECREMENT_OP    reduce using rule 58 (string -> RES_STRING .)
    OR_STR_OP       reduce using rule 58 (string -> RES_STRING .)
    XOR_STR_OP      reduce using rule 58 (string -> RES_STRING .)
    AND_STR_OP      reduce using rule 58 (string -> RES_STRING .)
    NOT_STR_OP      reduce using rule 58 (string -> RES_STRING .)
    ASSOCIATE_OP    reduce using rule 58 (string -> RES_STRING .)
    ADV_ASSIGNMENT_OP reduce using rule 58 (string -> RES_STRING .)
    ASSIGNMENT_OP   reduce using rule 58 (string -> RES_STRING .)
    RANGE_OP        reduce using rule 58 (string -> RES_STRING .)
    OR_OP           reduce using rule 58 (string -> RES_STRING .)
    AND_OP          reduce using rule 58 (string -> RES_STRING .)
    BIT_OR          reduce using rule 58 (string -> RES_STRING .)
    BIT_XOR         reduce using rule 58 (string -> RES_STRING .)
    BIT_AND         reduce using rule 58 (string -> RES_STRING .)
    EQUALS_OP       reduce using rule 58 (string -> RES_STRING .)
    NOT_EQUALS_OP   reduce using rule 58 (string -> RES_STRING .)
    COMPARE_OP      reduce using rule 58 (string -> RES_STRING .)
    GREATER_OP      reduce using rule 58 (string -> RES_STRING .)
    LESS_OP         reduce using rule 58 (string -> RES_STRING .)
    GREATER_EQUAL_OP reduce using rule 58 (string -> RES_STRING .)
    LESS_EQUAL_OP   reduce using rule 58 (string -> RES_STRING .)
    BIT_RIGHT_SHIFT reduce using rule 58 (string -> RES_STRING .)
    BIT_LEFT_SHIFT  reduce using rule 58 (string -> RES_STRING .)
    PLUS_OP         reduce using rule 58 (string -> RES_STRING .)
    MINUS_OP        reduce using rule 58 (string -> RES_STRING .)
    CONCATENATE     reduce using rule 58 (string -> RES_STRING .)
    MULTIPLICATION_OP reduce using rule 58 (string -> RES_STRING .)
    DIVISION_OP     reduce using rule 58 (string -> RES_STRING .)
    MODULUS_OP      reduce using rule 58 (string -> RES_STRING .)
    REP_OP          reduce using rule 58 (string -> RES_STRING .)
    SEARCH_MODIFY   reduce using rule 58 (string -> RES_STRING .)
    SEARCH_MODIFY_NEG reduce using rule 58 (string -> RES_STRING .)
    EXPONENT_OP     reduce using rule 58 (string -> RES_STRING .)
    CLOSE_PARANTHESIS reduce using rule 58 (string -> RES_STRING .)
    BLOCK_ENDS      reduce using rule 58 (string -> RES_STRING .)
    SEMICOLON       reduce using rule 58 (string -> RES_STRING .)


state 86

    (57) string -> STRING .

    COMMA           reduce using rule 57 (string -> STRING .)
    INCREMENT_OP    reduce using rule 57 (string -> STRING .)
    DECREMENT_OP    reduce using rule 57 (string -> STRING .)
    OR_STR_OP       reduce using rule 57 (string -> STRING .)
    XOR_STR_OP      reduce using rule 57 (string -> STRING .)
    AND_STR_OP      reduce using rule 57 (string -> STRING .)
    NOT_STR_OP      reduce using rule 57 (string -> STRING .)
    ASSOCIATE_OP    reduce using rule 57 (string -> STRING .)
    ADV_ASSIGNMENT_OP reduce using rule 57 (string -> STRING .)
    ASSIGNMENT_OP   reduce using rule 57 (string -> STRING .)
    RANGE_OP        reduce using rule 57 (string -> STRING .)
    OR_OP           reduce using rule 57 (string -> STRING .)
    AND_OP          reduce using rule 57 (string -> STRING .)
    BIT_OR          reduce using rule 57 (string -> STRING .)
    BIT_XOR         reduce using rule 57 (string -> STRING .)
    BIT_AND         reduce using rule 57 (string -> STRING .)
    EQUALS_OP       reduce using rule 57 (string -> STRING .)
    NOT_EQUALS_OP   reduce using rule 57 (string -> STRING .)
    COMPARE_OP      reduce using rule 57 (string -> STRING .)
    GREATER_OP      reduce using rule 57 (string -> STRING .)
    LESS_OP         reduce using rule 57 (string -> STRING .)
    GREATER_EQUAL_OP reduce using rule 57 (string -> STRING .)
    LESS_EQUAL_OP   reduce using rule 57 (string -> STRING .)
    BIT_RIGHT_SHIFT reduce using rule 57 (string -> STRING .)
    BIT_LEFT_SHIFT  reduce using rule 57 (string -> STRING .)
    PLUS_OP         reduce using rule 57 (string -> STRING .)
    MINUS_OP        reduce using rule 57 (string -> STRING .)
    CONCATENATE     reduce using rule 57 (string -> STRING .)
    MULTIPLICATION_OP reduce using rule 57 (string -> STRING .)
    DIVISION_OP     reduce using rule 57 (string -> STRING .)
    MODULUS_OP      reduce using rule 57 (string -> STRING .)
    REP_OP          reduce using rule 57 (string -> STRING .)
    SEARCH_MODIFY   reduce using rule 57 (string -> STRING .)
    SEARCH_MODIFY_NEG reduce using rule 57 (string -> STRING .)
    EXPONENT_OP     reduce using rule 57 (string -> STRING .)
    CLOSE_PARANTHESIS reduce using rule 57 (string -> STRING .)
    BLOCK_ENDS      reduce using rule 57 (string -> STRING .)
    SEMICOLON       reduce using rule 57 (string -> STRING .)


state 87

    (64) variable -> VARIABLE empty empty . empty
    (7) empty -> .

    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    INCREMENT_OP    reduce using rule 7 (empty -> .)
    DECREMENT_OP    reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    PLUS_OP         reduce using rule 7 (empty -> .)
    MINUS_OP        reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    BLOCK_BEGIN     reduce using rule 7 (empty -> .)

    empty                          shift and go to state 165

state 88

    (55) whileStatement -> WHILE OPEN_PARANTHESIS expression . CLOSE_PARANTHESIS block
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS shift and go to state 166
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    OR_STR_OP       shift and go to state 134
    XOR_STR_OP      shift and go to state 129
    AND_STR_OP      shift and go to state 122
    NOT_STR_OP      shift and go to state 116
    COMMA           shift and go to state 125
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115


state 89

    (35) string1 -> STRING .

    CLOSE_PARANTHESIS reduce using rule 35 (string1 -> STRING .)
    SEMICOLON       reduce using rule 35 (string1 -> STRING .)


state 90

    (36) string1 -> RES_STRING .

    CLOSE_PARANTHESIS reduce using rule 36 (string1 -> RES_STRING .)
    SEMICOLON       reduce using rule 36 (string1 -> RES_STRING .)


state 91

    (32) printStatement -> PRINT OPEN_PARANTHESIS string1 . CLOSE_PARANTHESIS SEMICOLON

    CLOSE_PARANTHESIS shift and go to state 167


state 92

    (33) printStatement -> PRINT empty string1 . empty SEMICOLON
    (7) empty -> .

    SEMICOLON       reduce using rule 7 (empty -> .)

    empty                          shift and go to state 168

state 93

    (34) printStatement -> PRINT empty expression . empty SEMICOLON
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression
    (7) empty -> .

    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    OR_STR_OP       shift and go to state 134
    XOR_STR_OP      shift and go to state 129
    AND_STR_OP      shift and go to state 122
    NOT_STR_OP      shift and go to state 116
    COMMA           shift and go to state 125
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115
    SEMICOLON       reduce using rule 7 (empty -> .)

    empty                          shift and go to state 169

state 94

    (71) term -> OPEN_PARANTHESIS expression . CLOSE_PARANTHESIS
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS shift and go to state 170
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    OR_STR_OP       shift and go to state 134
    XOR_STR_OP      shift and go to state 129
    AND_STR_OP      shift and go to state 122
    NOT_STR_OP      shift and go to state 116
    COMMA           shift and go to state 125
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115


state 95

    (76) expression -> MINUS_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 76 (expression -> MINUS_OP expression .)
    XOR_STR_OP      reduce using rule 76 (expression -> MINUS_OP expression .)
    AND_STR_OP      reduce using rule 76 (expression -> MINUS_OP expression .)
    NOT_STR_OP      reduce using rule 76 (expression -> MINUS_OP expression .)
    COMMA           reduce using rule 76 (expression -> MINUS_OP expression .)
    ASSOCIATE_OP    reduce using rule 76 (expression -> MINUS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 76 (expression -> MINUS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 76 (expression -> MINUS_OP expression .)
    RANGE_OP        reduce using rule 76 (expression -> MINUS_OP expression .)
    OR_OP           reduce using rule 76 (expression -> MINUS_OP expression .)
    AND_OP          reduce using rule 76 (expression -> MINUS_OP expression .)
    BIT_OR          reduce using rule 76 (expression -> MINUS_OP expression .)
    BIT_XOR         reduce using rule 76 (expression -> MINUS_OP expression .)
    BIT_AND         reduce using rule 76 (expression -> MINUS_OP expression .)
    EQUALS_OP       reduce using rule 76 (expression -> MINUS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 76 (expression -> MINUS_OP expression .)
    COMPARE_OP      reduce using rule 76 (expression -> MINUS_OP expression .)
    GREATER_OP      reduce using rule 76 (expression -> MINUS_OP expression .)
    LESS_OP         reduce using rule 76 (expression -> MINUS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 76 (expression -> MINUS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 76 (expression -> MINUS_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 76 (expression -> MINUS_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 76 (expression -> MINUS_OP expression .)
    PLUS_OP         reduce using rule 76 (expression -> MINUS_OP expression .)
    MINUS_OP        reduce using rule 76 (expression -> MINUS_OP expression .)
    CONCATENATE     reduce using rule 76 (expression -> MINUS_OP expression .)
    MULTIPLICATION_OP reduce using rule 76 (expression -> MINUS_OP expression .)
    DIVISION_OP     reduce using rule 76 (expression -> MINUS_OP expression .)
    MODULUS_OP      reduce using rule 76 (expression -> MINUS_OP expression .)
    REP_OP          reduce using rule 76 (expression -> MINUS_OP expression .)
    SEARCH_MODIFY   reduce using rule 76 (expression -> MINUS_OP expression .)
    SEARCH_MODIFY_NEG reduce using rule 76 (expression -> MINUS_OP expression .)
    SEMICOLON       reduce using rule 76 (expression -> MINUS_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 76 (expression -> MINUS_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 76 (expression -> MINUS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 76 (expression -> MINUS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 76 (expression -> MINUS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]
  ! MULTIPLICATION_OP [ shift and go to state 131 ]
  ! DIVISION_OP     [ shift and go to state 117 ]
  ! MODULUS_OP      [ shift and go to state 126 ]
  ! REP_OP          [ shift and go to state 137 ]
  ! SEARCH_MODIFY   [ shift and go to state 110 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 144 ]


state 96

    (78) expression -> NOT_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 78 (expression -> NOT_OP expression .)
    XOR_STR_OP      reduce using rule 78 (expression -> NOT_OP expression .)
    AND_STR_OP      reduce using rule 78 (expression -> NOT_OP expression .)
    NOT_STR_OP      reduce using rule 78 (expression -> NOT_OP expression .)
    COMMA           reduce using rule 78 (expression -> NOT_OP expression .)
    ASSOCIATE_OP    reduce using rule 78 (expression -> NOT_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 78 (expression -> NOT_OP expression .)
    ASSIGNMENT_OP   reduce using rule 78 (expression -> NOT_OP expression .)
    RANGE_OP        reduce using rule 78 (expression -> NOT_OP expression .)
    OR_OP           reduce using rule 78 (expression -> NOT_OP expression .)
    AND_OP          reduce using rule 78 (expression -> NOT_OP expression .)
    BIT_OR          reduce using rule 78 (expression -> NOT_OP expression .)
    BIT_XOR         reduce using rule 78 (expression -> NOT_OP expression .)
    BIT_AND         reduce using rule 78 (expression -> NOT_OP expression .)
    EQUALS_OP       reduce using rule 78 (expression -> NOT_OP expression .)
    NOT_EQUALS_OP   reduce using rule 78 (expression -> NOT_OP expression .)
    COMPARE_OP      reduce using rule 78 (expression -> NOT_OP expression .)
    GREATER_OP      reduce using rule 78 (expression -> NOT_OP expression .)
    LESS_OP         reduce using rule 78 (expression -> NOT_OP expression .)
    GREATER_EQUAL_OP reduce using rule 78 (expression -> NOT_OP expression .)
    LESS_EQUAL_OP   reduce using rule 78 (expression -> NOT_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 78 (expression -> NOT_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 78 (expression -> NOT_OP expression .)
    PLUS_OP         reduce using rule 78 (expression -> NOT_OP expression .)
    MINUS_OP        reduce using rule 78 (expression -> NOT_OP expression .)
    CONCATENATE     reduce using rule 78 (expression -> NOT_OP expression .)
    MULTIPLICATION_OP reduce using rule 78 (expression -> NOT_OP expression .)
    DIVISION_OP     reduce using rule 78 (expression -> NOT_OP expression .)
    MODULUS_OP      reduce using rule 78 (expression -> NOT_OP expression .)
    REP_OP          reduce using rule 78 (expression -> NOT_OP expression .)
    SEARCH_MODIFY   reduce using rule 78 (expression -> NOT_OP expression .)
    SEARCH_MODIFY_NEG reduce using rule 78 (expression -> NOT_OP expression .)
    SEMICOLON       reduce using rule 78 (expression -> NOT_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 78 (expression -> NOT_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 78 (expression -> NOT_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 78 (expression -> NOT_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 78 (expression -> NOT_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]
  ! MULTIPLICATION_OP [ shift and go to state 131 ]
  ! DIVISION_OP     [ shift and go to state 117 ]
  ! MODULUS_OP      [ shift and go to state 126 ]
  ! REP_OP          [ shift and go to state 137 ]
  ! SEARCH_MODIFY   [ shift and go to state 110 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 144 ]


state 97

    (77) expression -> BIT_FLIP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 77 (expression -> BIT_FLIP expression .)
    XOR_STR_OP      reduce using rule 77 (expression -> BIT_FLIP expression .)
    AND_STR_OP      reduce using rule 77 (expression -> BIT_FLIP expression .)
    NOT_STR_OP      reduce using rule 77 (expression -> BIT_FLIP expression .)
    COMMA           reduce using rule 77 (expression -> BIT_FLIP expression .)
    ASSOCIATE_OP    reduce using rule 77 (expression -> BIT_FLIP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 77 (expression -> BIT_FLIP expression .)
    ASSIGNMENT_OP   reduce using rule 77 (expression -> BIT_FLIP expression .)
    RANGE_OP        reduce using rule 77 (expression -> BIT_FLIP expression .)
    OR_OP           reduce using rule 77 (expression -> BIT_FLIP expression .)
    AND_OP          reduce using rule 77 (expression -> BIT_FLIP expression .)
    BIT_OR          reduce using rule 77 (expression -> BIT_FLIP expression .)
    BIT_XOR         reduce using rule 77 (expression -> BIT_FLIP expression .)
    BIT_AND         reduce using rule 77 (expression -> BIT_FLIP expression .)
    EQUALS_OP       reduce using rule 77 (expression -> BIT_FLIP expression .)
    NOT_EQUALS_OP   reduce using rule 77 (expression -> BIT_FLIP expression .)
    COMPARE_OP      reduce using rule 77 (expression -> BIT_FLIP expression .)
    GREATER_OP      reduce using rule 77 (expression -> BIT_FLIP expression .)
    LESS_OP         reduce using rule 77 (expression -> BIT_FLIP expression .)
    GREATER_EQUAL_OP reduce using rule 77 (expression -> BIT_FLIP expression .)
    LESS_EQUAL_OP   reduce using rule 77 (expression -> BIT_FLIP expression .)
    BIT_RIGHT_SHIFT reduce using rule 77 (expression -> BIT_FLIP expression .)
    BIT_LEFT_SHIFT  reduce using rule 77 (expression -> BIT_FLIP expression .)
    PLUS_OP         reduce using rule 77 (expression -> BIT_FLIP expression .)
    MINUS_OP        reduce using rule 77 (expression -> BIT_FLIP expression .)
    CONCATENATE     reduce using rule 77 (expression -> BIT_FLIP expression .)
    MULTIPLICATION_OP reduce using rule 77 (expression -> BIT_FLIP expression .)
    DIVISION_OP     reduce using rule 77 (expression -> BIT_FLIP expression .)
    MODULUS_OP      reduce using rule 77 (expression -> BIT_FLIP expression .)
    REP_OP          reduce using rule 77 (expression -> BIT_FLIP expression .)
    SEARCH_MODIFY   reduce using rule 77 (expression -> BIT_FLIP expression .)
    SEARCH_MODIFY_NEG reduce using rule 77 (expression -> BIT_FLIP expression .)
    SEMICOLON       reduce using rule 77 (expression -> BIT_FLIP expression .)
    CLOSE_PARANTHESIS reduce using rule 77 (expression -> BIT_FLIP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 77 (expression -> BIT_FLIP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 77 (expression -> BIT_FLIP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 77 (expression -> BIT_FLIP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]
  ! MULTIPLICATION_OP [ shift and go to state 131 ]
  ! DIVISION_OP     [ shift and go to state 117 ]
  ! MODULUS_OP      [ shift and go to state 126 ]
  ! REP_OP          [ shift and go to state 137 ]
  ! SEARCH_MODIFY   [ shift and go to state 110 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 144 ]


state 98

    (70) term -> empty string . empty
    (7) empty -> .

    SEMICOLON       reduce using rule 7 (empty -> .)
    INCREMENT_OP    reduce using rule 7 (empty -> .)
    DECREMENT_OP    reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    PLUS_OP         reduce using rule 7 (empty -> .)
    MINUS_OP        reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)

    empty                          shift and go to state 171

state 99

    (61) number -> FLOAT .

    SEMICOLON       reduce using rule 61 (number -> FLOAT .)
    INCREMENT_OP    reduce using rule 61 (number -> FLOAT .)
    DECREMENT_OP    reduce using rule 61 (number -> FLOAT .)
    OR_STR_OP       reduce using rule 61 (number -> FLOAT .)
    XOR_STR_OP      reduce using rule 61 (number -> FLOAT .)
    AND_STR_OP      reduce using rule 61 (number -> FLOAT .)
    NOT_STR_OP      reduce using rule 61 (number -> FLOAT .)
    COMMA           reduce using rule 61 (number -> FLOAT .)
    ASSOCIATE_OP    reduce using rule 61 (number -> FLOAT .)
    ADV_ASSIGNMENT_OP reduce using rule 61 (number -> FLOAT .)
    ASSIGNMENT_OP   reduce using rule 61 (number -> FLOAT .)
    RANGE_OP        reduce using rule 61 (number -> FLOAT .)
    OR_OP           reduce using rule 61 (number -> FLOAT .)
    AND_OP          reduce using rule 61 (number -> FLOAT .)
    BIT_OR          reduce using rule 61 (number -> FLOAT .)
    BIT_XOR         reduce using rule 61 (number -> FLOAT .)
    BIT_AND         reduce using rule 61 (number -> FLOAT .)
    EQUALS_OP       reduce using rule 61 (number -> FLOAT .)
    NOT_EQUALS_OP   reduce using rule 61 (number -> FLOAT .)
    COMPARE_OP      reduce using rule 61 (number -> FLOAT .)
    GREATER_OP      reduce using rule 61 (number -> FLOAT .)
    LESS_OP         reduce using rule 61 (number -> FLOAT .)
    GREATER_EQUAL_OP reduce using rule 61 (number -> FLOAT .)
    LESS_EQUAL_OP   reduce using rule 61 (number -> FLOAT .)
    BIT_RIGHT_SHIFT reduce using rule 61 (number -> FLOAT .)
    BIT_LEFT_SHIFT  reduce using rule 61 (number -> FLOAT .)
    PLUS_OP         reduce using rule 61 (number -> FLOAT .)
    MINUS_OP        reduce using rule 61 (number -> FLOAT .)
    CONCATENATE     reduce using rule 61 (number -> FLOAT .)
    MULTIPLICATION_OP reduce using rule 61 (number -> FLOAT .)
    DIVISION_OP     reduce using rule 61 (number -> FLOAT .)
    MODULUS_OP      reduce using rule 61 (number -> FLOAT .)
    REP_OP          reduce using rule 61 (number -> FLOAT .)
    SEARCH_MODIFY   reduce using rule 61 (number -> FLOAT .)
    SEARCH_MODIFY_NEG reduce using rule 61 (number -> FLOAT .)
    EXPONENT_OP     reduce using rule 61 (number -> FLOAT .)
    CLOSE_PARANTHESIS reduce using rule 61 (number -> FLOAT .)


state 100

    (59) number -> NUMBER .

    SEMICOLON       reduce using rule 59 (number -> NUMBER .)
    INCREMENT_OP    reduce using rule 59 (number -> NUMBER .)
    DECREMENT_OP    reduce using rule 59 (number -> NUMBER .)
    OR_STR_OP       reduce using rule 59 (number -> NUMBER .)
    XOR_STR_OP      reduce using rule 59 (number -> NUMBER .)
    AND_STR_OP      reduce using rule 59 (number -> NUMBER .)
    NOT_STR_OP      reduce using rule 59 (number -> NUMBER .)
    COMMA           reduce using rule 59 (number -> NUMBER .)
    ASSOCIATE_OP    reduce using rule 59 (number -> NUMBER .)
    ADV_ASSIGNMENT_OP reduce using rule 59 (number -> NUMBER .)
    ASSIGNMENT_OP   reduce using rule 59 (number -> NUMBER .)
    RANGE_OP        reduce using rule 59 (number -> NUMBER .)
    OR_OP           reduce using rule 59 (number -> NUMBER .)
    AND_OP          reduce using rule 59 (number -> NUMBER .)
    BIT_OR          reduce using rule 59 (number -> NUMBER .)
    BIT_XOR         reduce using rule 59 (number -> NUMBER .)
    BIT_AND         reduce using rule 59 (number -> NUMBER .)
    EQUALS_OP       reduce using rule 59 (number -> NUMBER .)
    NOT_EQUALS_OP   reduce using rule 59 (number -> NUMBER .)
    COMPARE_OP      reduce using rule 59 (number -> NUMBER .)
    GREATER_OP      reduce using rule 59 (number -> NUMBER .)
    LESS_OP         reduce using rule 59 (number -> NUMBER .)
    GREATER_EQUAL_OP reduce using rule 59 (number -> NUMBER .)
    LESS_EQUAL_OP   reduce using rule 59 (number -> NUMBER .)
    BIT_RIGHT_SHIFT reduce using rule 59 (number -> NUMBER .)
    BIT_LEFT_SHIFT  reduce using rule 59 (number -> NUMBER .)
    PLUS_OP         reduce using rule 59 (number -> NUMBER .)
    MINUS_OP        reduce using rule 59 (number -> NUMBER .)
    CONCATENATE     reduce using rule 59 (number -> NUMBER .)
    MULTIPLICATION_OP reduce using rule 59 (number -> NUMBER .)
    DIVISION_OP     reduce using rule 59 (number -> NUMBER .)
    MODULUS_OP      reduce using rule 59 (number -> NUMBER .)
    REP_OP          reduce using rule 59 (number -> NUMBER .)
    SEARCH_MODIFY   reduce using rule 59 (number -> NUMBER .)
    SEARCH_MODIFY_NEG reduce using rule 59 (number -> NUMBER .)
    EXPONENT_OP     reduce using rule 59 (number -> NUMBER .)
    CLOSE_PARANTHESIS reduce using rule 59 (number -> NUMBER .)


state 101

    (60) number -> SCI_NOT .

    SEMICOLON       reduce using rule 60 (number -> SCI_NOT .)
    INCREMENT_OP    reduce using rule 60 (number -> SCI_NOT .)
    DECREMENT_OP    reduce using rule 60 (number -> SCI_NOT .)
    OR_STR_OP       reduce using rule 60 (number -> SCI_NOT .)
    XOR_STR_OP      reduce using rule 60 (number -> SCI_NOT .)
    AND_STR_OP      reduce using rule 60 (number -> SCI_NOT .)
    NOT_STR_OP      reduce using rule 60 (number -> SCI_NOT .)
    COMMA           reduce using rule 60 (number -> SCI_NOT .)
    ASSOCIATE_OP    reduce using rule 60 (number -> SCI_NOT .)
    ADV_ASSIGNMENT_OP reduce using rule 60 (number -> SCI_NOT .)
    ASSIGNMENT_OP   reduce using rule 60 (number -> SCI_NOT .)
    RANGE_OP        reduce using rule 60 (number -> SCI_NOT .)
    OR_OP           reduce using rule 60 (number -> SCI_NOT .)
    AND_OP          reduce using rule 60 (number -> SCI_NOT .)
    BIT_OR          reduce using rule 60 (number -> SCI_NOT .)
    BIT_XOR         reduce using rule 60 (number -> SCI_NOT .)
    BIT_AND         reduce using rule 60 (number -> SCI_NOT .)
    EQUALS_OP       reduce using rule 60 (number -> SCI_NOT .)
    NOT_EQUALS_OP   reduce using rule 60 (number -> SCI_NOT .)
    COMPARE_OP      reduce using rule 60 (number -> SCI_NOT .)
    GREATER_OP      reduce using rule 60 (number -> SCI_NOT .)
    LESS_OP         reduce using rule 60 (number -> SCI_NOT .)
    GREATER_EQUAL_OP reduce using rule 60 (number -> SCI_NOT .)
    LESS_EQUAL_OP   reduce using rule 60 (number -> SCI_NOT .)
    BIT_RIGHT_SHIFT reduce using rule 60 (number -> SCI_NOT .)
    BIT_LEFT_SHIFT  reduce using rule 60 (number -> SCI_NOT .)
    PLUS_OP         reduce using rule 60 (number -> SCI_NOT .)
    MINUS_OP        reduce using rule 60 (number -> SCI_NOT .)
    CONCATENATE     reduce using rule 60 (number -> SCI_NOT .)
    MULTIPLICATION_OP reduce using rule 60 (number -> SCI_NOT .)
    DIVISION_OP     reduce using rule 60 (number -> SCI_NOT .)
    MODULUS_OP      reduce using rule 60 (number -> SCI_NOT .)
    REP_OP          reduce using rule 60 (number -> SCI_NOT .)
    SEARCH_MODIFY   reduce using rule 60 (number -> SCI_NOT .)
    SEARCH_MODIFY_NEG reduce using rule 60 (number -> SCI_NOT .)
    EXPONENT_OP     reduce using rule 60 (number -> SCI_NOT .)
    CLOSE_PARANTHESIS reduce using rule 60 (number -> SCI_NOT .)


state 102

    (67) term -> empty number . empty
    (7) empty -> .

    SEMICOLON       reduce using rule 7 (empty -> .)
    INCREMENT_OP    reduce using rule 7 (empty -> .)
    DECREMENT_OP    reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    PLUS_OP         reduce using rule 7 (empty -> .)
    MINUS_OP        reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)

    empty                          shift and go to state 172

state 103

    (63) number -> OCTAL .

    SEMICOLON       reduce using rule 63 (number -> OCTAL .)
    INCREMENT_OP    reduce using rule 63 (number -> OCTAL .)
    DECREMENT_OP    reduce using rule 63 (number -> OCTAL .)
    OR_STR_OP       reduce using rule 63 (number -> OCTAL .)
    XOR_STR_OP      reduce using rule 63 (number -> OCTAL .)
    AND_STR_OP      reduce using rule 63 (number -> OCTAL .)
    NOT_STR_OP      reduce using rule 63 (number -> OCTAL .)
    COMMA           reduce using rule 63 (number -> OCTAL .)
    ASSOCIATE_OP    reduce using rule 63 (number -> OCTAL .)
    ADV_ASSIGNMENT_OP reduce using rule 63 (number -> OCTAL .)
    ASSIGNMENT_OP   reduce using rule 63 (number -> OCTAL .)
    RANGE_OP        reduce using rule 63 (number -> OCTAL .)
    OR_OP           reduce using rule 63 (number -> OCTAL .)
    AND_OP          reduce using rule 63 (number -> OCTAL .)
    BIT_OR          reduce using rule 63 (number -> OCTAL .)
    BIT_XOR         reduce using rule 63 (number -> OCTAL .)
    BIT_AND         reduce using rule 63 (number -> OCTAL .)
    EQUALS_OP       reduce using rule 63 (number -> OCTAL .)
    NOT_EQUALS_OP   reduce using rule 63 (number -> OCTAL .)
    COMPARE_OP      reduce using rule 63 (number -> OCTAL .)
    GREATER_OP      reduce using rule 63 (number -> OCTAL .)
    LESS_OP         reduce using rule 63 (number -> OCTAL .)
    GREATER_EQUAL_OP reduce using rule 63 (number -> OCTAL .)
    LESS_EQUAL_OP   reduce using rule 63 (number -> OCTAL .)
    BIT_RIGHT_SHIFT reduce using rule 63 (number -> OCTAL .)
    BIT_LEFT_SHIFT  reduce using rule 63 (number -> OCTAL .)
    PLUS_OP         reduce using rule 63 (number -> OCTAL .)
    MINUS_OP        reduce using rule 63 (number -> OCTAL .)
    CONCATENATE     reduce using rule 63 (number -> OCTAL .)
    MULTIPLICATION_OP reduce using rule 63 (number -> OCTAL .)
    DIVISION_OP     reduce using rule 63 (number -> OCTAL .)
    MODULUS_OP      reduce using rule 63 (number -> OCTAL .)
    REP_OP          reduce using rule 63 (number -> OCTAL .)
    SEARCH_MODIFY   reduce using rule 63 (number -> OCTAL .)
    SEARCH_MODIFY_NEG reduce using rule 63 (number -> OCTAL .)
    EXPONENT_OP     reduce using rule 63 (number -> OCTAL .)
    CLOSE_PARANTHESIS reduce using rule 63 (number -> OCTAL .)


state 104

    (69) term -> empty variable . empty
    (74) type -> variable .
    (7) empty -> .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for INCREMENT_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for DECREMENT_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for OR_STR_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for XOR_STR_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for AND_STR_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for NOT_STR_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for COMMA resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for ASSOCIATE_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for ADV_ASSIGNMENT_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for ASSIGNMENT_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for RANGE_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for OR_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for AND_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for BIT_OR resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for BIT_XOR resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for BIT_AND resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for EQUALS_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for NOT_EQUALS_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for COMPARE_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for GREATER_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for LESS_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for GREATER_EQUAL_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for LESS_EQUAL_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for BIT_RIGHT_SHIFT resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for BIT_LEFT_SHIFT resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for PLUS_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for MINUS_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for CONCATENATE resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for MULTIPLICATION_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for DIVISION_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for MODULUS_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for REP_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for SEARCH_MODIFY resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for SEARCH_MODIFY_NEG resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for EXPONENT_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for CLOSE_PARANTHESIS resolved using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    INCREMENT_OP    reduce using rule 7 (empty -> .)
    DECREMENT_OP    reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    PLUS_OP         reduce using rule 7 (empty -> .)
    MINUS_OP        reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)

  ! COMMA           [ reduce using rule 74 (type -> variable .) ]
  ! INCREMENT_OP    [ reduce using rule 74 (type -> variable .) ]
  ! DECREMENT_OP    [ reduce using rule 74 (type -> variable .) ]
  ! OR_STR_OP       [ reduce using rule 74 (type -> variable .) ]
  ! XOR_STR_OP      [ reduce using rule 74 (type -> variable .) ]
  ! AND_STR_OP      [ reduce using rule 74 (type -> variable .) ]
  ! NOT_STR_OP      [ reduce using rule 74 (type -> variable .) ]
  ! ASSOCIATE_OP    [ reduce using rule 74 (type -> variable .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 74 (type -> variable .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 74 (type -> variable .) ]
  ! RANGE_OP        [ reduce using rule 74 (type -> variable .) ]
  ! OR_OP           [ reduce using rule 74 (type -> variable .) ]
  ! AND_OP          [ reduce using rule 74 (type -> variable .) ]
  ! BIT_OR          [ reduce using rule 74 (type -> variable .) ]
  ! BIT_XOR         [ reduce using rule 74 (type -> variable .) ]
  ! BIT_AND         [ reduce using rule 74 (type -> variable .) ]
  ! EQUALS_OP       [ reduce using rule 74 (type -> variable .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 74 (type -> variable .) ]
  ! COMPARE_OP      [ reduce using rule 74 (type -> variable .) ]
  ! GREATER_OP      [ reduce using rule 74 (type -> variable .) ]
  ! LESS_OP         [ reduce using rule 74 (type -> variable .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 74 (type -> variable .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 74 (type -> variable .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 74 (type -> variable .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 74 (type -> variable .) ]
  ! PLUS_OP         [ reduce using rule 74 (type -> variable .) ]
  ! MINUS_OP        [ reduce using rule 74 (type -> variable .) ]
  ! CONCATENATE     [ reduce using rule 74 (type -> variable .) ]
  ! MULTIPLICATION_OP [ reduce using rule 74 (type -> variable .) ]
  ! DIVISION_OP     [ reduce using rule 74 (type -> variable .) ]
  ! MODULUS_OP      [ reduce using rule 74 (type -> variable .) ]
  ! REP_OP          [ reduce using rule 74 (type -> variable .) ]
  ! SEARCH_MODIFY   [ reduce using rule 74 (type -> variable .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 74 (type -> variable .) ]
  ! EXPONENT_OP     [ reduce using rule 74 (type -> variable .) ]
  ! CLOSE_PARANTHESIS [ reduce using rule 74 (type -> variable .) ]
  ! SEMICOLON       [ reduce using rule 74 (type -> variable .) ]

    empty                          shift and go to state 173

state 105

    (62) number -> HEXADECIMAL .

    SEMICOLON       reduce using rule 62 (number -> HEXADECIMAL .)
    INCREMENT_OP    reduce using rule 62 (number -> HEXADECIMAL .)
    DECREMENT_OP    reduce using rule 62 (number -> HEXADECIMAL .)
    OR_STR_OP       reduce using rule 62 (number -> HEXADECIMAL .)
    XOR_STR_OP      reduce using rule 62 (number -> HEXADECIMAL .)
    AND_STR_OP      reduce using rule 62 (number -> HEXADECIMAL .)
    NOT_STR_OP      reduce using rule 62 (number -> HEXADECIMAL .)
    COMMA           reduce using rule 62 (number -> HEXADECIMAL .)
    ASSOCIATE_OP    reduce using rule 62 (number -> HEXADECIMAL .)
    ADV_ASSIGNMENT_OP reduce using rule 62 (number -> HEXADECIMAL .)
    ASSIGNMENT_OP   reduce using rule 62 (number -> HEXADECIMAL .)
    RANGE_OP        reduce using rule 62 (number -> HEXADECIMAL .)
    OR_OP           reduce using rule 62 (number -> HEXADECIMAL .)
    AND_OP          reduce using rule 62 (number -> HEXADECIMAL .)
    BIT_OR          reduce using rule 62 (number -> HEXADECIMAL .)
    BIT_XOR         reduce using rule 62 (number -> HEXADECIMAL .)
    BIT_AND         reduce using rule 62 (number -> HEXADECIMAL .)
    EQUALS_OP       reduce using rule 62 (number -> HEXADECIMAL .)
    NOT_EQUALS_OP   reduce using rule 62 (number -> HEXADECIMAL .)
    COMPARE_OP      reduce using rule 62 (number -> HEXADECIMAL .)
    GREATER_OP      reduce using rule 62 (number -> HEXADECIMAL .)
    LESS_OP         reduce using rule 62 (number -> HEXADECIMAL .)
    GREATER_EQUAL_OP reduce using rule 62 (number -> HEXADECIMAL .)
    LESS_EQUAL_OP   reduce using rule 62 (number -> HEXADECIMAL .)
    BIT_RIGHT_SHIFT reduce using rule 62 (number -> HEXADECIMAL .)
    BIT_LEFT_SHIFT  reduce using rule 62 (number -> HEXADECIMAL .)
    PLUS_OP         reduce using rule 62 (number -> HEXADECIMAL .)
    MINUS_OP        reduce using rule 62 (number -> HEXADECIMAL .)
    CONCATENATE     reduce using rule 62 (number -> HEXADECIMAL .)
    MULTIPLICATION_OP reduce using rule 62 (number -> HEXADECIMAL .)
    DIVISION_OP     reduce using rule 62 (number -> HEXADECIMAL .)
    MODULUS_OP      reduce using rule 62 (number -> HEXADECIMAL .)
    REP_OP          reduce using rule 62 (number -> HEXADECIMAL .)
    SEARCH_MODIFY   reduce using rule 62 (number -> HEXADECIMAL .)
    SEARCH_MODIFY_NEG reduce using rule 62 (number -> HEXADECIMAL .)
    EXPONENT_OP     reduce using rule 62 (number -> HEXADECIMAL .)
    CLOSE_PARANTHESIS reduce using rule 62 (number -> HEXADECIMAL .)


state 106

    (68) term -> empty type . empty
    (7) empty -> .

    SEMICOLON       reduce using rule 7 (empty -> .)
    INCREMENT_OP    reduce using rule 7 (empty -> .)
    DECREMENT_OP    reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    PLUS_OP         reduce using rule 7 (empty -> .)
    MINUS_OP        reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)

    empty                          shift and go to state 174

state 107

    (80) expression -> DECREMENT_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    INCREMENT_OP    reduce using rule 80 (expression -> DECREMENT_OP expression .)
    DECREMENT_OP    reduce using rule 80 (expression -> DECREMENT_OP expression .)
    OR_STR_OP       reduce using rule 80 (expression -> DECREMENT_OP expression .)
    XOR_STR_OP      reduce using rule 80 (expression -> DECREMENT_OP expression .)
    AND_STR_OP      reduce using rule 80 (expression -> DECREMENT_OP expression .)
    NOT_STR_OP      reduce using rule 80 (expression -> DECREMENT_OP expression .)
    COMMA           reduce using rule 80 (expression -> DECREMENT_OP expression .)
    ASSOCIATE_OP    reduce using rule 80 (expression -> DECREMENT_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 80 (expression -> DECREMENT_OP expression .)
    ASSIGNMENT_OP   reduce using rule 80 (expression -> DECREMENT_OP expression .)
    RANGE_OP        reduce using rule 80 (expression -> DECREMENT_OP expression .)
    OR_OP           reduce using rule 80 (expression -> DECREMENT_OP expression .)
    AND_OP          reduce using rule 80 (expression -> DECREMENT_OP expression .)
    BIT_OR          reduce using rule 80 (expression -> DECREMENT_OP expression .)
    BIT_XOR         reduce using rule 80 (expression -> DECREMENT_OP expression .)
    BIT_AND         reduce using rule 80 (expression -> DECREMENT_OP expression .)
    EQUALS_OP       reduce using rule 80 (expression -> DECREMENT_OP expression .)
    NOT_EQUALS_OP   reduce using rule 80 (expression -> DECREMENT_OP expression .)
    COMPARE_OP      reduce using rule 80 (expression -> DECREMENT_OP expression .)
    GREATER_OP      reduce using rule 80 (expression -> DECREMENT_OP expression .)
    LESS_OP         reduce using rule 80 (expression -> DECREMENT_OP expression .)
    GREATER_EQUAL_OP reduce using rule 80 (expression -> DECREMENT_OP expression .)
    LESS_EQUAL_OP   reduce using rule 80 (expression -> DECREMENT_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 80 (expression -> DECREMENT_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 80 (expression -> DECREMENT_OP expression .)
    PLUS_OP         reduce using rule 80 (expression -> DECREMENT_OP expression .)
    MINUS_OP        reduce using rule 80 (expression -> DECREMENT_OP expression .)
    CONCATENATE     reduce using rule 80 (expression -> DECREMENT_OP expression .)
    MULTIPLICATION_OP reduce using rule 80 (expression -> DECREMENT_OP expression .)
    DIVISION_OP     reduce using rule 80 (expression -> DECREMENT_OP expression .)
    MODULUS_OP      reduce using rule 80 (expression -> DECREMENT_OP expression .)
    REP_OP          reduce using rule 80 (expression -> DECREMENT_OP expression .)
    SEARCH_MODIFY   reduce using rule 80 (expression -> DECREMENT_OP expression .)
    SEARCH_MODIFY_NEG reduce using rule 80 (expression -> DECREMENT_OP expression .)
    EXPONENT_OP     reduce using rule 80 (expression -> DECREMENT_OP expression .)
    SEMICOLON       reduce using rule 80 (expression -> DECREMENT_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 80 (expression -> DECREMENT_OP expression .)

  ! INCREMENT_OP    [ shift and go to state 139 ]
  ! DECREMENT_OP    [ shift and go to state 132 ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]
  ! MULTIPLICATION_OP [ shift and go to state 131 ]
  ! DIVISION_OP     [ shift and go to state 117 ]
  ! MODULUS_OP      [ shift and go to state 126 ]
  ! REP_OP          [ shift and go to state 137 ]
  ! SEARCH_MODIFY   [ shift and go to state 110 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 144 ]
  ! EXPONENT_OP     [ shift and go to state 115 ]


state 108

    (79) expression -> INCREMENT_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    INCREMENT_OP    reduce using rule 79 (expression -> INCREMENT_OP expression .)
    DECREMENT_OP    reduce using rule 79 (expression -> INCREMENT_OP expression .)
    OR_STR_OP       reduce using rule 79 (expression -> INCREMENT_OP expression .)
    XOR_STR_OP      reduce using rule 79 (expression -> INCREMENT_OP expression .)
    AND_STR_OP      reduce using rule 79 (expression -> INCREMENT_OP expression .)
    NOT_STR_OP      reduce using rule 79 (expression -> INCREMENT_OP expression .)
    COMMA           reduce using rule 79 (expression -> INCREMENT_OP expression .)
    ASSOCIATE_OP    reduce using rule 79 (expression -> INCREMENT_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 79 (expression -> INCREMENT_OP expression .)
    ASSIGNMENT_OP   reduce using rule 79 (expression -> INCREMENT_OP expression .)
    RANGE_OP        reduce using rule 79 (expression -> INCREMENT_OP expression .)
    OR_OP           reduce using rule 79 (expression -> INCREMENT_OP expression .)
    AND_OP          reduce using rule 79 (expression -> INCREMENT_OP expression .)
    BIT_OR          reduce using rule 79 (expression -> INCREMENT_OP expression .)
    BIT_XOR         reduce using rule 79 (expression -> INCREMENT_OP expression .)
    BIT_AND         reduce using rule 79 (expression -> INCREMENT_OP expression .)
    EQUALS_OP       reduce using rule 79 (expression -> INCREMENT_OP expression .)
    NOT_EQUALS_OP   reduce using rule 79 (expression -> INCREMENT_OP expression .)
    COMPARE_OP      reduce using rule 79 (expression -> INCREMENT_OP expression .)
    GREATER_OP      reduce using rule 79 (expression -> INCREMENT_OP expression .)
    LESS_OP         reduce using rule 79 (expression -> INCREMENT_OP expression .)
    GREATER_EQUAL_OP reduce using rule 79 (expression -> INCREMENT_OP expression .)
    LESS_EQUAL_OP   reduce using rule 79 (expression -> INCREMENT_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 79 (expression -> INCREMENT_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 79 (expression -> INCREMENT_OP expression .)
    PLUS_OP         reduce using rule 79 (expression -> INCREMENT_OP expression .)
    MINUS_OP        reduce using rule 79 (expression -> INCREMENT_OP expression .)
    CONCATENATE     reduce using rule 79 (expression -> INCREMENT_OP expression .)
    MULTIPLICATION_OP reduce using rule 79 (expression -> INCREMENT_OP expression .)
    DIVISION_OP     reduce using rule 79 (expression -> INCREMENT_OP expression .)
    MODULUS_OP      reduce using rule 79 (expression -> INCREMENT_OP expression .)
    REP_OP          reduce using rule 79 (expression -> INCREMENT_OP expression .)
    SEARCH_MODIFY   reduce using rule 79 (expression -> INCREMENT_OP expression .)
    SEARCH_MODIFY_NEG reduce using rule 79 (expression -> INCREMENT_OP expression .)
    EXPONENT_OP     reduce using rule 79 (expression -> INCREMENT_OP expression .)
    SEMICOLON       reduce using rule 79 (expression -> INCREMENT_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 79 (expression -> INCREMENT_OP expression .)

  ! INCREMENT_OP    [ shift and go to state 139 ]
  ! DECREMENT_OP    [ shift and go to state 132 ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]
  ! MULTIPLICATION_OP [ shift and go to state 131 ]
  ! DIVISION_OP     [ shift and go to state 117 ]
  ! MODULUS_OP      [ shift and go to state 126 ]
  ! REP_OP          [ shift and go to state 137 ]
  ! SEARCH_MODIFY   [ shift and go to state 110 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 144 ]
  ! EXPONENT_OP     [ shift and go to state 115 ]


state 109

    (75) expression -> PLUS_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 75 (expression -> PLUS_OP expression .)
    XOR_STR_OP      reduce using rule 75 (expression -> PLUS_OP expression .)
    AND_STR_OP      reduce using rule 75 (expression -> PLUS_OP expression .)
    NOT_STR_OP      reduce using rule 75 (expression -> PLUS_OP expression .)
    COMMA           reduce using rule 75 (expression -> PLUS_OP expression .)
    ASSOCIATE_OP    reduce using rule 75 (expression -> PLUS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 75 (expression -> PLUS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 75 (expression -> PLUS_OP expression .)
    RANGE_OP        reduce using rule 75 (expression -> PLUS_OP expression .)
    OR_OP           reduce using rule 75 (expression -> PLUS_OP expression .)
    AND_OP          reduce using rule 75 (expression -> PLUS_OP expression .)
    BIT_OR          reduce using rule 75 (expression -> PLUS_OP expression .)
    BIT_XOR         reduce using rule 75 (expression -> PLUS_OP expression .)
    BIT_AND         reduce using rule 75 (expression -> PLUS_OP expression .)
    EQUALS_OP       reduce using rule 75 (expression -> PLUS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 75 (expression -> PLUS_OP expression .)
    COMPARE_OP      reduce using rule 75 (expression -> PLUS_OP expression .)
    GREATER_OP      reduce using rule 75 (expression -> PLUS_OP expression .)
    LESS_OP         reduce using rule 75 (expression -> PLUS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 75 (expression -> PLUS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 75 (expression -> PLUS_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 75 (expression -> PLUS_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 75 (expression -> PLUS_OP expression .)
    PLUS_OP         reduce using rule 75 (expression -> PLUS_OP expression .)
    MINUS_OP        reduce using rule 75 (expression -> PLUS_OP expression .)
    CONCATENATE     reduce using rule 75 (expression -> PLUS_OP expression .)
    MULTIPLICATION_OP reduce using rule 75 (expression -> PLUS_OP expression .)
    DIVISION_OP     reduce using rule 75 (expression -> PLUS_OP expression .)
    MODULUS_OP      reduce using rule 75 (expression -> PLUS_OP expression .)
    REP_OP          reduce using rule 75 (expression -> PLUS_OP expression .)
    SEARCH_MODIFY   reduce using rule 75 (expression -> PLUS_OP expression .)
    SEARCH_MODIFY_NEG reduce using rule 75 (expression -> PLUS_OP expression .)
    SEMICOLON       reduce using rule 75 (expression -> PLUS_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 75 (expression -> PLUS_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 75 (expression -> PLUS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 75 (expression -> PLUS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 75 (expression -> PLUS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]
  ! MULTIPLICATION_OP [ shift and go to state 131 ]
  ! DIVISION_OP     [ shift and go to state 117 ]
  ! MODULUS_OP      [ shift and go to state 126 ]
  ! REP_OP          [ shift and go to state 137 ]
  ! SEARCH_MODIFY   [ shift and go to state 110 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 144 ]


state 110

    (115) expression -> expression SEARCH_MODIFY . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 175
    empty                          shift and go to state 54

state 111

    (105) expression -> expression LESS_EQUAL_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 176
    empty                          shift and go to state 54

state 112

    (99) expression -> expression EQUALS_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 177
    empty                          shift and go to state 54

state 113

    (101) expression -> expression COMPARE_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 178
    empty                          shift and go to state 54

state 114

    (100) expression -> expression NOT_EQUALS_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 179
    empty                          shift and go to state 54

state 115

    (117) expression -> expression EXPONENT_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 180
    empty                          shift and go to state 54

state 116

    (88) expression -> expression NOT_STR_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 181
    empty                          shift and go to state 54

state 117

    (112) expression -> expression DIVISION_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 182
    empty                          shift and go to state 54

state 118

    (93) expression -> expression RANGE_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 183
    empty                          shift and go to state 54

state 119

    (97) expression -> expression BIT_XOR . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 184
    empty                          shift and go to state 54

state 120

    (109) expression -> expression MINUS_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 185
    empty                          shift and go to state 54

state 121

    (37) returnStatement -> RETURN expression SEMICOLON .

    RETURN          reduce using rule 37 (returnStatement -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 37 (returnStatement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 37 (returnStatement -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 37 (returnStatement -> RETURN expression SEMICOLON .)
    PRINT           reduce using rule 37 (returnStatement -> RETURN expression SEMICOLON .)
    SUB             reduce using rule 37 (returnStatement -> RETURN expression SEMICOLON .)
    LAST            reduce using rule 37 (returnStatement -> RETURN expression SEMICOLON .)
    NEXT            reduce using rule 37 (returnStatement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 37 (returnStatement -> RETURN expression SEMICOLON .)
    USE             reduce using rule 37 (returnStatement -> RETURN expression SEMICOLON .)
    SWITCH          reduce using rule 37 (returnStatement -> RETURN expression SEMICOLON .)
    PRIVATE         reduce using rule 37 (returnStatement -> RETURN expression SEMICOLON .)
    LOCAL           reduce using rule 37 (returnStatement -> RETURN expression SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 37 (returnStatement -> RETURN expression SEMICOLON .)
    ARRAY           reduce using rule 37 (returnStatement -> RETURN expression SEMICOLON .)
    HASH            reduce using rule 37 (returnStatement -> RETURN expression SEMICOLON .)
    VARIABLE        reduce using rule 37 (returnStatement -> RETURN expression SEMICOLON .)
    $end            reduce using rule 37 (returnStatement -> RETURN expression SEMICOLON .)
    BLOCK_ENDS      reduce using rule 37 (returnStatement -> RETURN expression SEMICOLON .)


state 122

    (87) expression -> expression AND_STR_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 186
    empty                          shift and go to state 54

state 123

    (94) expression -> expression OR_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 187
    empty                          shift and go to state 54

state 124

    (103) expression -> expression LESS_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 188
    empty                          shift and go to state 54

state 125

    (89) expression -> expression COMMA . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 189
    empty                          shift and go to state 54

state 126

    (113) expression -> expression MODULUS_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 190
    empty                          shift and go to state 54

state 127

    (92) expression -> expression ASSIGNMENT_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 191
    empty                          shift and go to state 54

state 128

    (104) expression -> expression GREATER_EQUAL_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 192
    empty                          shift and go to state 54

state 129

    (86) expression -> expression XOR_STR_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 193
    empty                          shift and go to state 54

state 130

    (98) expression -> expression BIT_AND . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 194
    empty                          shift and go to state 54

state 131

    (111) expression -> expression MULTIPLICATION_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 195
    empty                          shift and go to state 54

state 132

    (82) expression -> expression DECREMENT_OP .

    INCREMENT_OP    reduce using rule 82 (expression -> expression DECREMENT_OP .)
    DECREMENT_OP    reduce using rule 82 (expression -> expression DECREMENT_OP .)
    OR_STR_OP       reduce using rule 82 (expression -> expression DECREMENT_OP .)
    XOR_STR_OP      reduce using rule 82 (expression -> expression DECREMENT_OP .)
    AND_STR_OP      reduce using rule 82 (expression -> expression DECREMENT_OP .)
    NOT_STR_OP      reduce using rule 82 (expression -> expression DECREMENT_OP .)
    COMMA           reduce using rule 82 (expression -> expression DECREMENT_OP .)
    ASSOCIATE_OP    reduce using rule 82 (expression -> expression DECREMENT_OP .)
    ADV_ASSIGNMENT_OP reduce using rule 82 (expression -> expression DECREMENT_OP .)
    ASSIGNMENT_OP   reduce using rule 82 (expression -> expression DECREMENT_OP .)
    RANGE_OP        reduce using rule 82 (expression -> expression DECREMENT_OP .)
    OR_OP           reduce using rule 82 (expression -> expression DECREMENT_OP .)
    AND_OP          reduce using rule 82 (expression -> expression DECREMENT_OP .)
    BIT_OR          reduce using rule 82 (expression -> expression DECREMENT_OP .)
    BIT_XOR         reduce using rule 82 (expression -> expression DECREMENT_OP .)
    BIT_AND         reduce using rule 82 (expression -> expression DECREMENT_OP .)
    EQUALS_OP       reduce using rule 82 (expression -> expression DECREMENT_OP .)
    NOT_EQUALS_OP   reduce using rule 82 (expression -> expression DECREMENT_OP .)
    COMPARE_OP      reduce using rule 82 (expression -> expression DECREMENT_OP .)
    GREATER_OP      reduce using rule 82 (expression -> expression DECREMENT_OP .)
    LESS_OP         reduce using rule 82 (expression -> expression DECREMENT_OP .)
    GREATER_EQUAL_OP reduce using rule 82 (expression -> expression DECREMENT_OP .)
    LESS_EQUAL_OP   reduce using rule 82 (expression -> expression DECREMENT_OP .)
    BIT_RIGHT_SHIFT reduce using rule 82 (expression -> expression DECREMENT_OP .)
    BIT_LEFT_SHIFT  reduce using rule 82 (expression -> expression DECREMENT_OP .)
    PLUS_OP         reduce using rule 82 (expression -> expression DECREMENT_OP .)
    MINUS_OP        reduce using rule 82 (expression -> expression DECREMENT_OP .)
    CONCATENATE     reduce using rule 82 (expression -> expression DECREMENT_OP .)
    MULTIPLICATION_OP reduce using rule 82 (expression -> expression DECREMENT_OP .)
    DIVISION_OP     reduce using rule 82 (expression -> expression DECREMENT_OP .)
    MODULUS_OP      reduce using rule 82 (expression -> expression DECREMENT_OP .)
    REP_OP          reduce using rule 82 (expression -> expression DECREMENT_OP .)
    SEARCH_MODIFY   reduce using rule 82 (expression -> expression DECREMENT_OP .)
    SEARCH_MODIFY_NEG reduce using rule 82 (expression -> expression DECREMENT_OP .)
    EXPONENT_OP     reduce using rule 82 (expression -> expression DECREMENT_OP .)
    SEMICOLON       reduce using rule 82 (expression -> expression DECREMENT_OP .)
    CLOSE_PARANTHESIS reduce using rule 82 (expression -> expression DECREMENT_OP .)


state 133

    (90) expression -> expression ASSOCIATE_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 196
    empty                          shift and go to state 54

state 134

    (85) expression -> expression OR_STR_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 197
    empty                          shift and go to state 54

state 135

    (95) expression -> expression AND_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 198
    empty                          shift and go to state 54

state 136

    (107) expression -> expression BIT_LEFT_SHIFT . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 199
    empty                          shift and go to state 54

state 137

    (114) expression -> expression REP_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 200
    empty                          shift and go to state 54

state 138

    (110) expression -> expression CONCATENATE . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 201
    empty                          shift and go to state 54

state 139

    (81) expression -> expression INCREMENT_OP .

    INCREMENT_OP    reduce using rule 81 (expression -> expression INCREMENT_OP .)
    DECREMENT_OP    reduce using rule 81 (expression -> expression INCREMENT_OP .)
    OR_STR_OP       reduce using rule 81 (expression -> expression INCREMENT_OP .)
    XOR_STR_OP      reduce using rule 81 (expression -> expression INCREMENT_OP .)
    AND_STR_OP      reduce using rule 81 (expression -> expression INCREMENT_OP .)
    NOT_STR_OP      reduce using rule 81 (expression -> expression INCREMENT_OP .)
    COMMA           reduce using rule 81 (expression -> expression INCREMENT_OP .)
    ASSOCIATE_OP    reduce using rule 81 (expression -> expression INCREMENT_OP .)
    ADV_ASSIGNMENT_OP reduce using rule 81 (expression -> expression INCREMENT_OP .)
    ASSIGNMENT_OP   reduce using rule 81 (expression -> expression INCREMENT_OP .)
    RANGE_OP        reduce using rule 81 (expression -> expression INCREMENT_OP .)
    OR_OP           reduce using rule 81 (expression -> expression INCREMENT_OP .)
    AND_OP          reduce using rule 81 (expression -> expression INCREMENT_OP .)
    BIT_OR          reduce using rule 81 (expression -> expression INCREMENT_OP .)
    BIT_XOR         reduce using rule 81 (expression -> expression INCREMENT_OP .)
    BIT_AND         reduce using rule 81 (expression -> expression INCREMENT_OP .)
    EQUALS_OP       reduce using rule 81 (expression -> expression INCREMENT_OP .)
    NOT_EQUALS_OP   reduce using rule 81 (expression -> expression INCREMENT_OP .)
    COMPARE_OP      reduce using rule 81 (expression -> expression INCREMENT_OP .)
    GREATER_OP      reduce using rule 81 (expression -> expression INCREMENT_OP .)
    LESS_OP         reduce using rule 81 (expression -> expression INCREMENT_OP .)
    GREATER_EQUAL_OP reduce using rule 81 (expression -> expression INCREMENT_OP .)
    LESS_EQUAL_OP   reduce using rule 81 (expression -> expression INCREMENT_OP .)
    BIT_RIGHT_SHIFT reduce using rule 81 (expression -> expression INCREMENT_OP .)
    BIT_LEFT_SHIFT  reduce using rule 81 (expression -> expression INCREMENT_OP .)
    PLUS_OP         reduce using rule 81 (expression -> expression INCREMENT_OP .)
    MINUS_OP        reduce using rule 81 (expression -> expression INCREMENT_OP .)
    CONCATENATE     reduce using rule 81 (expression -> expression INCREMENT_OP .)
    MULTIPLICATION_OP reduce using rule 81 (expression -> expression INCREMENT_OP .)
    DIVISION_OP     reduce using rule 81 (expression -> expression INCREMENT_OP .)
    MODULUS_OP      reduce using rule 81 (expression -> expression INCREMENT_OP .)
    REP_OP          reduce using rule 81 (expression -> expression INCREMENT_OP .)
    SEARCH_MODIFY   reduce using rule 81 (expression -> expression INCREMENT_OP .)
    SEARCH_MODIFY_NEG reduce using rule 81 (expression -> expression INCREMENT_OP .)
    EXPONENT_OP     reduce using rule 81 (expression -> expression INCREMENT_OP .)
    SEMICOLON       reduce using rule 81 (expression -> expression INCREMENT_OP .)
    CLOSE_PARANTHESIS reduce using rule 81 (expression -> expression INCREMENT_OP .)


state 140

    (106) expression -> expression BIT_RIGHT_SHIFT . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 202
    empty                          shift and go to state 54

state 141

    (91) expression -> expression ADV_ASSIGNMENT_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 203
    empty                          shift and go to state 54

state 142

    (96) expression -> expression BIT_OR . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 204
    empty                          shift and go to state 54

state 143

    (108) expression -> expression PLUS_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 205
    empty                          shift and go to state 54

state 144

    (116) expression -> expression SEARCH_MODIFY_NEG . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 206
    empty                          shift and go to state 54

state 145

    (102) expression -> expression GREATER_OP . expression
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 207
    empty                          shift and go to state 54

state 146

    (31) functionStatement -> SUB IDENTIFIER block .

    RETURN          reduce using rule 31 (functionStatement -> SUB IDENTIFIER block .)
    IDENTIFIER      reduce using rule 31 (functionStatement -> SUB IDENTIFIER block .)
    WHILE           reduce using rule 31 (functionStatement -> SUB IDENTIFIER block .)
    FOR             reduce using rule 31 (functionStatement -> SUB IDENTIFIER block .)
    PRINT           reduce using rule 31 (functionStatement -> SUB IDENTIFIER block .)
    SUB             reduce using rule 31 (functionStatement -> SUB IDENTIFIER block .)
    LAST            reduce using rule 31 (functionStatement -> SUB IDENTIFIER block .)
    NEXT            reduce using rule 31 (functionStatement -> SUB IDENTIFIER block .)
    IF              reduce using rule 31 (functionStatement -> SUB IDENTIFIER block .)
    USE             reduce using rule 31 (functionStatement -> SUB IDENTIFIER block .)
    SWITCH          reduce using rule 31 (functionStatement -> SUB IDENTIFIER block .)
    PRIVATE         reduce using rule 31 (functionStatement -> SUB IDENTIFIER block .)
    LOCAL           reduce using rule 31 (functionStatement -> SUB IDENTIFIER block .)
    OPEN_PARANTHESIS reduce using rule 31 (functionStatement -> SUB IDENTIFIER block .)
    ARRAY           reduce using rule 31 (functionStatement -> SUB IDENTIFIER block .)
    HASH            reduce using rule 31 (functionStatement -> SUB IDENTIFIER block .)
    VARIABLE        reduce using rule 31 (functionStatement -> SUB IDENTIFIER block .)
    $end            reduce using rule 31 (functionStatement -> SUB IDENTIFIER block .)
    BLOCK_ENDS      reduce using rule 31 (functionStatement -> SUB IDENTIFIER block .)


state 147

    (23) switchStatement -> SWITCH empty lefthandside . empty BLOCK_BEGIN caselist BLOCK_ENDS
    (7) empty -> .

    BLOCK_BEGIN     reduce using rule 7 (empty -> .)

    empty                          shift and go to state 208

state 148

    (42) lefthandside -> PRIVATE OPEN_PARANTHESIS type . decList CLOSE_PARANTHESIS
    (49) decList -> . COMMA type decList
    (50) decList -> . empty empty empty
    (7) empty -> .

    COMMA           shift and go to state 74
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)

    empty                          shift and go to state 76
    decList                        shift and go to state 209

state 149

    (41) lefthandside -> PRIVATE empty type . decList
    (49) decList -> . COMMA type decList
    (50) decList -> . empty empty empty
    (7) empty -> .

    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    BLOCK_BEGIN     reduce using rule 7 (empty -> .)

  ! COMMA           [ shift and go to state 74 ]

    empty                          shift and go to state 76
    decList                        shift and go to state 210

state 150

    (54) parameters -> empty . empty empty
    (83) expression -> empty .
    (67) term -> empty . number empty
    (68) term -> empty . type empty
    (69) term -> empty . variable empty
    (70) term -> empty . string empty
    (7) empty -> .
    (59) number -> . NUMBER
    (60) number -> . SCI_NOT
    (61) number -> . FLOAT
    (62) number -> . HEXADECIMAL
    (63) number -> . OCTAL
    (72) type -> . ARRAY
    (73) type -> . HASH
    (74) type -> . variable
    (64) variable -> . VARIABLE empty empty empty
    (65) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (66) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (57) string -> . STRING
    (58) string -> . RES_STRING

  ! reduce/reduce conflict for CLOSE_PARANTHESIS resolved using rule 7 (empty -> .)
    COMMA           reduce using rule 83 (expression -> empty .)
    INCREMENT_OP    reduce using rule 83 (expression -> empty .)
    DECREMENT_OP    reduce using rule 83 (expression -> empty .)
    OR_STR_OP       reduce using rule 83 (expression -> empty .)
    XOR_STR_OP      reduce using rule 83 (expression -> empty .)
    AND_STR_OP      reduce using rule 83 (expression -> empty .)
    NOT_STR_OP      reduce using rule 83 (expression -> empty .)
    ASSOCIATE_OP    reduce using rule 83 (expression -> empty .)
    ADV_ASSIGNMENT_OP reduce using rule 83 (expression -> empty .)
    ASSIGNMENT_OP   reduce using rule 83 (expression -> empty .)
    RANGE_OP        reduce using rule 83 (expression -> empty .)
    OR_OP           reduce using rule 83 (expression -> empty .)
    AND_OP          reduce using rule 83 (expression -> empty .)
    BIT_OR          reduce using rule 83 (expression -> empty .)
    BIT_XOR         reduce using rule 83 (expression -> empty .)
    BIT_AND         reduce using rule 83 (expression -> empty .)
    EQUALS_OP       reduce using rule 83 (expression -> empty .)
    NOT_EQUALS_OP   reduce using rule 83 (expression -> empty .)
    COMPARE_OP      reduce using rule 83 (expression -> empty .)
    GREATER_OP      reduce using rule 83 (expression -> empty .)
    LESS_OP         reduce using rule 83 (expression -> empty .)
    GREATER_EQUAL_OP reduce using rule 83 (expression -> empty .)
    LESS_EQUAL_OP   reduce using rule 83 (expression -> empty .)
    BIT_RIGHT_SHIFT reduce using rule 83 (expression -> empty .)
    BIT_LEFT_SHIFT  reduce using rule 83 (expression -> empty .)
    PLUS_OP         reduce using rule 83 (expression -> empty .)
    MINUS_OP        reduce using rule 83 (expression -> empty .)
    CONCATENATE     reduce using rule 83 (expression -> empty .)
    MULTIPLICATION_OP reduce using rule 83 (expression -> empty .)
    DIVISION_OP     reduce using rule 83 (expression -> empty .)
    MODULUS_OP      reduce using rule 83 (expression -> empty .)
    REP_OP          reduce using rule 83 (expression -> empty .)
    SEARCH_MODIFY   reduce using rule 83 (expression -> empty .)
    SEARCH_MODIFY_NEG reduce using rule 83 (expression -> empty .)
    EXPONENT_OP     reduce using rule 83 (expression -> empty .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    NUMBER          shift and go to state 100
    SCI_NOT         shift and go to state 101
    FLOAT           shift and go to state 99
    HEXADECIMAL     shift and go to state 105
    OCTAL           shift and go to state 103
    ARRAY           shift and go to state 38
    HASH            shift and go to state 27
    VARIABLE        shift and go to state 8
    STRING          shift and go to state 86
    RES_STRING      shift and go to state 85

  ! CLOSE_PARANTHESIS [ reduce using rule 83 (expression -> empty .) ]

    variable                       shift and go to state 104
    type                           shift and go to state 106
    number                         shift and go to state 102
    empty                          shift and go to state 211
    string                         shift and go to state 98

state 151

    (51) functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters . CLOSE_PARANTHESIS SEMICOLON

    CLOSE_PARANTHESIS shift and go to state 212


state 152

    (52) parameters -> expression . COMMA parameters
    (53) parameters -> expression . empty empty
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression
    (7) empty -> .

    COMMA           shift and go to state 213
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    OR_STR_OP       shift and go to state 134
    XOR_STR_OP      shift and go to state 129
    AND_STR_OP      shift and go to state 122
    NOT_STR_OP      shift and go to state 116
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)

    empty                          shift and go to state 214

state 153

    (56) forStatement -> FOR OPEN_PARANTHESIS expression . SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    SEMICOLON       shift and go to state 215
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    OR_STR_OP       shift and go to state 134
    XOR_STR_OP      shift and go to state 129
    AND_STR_OP      shift and go to state 122
    NOT_STR_OP      shift and go to state 116
    COMMA           shift and go to state 125
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115


state 154

    (38) assignment -> lefthandside assignmenttype expression . SEMICOLON
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    SEMICOLON       shift and go to state 216
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    OR_STR_OP       shift and go to state 134
    XOR_STR_OP      shift and go to state 129
    AND_STR_OP      shift and go to state 122
    NOT_STR_OP      shift and go to state 116
    COMMA           shift and go to state 125
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115


state 155

    (48) declaration -> lefthandside decList CLOSE_PARANTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 217


state 156

    (47) declaration -> lefthandside decList empty . SEMICOLON

    SEMICOLON       shift and go to state 218


state 157

    (49) decList -> COMMA type . decList
    (49) decList -> . COMMA type decList
    (50) decList -> . empty empty empty
    (7) empty -> .

    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    BLOCK_BEGIN     reduce using rule 7 (empty -> .)

  ! COMMA           [ shift and go to state 74 ]

    empty                          shift and go to state 76
    decList                        shift and go to state 219

state 158

    (50) decList -> empty empty . empty
    (7) empty -> .

    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    BLOCK_BEGIN     reduce using rule 7 (empty -> .)

    empty                          shift and go to state 220

state 159

    (44) lefthandside -> LOCAL OPEN_PARANTHESIS type . decList CLOSE_PARANTHESIS
    (49) decList -> . COMMA type decList
    (50) decList -> . empty empty empty
    (7) empty -> .

    COMMA           shift and go to state 74
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)

    empty                          shift and go to state 76
    decList                        shift and go to state 221

state 160

    (43) lefthandside -> LOCAL empty type . decList
    (49) decList -> . COMMA type decList
    (50) decList -> . empty empty empty
    (7) empty -> .

    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    BLOCK_BEGIN     reduce using rule 7 (empty -> .)

  ! COMMA           [ shift and go to state 74 ]

    empty                          shift and go to state 76
    decList                        shift and go to state 222

state 161

    (27) ifthen -> IF OPEN_PARANTHESIS expression . CLOSE_PARANTHESIS block
    (28) ifthenelse -> IF OPEN_PARANTHESIS expression . CLOSE_PARANTHESIS block ELSE block
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS shift and go to state 223
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    OR_STR_OP       shift and go to state 134
    XOR_STR_OP      shift and go to state 129
    AND_STR_OP      shift and go to state 122
    NOT_STR_OP      shift and go to state 116
    COMMA           shift and go to state 125
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115


state 162

    (45) lefthandside -> OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .

    ADV_ASSIGNMENT_OP reduce using rule 45 (lefthandside -> OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    ASSIGNMENT_OP   reduce using rule 45 (lefthandside -> OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    COMMA           reduce using rule 45 (lefthandside -> OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    CLOSE_PARANTHESIS reduce using rule 45 (lefthandside -> OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    SEMICOLON       reduce using rule 45 (lefthandside -> OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    BLOCK_BEGIN     reduce using rule 45 (lefthandside -> OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)


state 163

    (65) variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .

    COMMA           reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    ADV_ASSIGNMENT_OP reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    ASSIGNMENT_OP   reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    CLOSE_PARANTHESIS reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    SEMICOLON       reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    BLOCK_BEGIN     reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    INCREMENT_OP    reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    DECREMENT_OP    reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    OR_STR_OP       reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    XOR_STR_OP      reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    AND_STR_OP      reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    NOT_STR_OP      reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    ASSOCIATE_OP    reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    RANGE_OP        reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    OR_OP           reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    AND_OP          reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    BIT_OR          reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    BIT_XOR         reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    BIT_AND         reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    EQUALS_OP       reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    NOT_EQUALS_OP   reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    COMPARE_OP      reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    GREATER_OP      reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    LESS_OP         reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    GREATER_EQUAL_OP reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    LESS_EQUAL_OP   reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    BIT_RIGHT_SHIFT reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    BIT_LEFT_SHIFT  reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    PLUS_OP         reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    MINUS_OP        reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    CONCATENATE     reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    MULTIPLICATION_OP reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    DIVISION_OP     reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    MODULUS_OP      reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    REP_OP          reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    SEARCH_MODIFY   reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    SEARCH_MODIFY_NEG reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    EXPONENT_OP     reduce using rule 65 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)


state 164

    (66) variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .

    COMMA           reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    ADV_ASSIGNMENT_OP reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    ASSIGNMENT_OP   reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    CLOSE_PARANTHESIS reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    SEMICOLON       reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    BLOCK_BEGIN     reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    INCREMENT_OP    reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    DECREMENT_OP    reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    OR_STR_OP       reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    XOR_STR_OP      reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    AND_STR_OP      reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    NOT_STR_OP      reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    ASSOCIATE_OP    reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    RANGE_OP        reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    OR_OP           reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    AND_OP          reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    BIT_OR          reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    BIT_XOR         reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    BIT_AND         reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    EQUALS_OP       reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    NOT_EQUALS_OP   reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    COMPARE_OP      reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    GREATER_OP      reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    LESS_OP         reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    GREATER_EQUAL_OP reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    LESS_EQUAL_OP   reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    BIT_RIGHT_SHIFT reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    BIT_LEFT_SHIFT  reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    PLUS_OP         reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    MINUS_OP        reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    CONCATENATE     reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    MULTIPLICATION_OP reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    DIVISION_OP     reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    MODULUS_OP      reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    REP_OP          reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    SEARCH_MODIFY   reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    SEARCH_MODIFY_NEG reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    EXPONENT_OP     reduce using rule 66 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)


state 165

    (64) variable -> VARIABLE empty empty empty .

    COMMA           reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    ADV_ASSIGNMENT_OP reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    ASSIGNMENT_OP   reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    CLOSE_PARANTHESIS reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    SEMICOLON       reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    BLOCK_BEGIN     reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    INCREMENT_OP    reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    DECREMENT_OP    reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    OR_STR_OP       reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    XOR_STR_OP      reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    AND_STR_OP      reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    NOT_STR_OP      reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    ASSOCIATE_OP    reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    RANGE_OP        reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    OR_OP           reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    AND_OP          reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    BIT_OR          reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    BIT_XOR         reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    BIT_AND         reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    EQUALS_OP       reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    NOT_EQUALS_OP   reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    COMPARE_OP      reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    GREATER_OP      reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    LESS_OP         reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    GREATER_EQUAL_OP reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    LESS_EQUAL_OP   reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    BIT_RIGHT_SHIFT reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    BIT_LEFT_SHIFT  reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    PLUS_OP         reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    MINUS_OP        reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    CONCATENATE     reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    MULTIPLICATION_OP reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    DIVISION_OP     reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    MODULUS_OP      reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    REP_OP          reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    SEARCH_MODIFY   reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    SEARCH_MODIFY_NEG reduce using rule 64 (variable -> VARIABLE empty empty empty .)
    EXPONENT_OP     reduce using rule 64 (variable -> VARIABLE empty empty empty .)


state 166

    (55) whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS . block
    (3) block -> . BLOCK_BEGIN statements BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 7

    block                          shift and go to state 224

state 167

    (32) printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 225


state 168

    (33) printStatement -> PRINT empty string1 empty . SEMICOLON

    SEMICOLON       shift and go to state 226


state 169

    (34) printStatement -> PRINT empty expression empty . SEMICOLON

    SEMICOLON       shift and go to state 227


state 170

    (71) term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .

    INCREMENT_OP    reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    DECREMENT_OP    reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    OR_STR_OP       reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    XOR_STR_OP      reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    AND_STR_OP      reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    NOT_STR_OP      reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    COMMA           reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    ASSOCIATE_OP    reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    ADV_ASSIGNMENT_OP reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    ASSIGNMENT_OP   reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    RANGE_OP        reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    OR_OP           reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    AND_OP          reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    BIT_OR          reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    BIT_XOR         reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    BIT_AND         reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    EQUALS_OP       reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    NOT_EQUALS_OP   reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    COMPARE_OP      reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    GREATER_OP      reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    LESS_OP         reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    GREATER_EQUAL_OP reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    LESS_EQUAL_OP   reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    BIT_RIGHT_SHIFT reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    BIT_LEFT_SHIFT  reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    PLUS_OP         reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    MINUS_OP        reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    CONCATENATE     reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    MULTIPLICATION_OP reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    DIVISION_OP     reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    MODULUS_OP      reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    REP_OP          reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    SEARCH_MODIFY   reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    SEARCH_MODIFY_NEG reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    EXPONENT_OP     reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    SEMICOLON       reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    CLOSE_PARANTHESIS reduce using rule 71 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)


state 171

    (70) term -> empty string empty .

    INCREMENT_OP    reduce using rule 70 (term -> empty string empty .)
    DECREMENT_OP    reduce using rule 70 (term -> empty string empty .)
    OR_STR_OP       reduce using rule 70 (term -> empty string empty .)
    XOR_STR_OP      reduce using rule 70 (term -> empty string empty .)
    AND_STR_OP      reduce using rule 70 (term -> empty string empty .)
    NOT_STR_OP      reduce using rule 70 (term -> empty string empty .)
    COMMA           reduce using rule 70 (term -> empty string empty .)
    ASSOCIATE_OP    reduce using rule 70 (term -> empty string empty .)
    ADV_ASSIGNMENT_OP reduce using rule 70 (term -> empty string empty .)
    ASSIGNMENT_OP   reduce using rule 70 (term -> empty string empty .)
    RANGE_OP        reduce using rule 70 (term -> empty string empty .)
    OR_OP           reduce using rule 70 (term -> empty string empty .)
    AND_OP          reduce using rule 70 (term -> empty string empty .)
    BIT_OR          reduce using rule 70 (term -> empty string empty .)
    BIT_XOR         reduce using rule 70 (term -> empty string empty .)
    BIT_AND         reduce using rule 70 (term -> empty string empty .)
    EQUALS_OP       reduce using rule 70 (term -> empty string empty .)
    NOT_EQUALS_OP   reduce using rule 70 (term -> empty string empty .)
    COMPARE_OP      reduce using rule 70 (term -> empty string empty .)
    GREATER_OP      reduce using rule 70 (term -> empty string empty .)
    LESS_OP         reduce using rule 70 (term -> empty string empty .)
    GREATER_EQUAL_OP reduce using rule 70 (term -> empty string empty .)
    LESS_EQUAL_OP   reduce using rule 70 (term -> empty string empty .)
    BIT_RIGHT_SHIFT reduce using rule 70 (term -> empty string empty .)
    BIT_LEFT_SHIFT  reduce using rule 70 (term -> empty string empty .)
    PLUS_OP         reduce using rule 70 (term -> empty string empty .)
    MINUS_OP        reduce using rule 70 (term -> empty string empty .)
    CONCATENATE     reduce using rule 70 (term -> empty string empty .)
    MULTIPLICATION_OP reduce using rule 70 (term -> empty string empty .)
    DIVISION_OP     reduce using rule 70 (term -> empty string empty .)
    MODULUS_OP      reduce using rule 70 (term -> empty string empty .)
    REP_OP          reduce using rule 70 (term -> empty string empty .)
    SEARCH_MODIFY   reduce using rule 70 (term -> empty string empty .)
    SEARCH_MODIFY_NEG reduce using rule 70 (term -> empty string empty .)
    EXPONENT_OP     reduce using rule 70 (term -> empty string empty .)
    SEMICOLON       reduce using rule 70 (term -> empty string empty .)
    CLOSE_PARANTHESIS reduce using rule 70 (term -> empty string empty .)


state 172

    (67) term -> empty number empty .

    INCREMENT_OP    reduce using rule 67 (term -> empty number empty .)
    DECREMENT_OP    reduce using rule 67 (term -> empty number empty .)
    OR_STR_OP       reduce using rule 67 (term -> empty number empty .)
    XOR_STR_OP      reduce using rule 67 (term -> empty number empty .)
    AND_STR_OP      reduce using rule 67 (term -> empty number empty .)
    NOT_STR_OP      reduce using rule 67 (term -> empty number empty .)
    COMMA           reduce using rule 67 (term -> empty number empty .)
    ASSOCIATE_OP    reduce using rule 67 (term -> empty number empty .)
    ADV_ASSIGNMENT_OP reduce using rule 67 (term -> empty number empty .)
    ASSIGNMENT_OP   reduce using rule 67 (term -> empty number empty .)
    RANGE_OP        reduce using rule 67 (term -> empty number empty .)
    OR_OP           reduce using rule 67 (term -> empty number empty .)
    AND_OP          reduce using rule 67 (term -> empty number empty .)
    BIT_OR          reduce using rule 67 (term -> empty number empty .)
    BIT_XOR         reduce using rule 67 (term -> empty number empty .)
    BIT_AND         reduce using rule 67 (term -> empty number empty .)
    EQUALS_OP       reduce using rule 67 (term -> empty number empty .)
    NOT_EQUALS_OP   reduce using rule 67 (term -> empty number empty .)
    COMPARE_OP      reduce using rule 67 (term -> empty number empty .)
    GREATER_OP      reduce using rule 67 (term -> empty number empty .)
    LESS_OP         reduce using rule 67 (term -> empty number empty .)
    GREATER_EQUAL_OP reduce using rule 67 (term -> empty number empty .)
    LESS_EQUAL_OP   reduce using rule 67 (term -> empty number empty .)
    BIT_RIGHT_SHIFT reduce using rule 67 (term -> empty number empty .)
    BIT_LEFT_SHIFT  reduce using rule 67 (term -> empty number empty .)
    PLUS_OP         reduce using rule 67 (term -> empty number empty .)
    MINUS_OP        reduce using rule 67 (term -> empty number empty .)
    CONCATENATE     reduce using rule 67 (term -> empty number empty .)
    MULTIPLICATION_OP reduce using rule 67 (term -> empty number empty .)
    DIVISION_OP     reduce using rule 67 (term -> empty number empty .)
    MODULUS_OP      reduce using rule 67 (term -> empty number empty .)
    REP_OP          reduce using rule 67 (term -> empty number empty .)
    SEARCH_MODIFY   reduce using rule 67 (term -> empty number empty .)
    SEARCH_MODIFY_NEG reduce using rule 67 (term -> empty number empty .)
    EXPONENT_OP     reduce using rule 67 (term -> empty number empty .)
    SEMICOLON       reduce using rule 67 (term -> empty number empty .)
    CLOSE_PARANTHESIS reduce using rule 67 (term -> empty number empty .)


state 173

    (69) term -> empty variable empty .

    INCREMENT_OP    reduce using rule 69 (term -> empty variable empty .)
    DECREMENT_OP    reduce using rule 69 (term -> empty variable empty .)
    OR_STR_OP       reduce using rule 69 (term -> empty variable empty .)
    XOR_STR_OP      reduce using rule 69 (term -> empty variable empty .)
    AND_STR_OP      reduce using rule 69 (term -> empty variable empty .)
    NOT_STR_OP      reduce using rule 69 (term -> empty variable empty .)
    COMMA           reduce using rule 69 (term -> empty variable empty .)
    ASSOCIATE_OP    reduce using rule 69 (term -> empty variable empty .)
    ADV_ASSIGNMENT_OP reduce using rule 69 (term -> empty variable empty .)
    ASSIGNMENT_OP   reduce using rule 69 (term -> empty variable empty .)
    RANGE_OP        reduce using rule 69 (term -> empty variable empty .)
    OR_OP           reduce using rule 69 (term -> empty variable empty .)
    AND_OP          reduce using rule 69 (term -> empty variable empty .)
    BIT_OR          reduce using rule 69 (term -> empty variable empty .)
    BIT_XOR         reduce using rule 69 (term -> empty variable empty .)
    BIT_AND         reduce using rule 69 (term -> empty variable empty .)
    EQUALS_OP       reduce using rule 69 (term -> empty variable empty .)
    NOT_EQUALS_OP   reduce using rule 69 (term -> empty variable empty .)
    COMPARE_OP      reduce using rule 69 (term -> empty variable empty .)
    GREATER_OP      reduce using rule 69 (term -> empty variable empty .)
    LESS_OP         reduce using rule 69 (term -> empty variable empty .)
    GREATER_EQUAL_OP reduce using rule 69 (term -> empty variable empty .)
    LESS_EQUAL_OP   reduce using rule 69 (term -> empty variable empty .)
    BIT_RIGHT_SHIFT reduce using rule 69 (term -> empty variable empty .)
    BIT_LEFT_SHIFT  reduce using rule 69 (term -> empty variable empty .)
    PLUS_OP         reduce using rule 69 (term -> empty variable empty .)
    MINUS_OP        reduce using rule 69 (term -> empty variable empty .)
    CONCATENATE     reduce using rule 69 (term -> empty variable empty .)
    MULTIPLICATION_OP reduce using rule 69 (term -> empty variable empty .)
    DIVISION_OP     reduce using rule 69 (term -> empty variable empty .)
    MODULUS_OP      reduce using rule 69 (term -> empty variable empty .)
    REP_OP          reduce using rule 69 (term -> empty variable empty .)
    SEARCH_MODIFY   reduce using rule 69 (term -> empty variable empty .)
    SEARCH_MODIFY_NEG reduce using rule 69 (term -> empty variable empty .)
    EXPONENT_OP     reduce using rule 69 (term -> empty variable empty .)
    SEMICOLON       reduce using rule 69 (term -> empty variable empty .)
    CLOSE_PARANTHESIS reduce using rule 69 (term -> empty variable empty .)


state 174

    (68) term -> empty type empty .

    INCREMENT_OP    reduce using rule 68 (term -> empty type empty .)
    DECREMENT_OP    reduce using rule 68 (term -> empty type empty .)
    OR_STR_OP       reduce using rule 68 (term -> empty type empty .)
    XOR_STR_OP      reduce using rule 68 (term -> empty type empty .)
    AND_STR_OP      reduce using rule 68 (term -> empty type empty .)
    NOT_STR_OP      reduce using rule 68 (term -> empty type empty .)
    COMMA           reduce using rule 68 (term -> empty type empty .)
    ASSOCIATE_OP    reduce using rule 68 (term -> empty type empty .)
    ADV_ASSIGNMENT_OP reduce using rule 68 (term -> empty type empty .)
    ASSIGNMENT_OP   reduce using rule 68 (term -> empty type empty .)
    RANGE_OP        reduce using rule 68 (term -> empty type empty .)
    OR_OP           reduce using rule 68 (term -> empty type empty .)
    AND_OP          reduce using rule 68 (term -> empty type empty .)
    BIT_OR          reduce using rule 68 (term -> empty type empty .)
    BIT_XOR         reduce using rule 68 (term -> empty type empty .)
    BIT_AND         reduce using rule 68 (term -> empty type empty .)
    EQUALS_OP       reduce using rule 68 (term -> empty type empty .)
    NOT_EQUALS_OP   reduce using rule 68 (term -> empty type empty .)
    COMPARE_OP      reduce using rule 68 (term -> empty type empty .)
    GREATER_OP      reduce using rule 68 (term -> empty type empty .)
    LESS_OP         reduce using rule 68 (term -> empty type empty .)
    GREATER_EQUAL_OP reduce using rule 68 (term -> empty type empty .)
    LESS_EQUAL_OP   reduce using rule 68 (term -> empty type empty .)
    BIT_RIGHT_SHIFT reduce using rule 68 (term -> empty type empty .)
    BIT_LEFT_SHIFT  reduce using rule 68 (term -> empty type empty .)
    PLUS_OP         reduce using rule 68 (term -> empty type empty .)
    MINUS_OP        reduce using rule 68 (term -> empty type empty .)
    CONCATENATE     reduce using rule 68 (term -> empty type empty .)
    MULTIPLICATION_OP reduce using rule 68 (term -> empty type empty .)
    DIVISION_OP     reduce using rule 68 (term -> empty type empty .)
    MODULUS_OP      reduce using rule 68 (term -> empty type empty .)
    REP_OP          reduce using rule 68 (term -> empty type empty .)
    SEARCH_MODIFY   reduce using rule 68 (term -> empty type empty .)
    SEARCH_MODIFY_NEG reduce using rule 68 (term -> empty type empty .)
    EXPONENT_OP     reduce using rule 68 (term -> empty type empty .)
    SEMICOLON       reduce using rule 68 (term -> empty type empty .)
    CLOSE_PARANTHESIS reduce using rule 68 (term -> empty type empty .)


state 175

    (115) expression -> expression SEARCH_MODIFY expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    XOR_STR_OP      reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    AND_STR_OP      reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    NOT_STR_OP      reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    COMMA           reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    ASSOCIATE_OP    reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    ADV_ASSIGNMENT_OP reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    ASSIGNMENT_OP   reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    RANGE_OP        reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    OR_OP           reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    AND_OP          reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    BIT_OR          reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    BIT_XOR         reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    BIT_AND         reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    EQUALS_OP       reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    NOT_EQUALS_OP   reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    COMPARE_OP      reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    GREATER_OP      reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    LESS_OP         reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    GREATER_EQUAL_OP reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    LESS_EQUAL_OP   reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    BIT_RIGHT_SHIFT reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    BIT_LEFT_SHIFT  reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    PLUS_OP         reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    MINUS_OP        reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    CONCATENATE     reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    MULTIPLICATION_OP reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    DIVISION_OP     reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    MODULUS_OP      reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    REP_OP          reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    SEARCH_MODIFY   reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    SEARCH_MODIFY_NEG reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    SEMICOLON       reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    CLOSE_PARANTHESIS reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .) ]
  ! DECREMENT_OP    [ reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .) ]
  ! EXPONENT_OP     [ reduce using rule 115 (expression -> expression SEARCH_MODIFY expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]
  ! MULTIPLICATION_OP [ shift and go to state 131 ]
  ! DIVISION_OP     [ shift and go to state 117 ]
  ! MODULUS_OP      [ shift and go to state 126 ]
  ! REP_OP          [ shift and go to state 137 ]
  ! SEARCH_MODIFY   [ shift and go to state 110 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 144 ]


state 176

    (105) expression -> expression LESS_EQUAL_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .)
    XOR_STR_OP      reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .)
    AND_STR_OP      reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .)
    NOT_STR_OP      reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .)
    COMMA           reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .)
    ASSOCIATE_OP    reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .)
    ASSIGNMENT_OP   reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .)
    RANGE_OP        reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .)
    OR_OP           reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .)
    AND_OP          reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .)
    BIT_OR          reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .)
    BIT_XOR         reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .)
    BIT_AND         reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .)
    EQUALS_OP       reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .)
    NOT_EQUALS_OP   reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .)
    COMPARE_OP      reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .)
    GREATER_OP      reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .)
    LESS_OP         reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .)
    GREATER_EQUAL_OP reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .)
    LESS_EQUAL_OP   reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .)
    SEMICOLON       reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! REP_OP          [ reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 105 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]


state 177

    (99) expression -> expression EQUALS_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 99 (expression -> expression EQUALS_OP expression .)
    XOR_STR_OP      reduce using rule 99 (expression -> expression EQUALS_OP expression .)
    AND_STR_OP      reduce using rule 99 (expression -> expression EQUALS_OP expression .)
    NOT_STR_OP      reduce using rule 99 (expression -> expression EQUALS_OP expression .)
    COMMA           reduce using rule 99 (expression -> expression EQUALS_OP expression .)
    ASSOCIATE_OP    reduce using rule 99 (expression -> expression EQUALS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 99 (expression -> expression EQUALS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 99 (expression -> expression EQUALS_OP expression .)
    RANGE_OP        reduce using rule 99 (expression -> expression EQUALS_OP expression .)
    OR_OP           reduce using rule 99 (expression -> expression EQUALS_OP expression .)
    AND_OP          reduce using rule 99 (expression -> expression EQUALS_OP expression .)
    BIT_OR          reduce using rule 99 (expression -> expression EQUALS_OP expression .)
    BIT_XOR         reduce using rule 99 (expression -> expression EQUALS_OP expression .)
    BIT_AND         reduce using rule 99 (expression -> expression EQUALS_OP expression .)
    EQUALS_OP       reduce using rule 99 (expression -> expression EQUALS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 99 (expression -> expression EQUALS_OP expression .)
    COMPARE_OP      reduce using rule 99 (expression -> expression EQUALS_OP expression .)
    SEMICOLON       reduce using rule 99 (expression -> expression EQUALS_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 99 (expression -> expression EQUALS_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 99 (expression -> expression EQUALS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 99 (expression -> expression EQUALS_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 99 (expression -> expression EQUALS_OP expression .) ]
  ! LESS_OP         [ reduce using rule 99 (expression -> expression EQUALS_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 99 (expression -> expression EQUALS_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 99 (expression -> expression EQUALS_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 99 (expression -> expression EQUALS_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 99 (expression -> expression EQUALS_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 99 (expression -> expression EQUALS_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 99 (expression -> expression EQUALS_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 99 (expression -> expression EQUALS_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 99 (expression -> expression EQUALS_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 99 (expression -> expression EQUALS_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 99 (expression -> expression EQUALS_OP expression .) ]
  ! REP_OP          [ reduce using rule 99 (expression -> expression EQUALS_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 99 (expression -> expression EQUALS_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 99 (expression -> expression EQUALS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 99 (expression -> expression EQUALS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]


state 178

    (101) expression -> expression COMPARE_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 101 (expression -> expression COMPARE_OP expression .)
    XOR_STR_OP      reduce using rule 101 (expression -> expression COMPARE_OP expression .)
    AND_STR_OP      reduce using rule 101 (expression -> expression COMPARE_OP expression .)
    NOT_STR_OP      reduce using rule 101 (expression -> expression COMPARE_OP expression .)
    COMMA           reduce using rule 101 (expression -> expression COMPARE_OP expression .)
    ASSOCIATE_OP    reduce using rule 101 (expression -> expression COMPARE_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 101 (expression -> expression COMPARE_OP expression .)
    ASSIGNMENT_OP   reduce using rule 101 (expression -> expression COMPARE_OP expression .)
    RANGE_OP        reduce using rule 101 (expression -> expression COMPARE_OP expression .)
    OR_OP           reduce using rule 101 (expression -> expression COMPARE_OP expression .)
    AND_OP          reduce using rule 101 (expression -> expression COMPARE_OP expression .)
    BIT_OR          reduce using rule 101 (expression -> expression COMPARE_OP expression .)
    BIT_XOR         reduce using rule 101 (expression -> expression COMPARE_OP expression .)
    BIT_AND         reduce using rule 101 (expression -> expression COMPARE_OP expression .)
    EQUALS_OP       reduce using rule 101 (expression -> expression COMPARE_OP expression .)
    NOT_EQUALS_OP   reduce using rule 101 (expression -> expression COMPARE_OP expression .)
    COMPARE_OP      reduce using rule 101 (expression -> expression COMPARE_OP expression .)
    SEMICOLON       reduce using rule 101 (expression -> expression COMPARE_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 101 (expression -> expression COMPARE_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 101 (expression -> expression COMPARE_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 101 (expression -> expression COMPARE_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 101 (expression -> expression COMPARE_OP expression .) ]
  ! LESS_OP         [ reduce using rule 101 (expression -> expression COMPARE_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 101 (expression -> expression COMPARE_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 101 (expression -> expression COMPARE_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 101 (expression -> expression COMPARE_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 101 (expression -> expression COMPARE_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 101 (expression -> expression COMPARE_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 101 (expression -> expression COMPARE_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 101 (expression -> expression COMPARE_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 101 (expression -> expression COMPARE_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 101 (expression -> expression COMPARE_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 101 (expression -> expression COMPARE_OP expression .) ]
  ! REP_OP          [ reduce using rule 101 (expression -> expression COMPARE_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 101 (expression -> expression COMPARE_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 101 (expression -> expression COMPARE_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 101 (expression -> expression COMPARE_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]


state 179

    (100) expression -> expression NOT_EQUALS_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .)
    XOR_STR_OP      reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .)
    AND_STR_OP      reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .)
    NOT_STR_OP      reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .)
    COMMA           reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .)
    ASSOCIATE_OP    reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .)
    RANGE_OP        reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .)
    OR_OP           reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .)
    AND_OP          reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .)
    BIT_OR          reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .)
    BIT_XOR         reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .)
    BIT_AND         reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .)
    EQUALS_OP       reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .)
    COMPARE_OP      reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .)
    SEMICOLON       reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! LESS_OP         [ reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! REP_OP          [ reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 100 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]


state 180

    (117) expression -> expression EXPONENT_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    XOR_STR_OP      reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    AND_STR_OP      reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    NOT_STR_OP      reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    COMMA           reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    ASSOCIATE_OP    reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    ASSIGNMENT_OP   reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    RANGE_OP        reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    OR_OP           reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    AND_OP          reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    BIT_OR          reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    BIT_XOR         reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    BIT_AND         reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    EQUALS_OP       reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    NOT_EQUALS_OP   reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    COMPARE_OP      reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    GREATER_OP      reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    LESS_OP         reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    GREATER_EQUAL_OP reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    LESS_EQUAL_OP   reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    PLUS_OP         reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    MINUS_OP        reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    CONCATENATE     reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    MULTIPLICATION_OP reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    DIVISION_OP     reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    MODULUS_OP      reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    REP_OP          reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    SEARCH_MODIFY   reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    SEARCH_MODIFY_NEG reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    SEMICOLON       reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 117 (expression -> expression EXPONENT_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 117 (expression -> expression EXPONENT_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 117 (expression -> expression EXPONENT_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 117 (expression -> expression EXPONENT_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]
  ! MULTIPLICATION_OP [ shift and go to state 131 ]
  ! DIVISION_OP     [ shift and go to state 117 ]
  ! MODULUS_OP      [ shift and go to state 126 ]
  ! REP_OP          [ shift and go to state 137 ]
  ! SEARCH_MODIFY   [ shift and go to state 110 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 144 ]


state 181

    (88) expression -> expression NOT_STR_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 88 (expression -> expression NOT_STR_OP expression .)
    XOR_STR_OP      reduce using rule 88 (expression -> expression NOT_STR_OP expression .)
    AND_STR_OP      reduce using rule 88 (expression -> expression NOT_STR_OP expression .)
    SEMICOLON       reduce using rule 88 (expression -> expression NOT_STR_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 88 (expression -> expression NOT_STR_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    NOT_STR_OP      shift and go to state 116
    COMMA           shift and go to state 125
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! NOT_STR_OP      [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! COMMA           [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! ASSOCIATE_OP    [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! RANGE_OP        [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! OR_OP           [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! AND_OP          [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! BIT_OR          [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! BIT_AND         [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! LESS_OP         [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! REP_OP          [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 88 (expression -> expression NOT_STR_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]


state 182

    (112) expression -> expression DIVISION_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    XOR_STR_OP      reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    AND_STR_OP      reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    NOT_STR_OP      reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    COMMA           reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    ASSOCIATE_OP    reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    ASSIGNMENT_OP   reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    RANGE_OP        reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    OR_OP           reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    AND_OP          reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    BIT_OR          reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    BIT_XOR         reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    BIT_AND         reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    EQUALS_OP       reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    NOT_EQUALS_OP   reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    COMPARE_OP      reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    GREATER_OP      reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    LESS_OP         reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    GREATER_EQUAL_OP reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    LESS_EQUAL_OP   reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    PLUS_OP         reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    MINUS_OP        reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    CONCATENATE     reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    MULTIPLICATION_OP reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    DIVISION_OP     reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    MODULUS_OP      reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    REP_OP          reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    SEMICOLON       reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 112 (expression -> expression DIVISION_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 112 (expression -> expression DIVISION_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 112 (expression -> expression DIVISION_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 112 (expression -> expression DIVISION_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 112 (expression -> expression DIVISION_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 112 (expression -> expression DIVISION_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]
  ! MULTIPLICATION_OP [ shift and go to state 131 ]
  ! DIVISION_OP     [ shift and go to state 117 ]
  ! MODULUS_OP      [ shift and go to state 126 ]
  ! REP_OP          [ shift and go to state 137 ]


state 183

    (93) expression -> expression RANGE_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 93 (expression -> expression RANGE_OP expression .)
    XOR_STR_OP      reduce using rule 93 (expression -> expression RANGE_OP expression .)
    AND_STR_OP      reduce using rule 93 (expression -> expression RANGE_OP expression .)
    NOT_STR_OP      reduce using rule 93 (expression -> expression RANGE_OP expression .)
    COMMA           reduce using rule 93 (expression -> expression RANGE_OP expression .)
    ASSOCIATE_OP    reduce using rule 93 (expression -> expression RANGE_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 93 (expression -> expression RANGE_OP expression .)
    ASSIGNMENT_OP   reduce using rule 93 (expression -> expression RANGE_OP expression .)
    RANGE_OP        reduce using rule 93 (expression -> expression RANGE_OP expression .)
    SEMICOLON       reduce using rule 93 (expression -> expression RANGE_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 93 (expression -> expression RANGE_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 93 (expression -> expression RANGE_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 93 (expression -> expression RANGE_OP expression .) ]
  ! OR_OP           [ reduce using rule 93 (expression -> expression RANGE_OP expression .) ]
  ! AND_OP          [ reduce using rule 93 (expression -> expression RANGE_OP expression .) ]
  ! BIT_OR          [ reduce using rule 93 (expression -> expression RANGE_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 93 (expression -> expression RANGE_OP expression .) ]
  ! BIT_AND         [ reduce using rule 93 (expression -> expression RANGE_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 93 (expression -> expression RANGE_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 93 (expression -> expression RANGE_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 93 (expression -> expression RANGE_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 93 (expression -> expression RANGE_OP expression .) ]
  ! LESS_OP         [ reduce using rule 93 (expression -> expression RANGE_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 93 (expression -> expression RANGE_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 93 (expression -> expression RANGE_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 93 (expression -> expression RANGE_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 93 (expression -> expression RANGE_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 93 (expression -> expression RANGE_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 93 (expression -> expression RANGE_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 93 (expression -> expression RANGE_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 93 (expression -> expression RANGE_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 93 (expression -> expression RANGE_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 93 (expression -> expression RANGE_OP expression .) ]
  ! REP_OP          [ reduce using rule 93 (expression -> expression RANGE_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 93 (expression -> expression RANGE_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 93 (expression -> expression RANGE_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 93 (expression -> expression RANGE_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]


state 184

    (97) expression -> expression BIT_XOR expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 97 (expression -> expression BIT_XOR expression .)
    XOR_STR_OP      reduce using rule 97 (expression -> expression BIT_XOR expression .)
    AND_STR_OP      reduce using rule 97 (expression -> expression BIT_XOR expression .)
    NOT_STR_OP      reduce using rule 97 (expression -> expression BIT_XOR expression .)
    COMMA           reduce using rule 97 (expression -> expression BIT_XOR expression .)
    ASSOCIATE_OP    reduce using rule 97 (expression -> expression BIT_XOR expression .)
    ADV_ASSIGNMENT_OP reduce using rule 97 (expression -> expression BIT_XOR expression .)
    ASSIGNMENT_OP   reduce using rule 97 (expression -> expression BIT_XOR expression .)
    RANGE_OP        reduce using rule 97 (expression -> expression BIT_XOR expression .)
    OR_OP           reduce using rule 97 (expression -> expression BIT_XOR expression .)
    AND_OP          reduce using rule 97 (expression -> expression BIT_XOR expression .)
    BIT_OR          reduce using rule 97 (expression -> expression BIT_XOR expression .)
    BIT_XOR         reduce using rule 97 (expression -> expression BIT_XOR expression .)
    SEMICOLON       reduce using rule 97 (expression -> expression BIT_XOR expression .)
    CLOSE_PARANTHESIS reduce using rule 97 (expression -> expression BIT_XOR expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 97 (expression -> expression BIT_XOR expression .) ]
  ! DECREMENT_OP    [ reduce using rule 97 (expression -> expression BIT_XOR expression .) ]
  ! BIT_AND         [ reduce using rule 97 (expression -> expression BIT_XOR expression .) ]
  ! EQUALS_OP       [ reduce using rule 97 (expression -> expression BIT_XOR expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 97 (expression -> expression BIT_XOR expression .) ]
  ! COMPARE_OP      [ reduce using rule 97 (expression -> expression BIT_XOR expression .) ]
  ! GREATER_OP      [ reduce using rule 97 (expression -> expression BIT_XOR expression .) ]
  ! LESS_OP         [ reduce using rule 97 (expression -> expression BIT_XOR expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 97 (expression -> expression BIT_XOR expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 97 (expression -> expression BIT_XOR expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 97 (expression -> expression BIT_XOR expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 97 (expression -> expression BIT_XOR expression .) ]
  ! PLUS_OP         [ reduce using rule 97 (expression -> expression BIT_XOR expression .) ]
  ! MINUS_OP        [ reduce using rule 97 (expression -> expression BIT_XOR expression .) ]
  ! CONCATENATE     [ reduce using rule 97 (expression -> expression BIT_XOR expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 97 (expression -> expression BIT_XOR expression .) ]
  ! DIVISION_OP     [ reduce using rule 97 (expression -> expression BIT_XOR expression .) ]
  ! MODULUS_OP      [ reduce using rule 97 (expression -> expression BIT_XOR expression .) ]
  ! REP_OP          [ reduce using rule 97 (expression -> expression BIT_XOR expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 97 (expression -> expression BIT_XOR expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 97 (expression -> expression BIT_XOR expression .) ]
  ! EXPONENT_OP     [ reduce using rule 97 (expression -> expression BIT_XOR expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]


state 185

    (109) expression -> expression MINUS_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 109 (expression -> expression MINUS_OP expression .)
    XOR_STR_OP      reduce using rule 109 (expression -> expression MINUS_OP expression .)
    AND_STR_OP      reduce using rule 109 (expression -> expression MINUS_OP expression .)
    NOT_STR_OP      reduce using rule 109 (expression -> expression MINUS_OP expression .)
    COMMA           reduce using rule 109 (expression -> expression MINUS_OP expression .)
    ASSOCIATE_OP    reduce using rule 109 (expression -> expression MINUS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 109 (expression -> expression MINUS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 109 (expression -> expression MINUS_OP expression .)
    RANGE_OP        reduce using rule 109 (expression -> expression MINUS_OP expression .)
    OR_OP           reduce using rule 109 (expression -> expression MINUS_OP expression .)
    AND_OP          reduce using rule 109 (expression -> expression MINUS_OP expression .)
    BIT_OR          reduce using rule 109 (expression -> expression MINUS_OP expression .)
    BIT_XOR         reduce using rule 109 (expression -> expression MINUS_OP expression .)
    BIT_AND         reduce using rule 109 (expression -> expression MINUS_OP expression .)
    EQUALS_OP       reduce using rule 109 (expression -> expression MINUS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 109 (expression -> expression MINUS_OP expression .)
    COMPARE_OP      reduce using rule 109 (expression -> expression MINUS_OP expression .)
    GREATER_OP      reduce using rule 109 (expression -> expression MINUS_OP expression .)
    LESS_OP         reduce using rule 109 (expression -> expression MINUS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 109 (expression -> expression MINUS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 109 (expression -> expression MINUS_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 109 (expression -> expression MINUS_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 109 (expression -> expression MINUS_OP expression .)
    PLUS_OP         reduce using rule 109 (expression -> expression MINUS_OP expression .)
    MINUS_OP        reduce using rule 109 (expression -> expression MINUS_OP expression .)
    CONCATENATE     reduce using rule 109 (expression -> expression MINUS_OP expression .)
    SEMICOLON       reduce using rule 109 (expression -> expression MINUS_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 109 (expression -> expression MINUS_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 109 (expression -> expression MINUS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 109 (expression -> expression MINUS_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 109 (expression -> expression MINUS_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 109 (expression -> expression MINUS_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 109 (expression -> expression MINUS_OP expression .) ]
  ! REP_OP          [ reduce using rule 109 (expression -> expression MINUS_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 109 (expression -> expression MINUS_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 109 (expression -> expression MINUS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 109 (expression -> expression MINUS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]


state 186

    (87) expression -> expression AND_STR_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 87 (expression -> expression AND_STR_OP expression .)
    XOR_STR_OP      reduce using rule 87 (expression -> expression AND_STR_OP expression .)
    AND_STR_OP      reduce using rule 87 (expression -> expression AND_STR_OP expression .)
    SEMICOLON       reduce using rule 87 (expression -> expression AND_STR_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 87 (expression -> expression AND_STR_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    NOT_STR_OP      shift and go to state 116
    COMMA           shift and go to state 125
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! NOT_STR_OP      [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! COMMA           [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! ASSOCIATE_OP    [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! RANGE_OP        [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! OR_OP           [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! AND_OP          [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! BIT_OR          [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! BIT_AND         [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! LESS_OP         [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! REP_OP          [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 87 (expression -> expression AND_STR_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]


state 187

    (94) expression -> expression OR_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 94 (expression -> expression OR_OP expression .)
    XOR_STR_OP      reduce using rule 94 (expression -> expression OR_OP expression .)
    AND_STR_OP      reduce using rule 94 (expression -> expression OR_OP expression .)
    NOT_STR_OP      reduce using rule 94 (expression -> expression OR_OP expression .)
    COMMA           reduce using rule 94 (expression -> expression OR_OP expression .)
    ASSOCIATE_OP    reduce using rule 94 (expression -> expression OR_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 94 (expression -> expression OR_OP expression .)
    ASSIGNMENT_OP   reduce using rule 94 (expression -> expression OR_OP expression .)
    RANGE_OP        reduce using rule 94 (expression -> expression OR_OP expression .)
    OR_OP           reduce using rule 94 (expression -> expression OR_OP expression .)
    SEMICOLON       reduce using rule 94 (expression -> expression OR_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 94 (expression -> expression OR_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 94 (expression -> expression OR_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 94 (expression -> expression OR_OP expression .) ]
  ! AND_OP          [ reduce using rule 94 (expression -> expression OR_OP expression .) ]
  ! BIT_OR          [ reduce using rule 94 (expression -> expression OR_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 94 (expression -> expression OR_OP expression .) ]
  ! BIT_AND         [ reduce using rule 94 (expression -> expression OR_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 94 (expression -> expression OR_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 94 (expression -> expression OR_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 94 (expression -> expression OR_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 94 (expression -> expression OR_OP expression .) ]
  ! LESS_OP         [ reduce using rule 94 (expression -> expression OR_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 94 (expression -> expression OR_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 94 (expression -> expression OR_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 94 (expression -> expression OR_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 94 (expression -> expression OR_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 94 (expression -> expression OR_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 94 (expression -> expression OR_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 94 (expression -> expression OR_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 94 (expression -> expression OR_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 94 (expression -> expression OR_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 94 (expression -> expression OR_OP expression .) ]
  ! REP_OP          [ reduce using rule 94 (expression -> expression OR_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 94 (expression -> expression OR_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 94 (expression -> expression OR_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 94 (expression -> expression OR_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]


state 188

    (103) expression -> expression LESS_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 103 (expression -> expression LESS_OP expression .)
    XOR_STR_OP      reduce using rule 103 (expression -> expression LESS_OP expression .)
    AND_STR_OP      reduce using rule 103 (expression -> expression LESS_OP expression .)
    NOT_STR_OP      reduce using rule 103 (expression -> expression LESS_OP expression .)
    COMMA           reduce using rule 103 (expression -> expression LESS_OP expression .)
    ASSOCIATE_OP    reduce using rule 103 (expression -> expression LESS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 103 (expression -> expression LESS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 103 (expression -> expression LESS_OP expression .)
    RANGE_OP        reduce using rule 103 (expression -> expression LESS_OP expression .)
    OR_OP           reduce using rule 103 (expression -> expression LESS_OP expression .)
    AND_OP          reduce using rule 103 (expression -> expression LESS_OP expression .)
    BIT_OR          reduce using rule 103 (expression -> expression LESS_OP expression .)
    BIT_XOR         reduce using rule 103 (expression -> expression LESS_OP expression .)
    BIT_AND         reduce using rule 103 (expression -> expression LESS_OP expression .)
    EQUALS_OP       reduce using rule 103 (expression -> expression LESS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 103 (expression -> expression LESS_OP expression .)
    COMPARE_OP      reduce using rule 103 (expression -> expression LESS_OP expression .)
    GREATER_OP      reduce using rule 103 (expression -> expression LESS_OP expression .)
    LESS_OP         reduce using rule 103 (expression -> expression LESS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 103 (expression -> expression LESS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 103 (expression -> expression LESS_OP expression .)
    SEMICOLON       reduce using rule 103 (expression -> expression LESS_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 103 (expression -> expression LESS_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 103 (expression -> expression LESS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 103 (expression -> expression LESS_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 103 (expression -> expression LESS_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 103 (expression -> expression LESS_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 103 (expression -> expression LESS_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 103 (expression -> expression LESS_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 103 (expression -> expression LESS_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 103 (expression -> expression LESS_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 103 (expression -> expression LESS_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 103 (expression -> expression LESS_OP expression .) ]
  ! REP_OP          [ reduce using rule 103 (expression -> expression LESS_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 103 (expression -> expression LESS_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 103 (expression -> expression LESS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 103 (expression -> expression LESS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]


state 189

    (89) expression -> expression COMMA expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 89 (expression -> expression COMMA expression .)
    XOR_STR_OP      reduce using rule 89 (expression -> expression COMMA expression .)
    AND_STR_OP      reduce using rule 89 (expression -> expression COMMA expression .)
    NOT_STR_OP      reduce using rule 89 (expression -> expression COMMA expression .)
    COMMA           reduce using rule 89 (expression -> expression COMMA expression .)
    ASSOCIATE_OP    reduce using rule 89 (expression -> expression COMMA expression .)
    SEMICOLON       reduce using rule 89 (expression -> expression COMMA expression .)
    CLOSE_PARANTHESIS reduce using rule 89 (expression -> expression COMMA expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! DECREMENT_OP    [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! RANGE_OP        [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! OR_OP           [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! AND_OP          [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! BIT_OR          [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! BIT_XOR         [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! BIT_AND         [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! EQUALS_OP       [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! COMPARE_OP      [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! GREATER_OP      [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! LESS_OP         [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! PLUS_OP         [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! MINUS_OP        [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! CONCATENATE     [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! DIVISION_OP     [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! MODULUS_OP      [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! REP_OP          [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! EXPONENT_OP     [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]


state 190

    (113) expression -> expression MODULUS_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    XOR_STR_OP      reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    AND_STR_OP      reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    NOT_STR_OP      reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    COMMA           reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    ASSOCIATE_OP    reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    RANGE_OP        reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    OR_OP           reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    AND_OP          reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    BIT_OR          reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    BIT_XOR         reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    BIT_AND         reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    EQUALS_OP       reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    COMPARE_OP      reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    GREATER_OP      reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    LESS_OP         reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    PLUS_OP         reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    MINUS_OP        reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    CONCATENATE     reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    MULTIPLICATION_OP reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    DIVISION_OP     reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    MODULUS_OP      reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    REP_OP          reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    SEMICOLON       reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 113 (expression -> expression MODULUS_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 113 (expression -> expression MODULUS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 113 (expression -> expression MODULUS_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 113 (expression -> expression MODULUS_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 113 (expression -> expression MODULUS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 113 (expression -> expression MODULUS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]
  ! MULTIPLICATION_OP [ shift and go to state 131 ]
  ! DIVISION_OP     [ shift and go to state 117 ]
  ! MODULUS_OP      [ shift and go to state 126 ]
  ! REP_OP          [ shift and go to state 137 ]


state 191

    (92) expression -> expression ASSIGNMENT_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .)
    XOR_STR_OP      reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .)
    AND_STR_OP      reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .)
    NOT_STR_OP      reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .)
    COMMA           reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .)
    ASSOCIATE_OP    reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .)
    SEMICOLON       reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! RANGE_OP        [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! OR_OP           [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! AND_OP          [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! BIT_OR          [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! BIT_AND         [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! LESS_OP         [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! REP_OP          [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 92 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]


state 192

    (104) expression -> expression GREATER_EQUAL_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .)
    XOR_STR_OP      reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .)
    AND_STR_OP      reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .)
    NOT_STR_OP      reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .)
    COMMA           reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .)
    ASSOCIATE_OP    reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .)
    ASSIGNMENT_OP   reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .)
    RANGE_OP        reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .)
    OR_OP           reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .)
    AND_OP          reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .)
    BIT_OR          reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .)
    BIT_XOR         reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .)
    BIT_AND         reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .)
    EQUALS_OP       reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .)
    NOT_EQUALS_OP   reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .)
    COMPARE_OP      reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .)
    GREATER_OP      reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .)
    LESS_OP         reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .)
    GREATER_EQUAL_OP reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .)
    LESS_EQUAL_OP   reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .)
    SEMICOLON       reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! REP_OP          [ reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 104 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]


state 193

    (86) expression -> expression XOR_STR_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 86 (expression -> expression XOR_STR_OP expression .)
    XOR_STR_OP      reduce using rule 86 (expression -> expression XOR_STR_OP expression .)
    SEMICOLON       reduce using rule 86 (expression -> expression XOR_STR_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 86 (expression -> expression XOR_STR_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    AND_STR_OP      shift and go to state 122
    NOT_STR_OP      shift and go to state 116
    COMMA           shift and go to state 125
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! AND_STR_OP      [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! NOT_STR_OP      [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! COMMA           [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! ASSOCIATE_OP    [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! RANGE_OP        [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! OR_OP           [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! AND_OP          [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! BIT_OR          [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! BIT_AND         [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! LESS_OP         [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! REP_OP          [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 86 (expression -> expression XOR_STR_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]


state 194

    (98) expression -> expression BIT_AND expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 98 (expression -> expression BIT_AND expression .)
    XOR_STR_OP      reduce using rule 98 (expression -> expression BIT_AND expression .)
    AND_STR_OP      reduce using rule 98 (expression -> expression BIT_AND expression .)
    NOT_STR_OP      reduce using rule 98 (expression -> expression BIT_AND expression .)
    COMMA           reduce using rule 98 (expression -> expression BIT_AND expression .)
    ASSOCIATE_OP    reduce using rule 98 (expression -> expression BIT_AND expression .)
    ADV_ASSIGNMENT_OP reduce using rule 98 (expression -> expression BIT_AND expression .)
    ASSIGNMENT_OP   reduce using rule 98 (expression -> expression BIT_AND expression .)
    RANGE_OP        reduce using rule 98 (expression -> expression BIT_AND expression .)
    OR_OP           reduce using rule 98 (expression -> expression BIT_AND expression .)
    AND_OP          reduce using rule 98 (expression -> expression BIT_AND expression .)
    BIT_OR          reduce using rule 98 (expression -> expression BIT_AND expression .)
    BIT_XOR         reduce using rule 98 (expression -> expression BIT_AND expression .)
    BIT_AND         reduce using rule 98 (expression -> expression BIT_AND expression .)
    SEMICOLON       reduce using rule 98 (expression -> expression BIT_AND expression .)
    CLOSE_PARANTHESIS reduce using rule 98 (expression -> expression BIT_AND expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 98 (expression -> expression BIT_AND expression .) ]
  ! DECREMENT_OP    [ reduce using rule 98 (expression -> expression BIT_AND expression .) ]
  ! EQUALS_OP       [ reduce using rule 98 (expression -> expression BIT_AND expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 98 (expression -> expression BIT_AND expression .) ]
  ! COMPARE_OP      [ reduce using rule 98 (expression -> expression BIT_AND expression .) ]
  ! GREATER_OP      [ reduce using rule 98 (expression -> expression BIT_AND expression .) ]
  ! LESS_OP         [ reduce using rule 98 (expression -> expression BIT_AND expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 98 (expression -> expression BIT_AND expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 98 (expression -> expression BIT_AND expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 98 (expression -> expression BIT_AND expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 98 (expression -> expression BIT_AND expression .) ]
  ! PLUS_OP         [ reduce using rule 98 (expression -> expression BIT_AND expression .) ]
  ! MINUS_OP        [ reduce using rule 98 (expression -> expression BIT_AND expression .) ]
  ! CONCATENATE     [ reduce using rule 98 (expression -> expression BIT_AND expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 98 (expression -> expression BIT_AND expression .) ]
  ! DIVISION_OP     [ reduce using rule 98 (expression -> expression BIT_AND expression .) ]
  ! MODULUS_OP      [ reduce using rule 98 (expression -> expression BIT_AND expression .) ]
  ! REP_OP          [ reduce using rule 98 (expression -> expression BIT_AND expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 98 (expression -> expression BIT_AND expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 98 (expression -> expression BIT_AND expression .) ]
  ! EXPONENT_OP     [ reduce using rule 98 (expression -> expression BIT_AND expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]


state 195

    (111) expression -> expression MULTIPLICATION_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    XOR_STR_OP      reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    AND_STR_OP      reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    NOT_STR_OP      reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    COMMA           reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    ASSOCIATE_OP    reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    ASSIGNMENT_OP   reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    RANGE_OP        reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    OR_OP           reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    AND_OP          reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    BIT_OR          reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    BIT_XOR         reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    BIT_AND         reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    EQUALS_OP       reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    NOT_EQUALS_OP   reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    COMPARE_OP      reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    GREATER_OP      reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    LESS_OP         reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    GREATER_EQUAL_OP reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    LESS_EQUAL_OP   reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    PLUS_OP         reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    MINUS_OP        reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    CONCATENATE     reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    MULTIPLICATION_OP reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    DIVISION_OP     reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    MODULUS_OP      reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    REP_OP          reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    SEMICOLON       reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 111 (expression -> expression MULTIPLICATION_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]
  ! MULTIPLICATION_OP [ shift and go to state 131 ]
  ! DIVISION_OP     [ shift and go to state 117 ]
  ! MODULUS_OP      [ shift and go to state 126 ]
  ! REP_OP          [ shift and go to state 137 ]


state 196

    (90) expression -> expression ASSOCIATE_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .)
    XOR_STR_OP      reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .)
    AND_STR_OP      reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .)
    NOT_STR_OP      reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .)
    COMMA           reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .)
    ASSOCIATE_OP    reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .)
    SEMICOLON       reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! RANGE_OP        [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! OR_OP           [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! AND_OP          [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! BIT_OR          [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! BIT_AND         [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! LESS_OP         [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! REP_OP          [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 90 (expression -> expression ASSOCIATE_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]


state 197

    (85) expression -> expression OR_STR_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 85 (expression -> expression OR_STR_OP expression .)
    XOR_STR_OP      reduce using rule 85 (expression -> expression OR_STR_OP expression .)
    SEMICOLON       reduce using rule 85 (expression -> expression OR_STR_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 85 (expression -> expression OR_STR_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    AND_STR_OP      shift and go to state 122
    NOT_STR_OP      shift and go to state 116
    COMMA           shift and go to state 125
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! AND_STR_OP      [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! NOT_STR_OP      [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! COMMA           [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! ASSOCIATE_OP    [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! RANGE_OP        [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! OR_OP           [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! AND_OP          [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! BIT_OR          [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! BIT_AND         [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! LESS_OP         [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! REP_OP          [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 85 (expression -> expression OR_STR_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]


state 198

    (95) expression -> expression AND_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 95 (expression -> expression AND_OP expression .)
    XOR_STR_OP      reduce using rule 95 (expression -> expression AND_OP expression .)
    AND_STR_OP      reduce using rule 95 (expression -> expression AND_OP expression .)
    NOT_STR_OP      reduce using rule 95 (expression -> expression AND_OP expression .)
    COMMA           reduce using rule 95 (expression -> expression AND_OP expression .)
    ASSOCIATE_OP    reduce using rule 95 (expression -> expression AND_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 95 (expression -> expression AND_OP expression .)
    ASSIGNMENT_OP   reduce using rule 95 (expression -> expression AND_OP expression .)
    RANGE_OP        reduce using rule 95 (expression -> expression AND_OP expression .)
    OR_OP           reduce using rule 95 (expression -> expression AND_OP expression .)
    AND_OP          reduce using rule 95 (expression -> expression AND_OP expression .)
    SEMICOLON       reduce using rule 95 (expression -> expression AND_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 95 (expression -> expression AND_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 95 (expression -> expression AND_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 95 (expression -> expression AND_OP expression .) ]
  ! BIT_OR          [ reduce using rule 95 (expression -> expression AND_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 95 (expression -> expression AND_OP expression .) ]
  ! BIT_AND         [ reduce using rule 95 (expression -> expression AND_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 95 (expression -> expression AND_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 95 (expression -> expression AND_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 95 (expression -> expression AND_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 95 (expression -> expression AND_OP expression .) ]
  ! LESS_OP         [ reduce using rule 95 (expression -> expression AND_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 95 (expression -> expression AND_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 95 (expression -> expression AND_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 95 (expression -> expression AND_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 95 (expression -> expression AND_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 95 (expression -> expression AND_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 95 (expression -> expression AND_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 95 (expression -> expression AND_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 95 (expression -> expression AND_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 95 (expression -> expression AND_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 95 (expression -> expression AND_OP expression .) ]
  ! REP_OP          [ reduce using rule 95 (expression -> expression AND_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 95 (expression -> expression AND_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 95 (expression -> expression AND_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 95 (expression -> expression AND_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]


state 199

    (107) expression -> expression BIT_LEFT_SHIFT expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .)
    XOR_STR_OP      reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .)
    AND_STR_OP      reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .)
    NOT_STR_OP      reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .)
    COMMA           reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .)
    ASSOCIATE_OP    reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .)
    ADV_ASSIGNMENT_OP reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .)
    ASSIGNMENT_OP   reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .)
    RANGE_OP        reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .)
    OR_OP           reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .)
    AND_OP          reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .)
    BIT_OR          reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .)
    BIT_XOR         reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .)
    BIT_AND         reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .)
    EQUALS_OP       reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .)
    NOT_EQUALS_OP   reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .)
    COMPARE_OP      reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .)
    GREATER_OP      reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .)
    LESS_OP         reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .)
    GREATER_EQUAL_OP reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .)
    LESS_EQUAL_OP   reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .)
    BIT_RIGHT_SHIFT reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .)
    BIT_LEFT_SHIFT  reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .)
    SEMICOLON       reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .)
    CLOSE_PARANTHESIS reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! DECREMENT_OP    [ reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! PLUS_OP         [ reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! MINUS_OP        [ reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! CONCATENATE     [ reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! DIVISION_OP     [ reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! MODULUS_OP      [ reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! REP_OP          [ reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! EXPONENT_OP     [ reduce using rule 107 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]


state 200

    (114) expression -> expression REP_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 114 (expression -> expression REP_OP expression .)
    XOR_STR_OP      reduce using rule 114 (expression -> expression REP_OP expression .)
    AND_STR_OP      reduce using rule 114 (expression -> expression REP_OP expression .)
    NOT_STR_OP      reduce using rule 114 (expression -> expression REP_OP expression .)
    COMMA           reduce using rule 114 (expression -> expression REP_OP expression .)
    ASSOCIATE_OP    reduce using rule 114 (expression -> expression REP_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 114 (expression -> expression REP_OP expression .)
    ASSIGNMENT_OP   reduce using rule 114 (expression -> expression REP_OP expression .)
    RANGE_OP        reduce using rule 114 (expression -> expression REP_OP expression .)
    OR_OP           reduce using rule 114 (expression -> expression REP_OP expression .)
    AND_OP          reduce using rule 114 (expression -> expression REP_OP expression .)
    BIT_OR          reduce using rule 114 (expression -> expression REP_OP expression .)
    BIT_XOR         reduce using rule 114 (expression -> expression REP_OP expression .)
    BIT_AND         reduce using rule 114 (expression -> expression REP_OP expression .)
    EQUALS_OP       reduce using rule 114 (expression -> expression REP_OP expression .)
    NOT_EQUALS_OP   reduce using rule 114 (expression -> expression REP_OP expression .)
    COMPARE_OP      reduce using rule 114 (expression -> expression REP_OP expression .)
    GREATER_OP      reduce using rule 114 (expression -> expression REP_OP expression .)
    LESS_OP         reduce using rule 114 (expression -> expression REP_OP expression .)
    GREATER_EQUAL_OP reduce using rule 114 (expression -> expression REP_OP expression .)
    LESS_EQUAL_OP   reduce using rule 114 (expression -> expression REP_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 114 (expression -> expression REP_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 114 (expression -> expression REP_OP expression .)
    PLUS_OP         reduce using rule 114 (expression -> expression REP_OP expression .)
    MINUS_OP        reduce using rule 114 (expression -> expression REP_OP expression .)
    CONCATENATE     reduce using rule 114 (expression -> expression REP_OP expression .)
    MULTIPLICATION_OP reduce using rule 114 (expression -> expression REP_OP expression .)
    DIVISION_OP     reduce using rule 114 (expression -> expression REP_OP expression .)
    MODULUS_OP      reduce using rule 114 (expression -> expression REP_OP expression .)
    REP_OP          reduce using rule 114 (expression -> expression REP_OP expression .)
    SEMICOLON       reduce using rule 114 (expression -> expression REP_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 114 (expression -> expression REP_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 114 (expression -> expression REP_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 114 (expression -> expression REP_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 114 (expression -> expression REP_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 114 (expression -> expression REP_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 114 (expression -> expression REP_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]
  ! MULTIPLICATION_OP [ shift and go to state 131 ]
  ! DIVISION_OP     [ shift and go to state 117 ]
  ! MODULUS_OP      [ shift and go to state 126 ]
  ! REP_OP          [ shift and go to state 137 ]


state 201

    (110) expression -> expression CONCATENATE expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 110 (expression -> expression CONCATENATE expression .)
    XOR_STR_OP      reduce using rule 110 (expression -> expression CONCATENATE expression .)
    AND_STR_OP      reduce using rule 110 (expression -> expression CONCATENATE expression .)
    NOT_STR_OP      reduce using rule 110 (expression -> expression CONCATENATE expression .)
    COMMA           reduce using rule 110 (expression -> expression CONCATENATE expression .)
    ASSOCIATE_OP    reduce using rule 110 (expression -> expression CONCATENATE expression .)
    ADV_ASSIGNMENT_OP reduce using rule 110 (expression -> expression CONCATENATE expression .)
    ASSIGNMENT_OP   reduce using rule 110 (expression -> expression CONCATENATE expression .)
    RANGE_OP        reduce using rule 110 (expression -> expression CONCATENATE expression .)
    OR_OP           reduce using rule 110 (expression -> expression CONCATENATE expression .)
    AND_OP          reduce using rule 110 (expression -> expression CONCATENATE expression .)
    BIT_OR          reduce using rule 110 (expression -> expression CONCATENATE expression .)
    BIT_XOR         reduce using rule 110 (expression -> expression CONCATENATE expression .)
    BIT_AND         reduce using rule 110 (expression -> expression CONCATENATE expression .)
    EQUALS_OP       reduce using rule 110 (expression -> expression CONCATENATE expression .)
    NOT_EQUALS_OP   reduce using rule 110 (expression -> expression CONCATENATE expression .)
    COMPARE_OP      reduce using rule 110 (expression -> expression CONCATENATE expression .)
    GREATER_OP      reduce using rule 110 (expression -> expression CONCATENATE expression .)
    LESS_OP         reduce using rule 110 (expression -> expression CONCATENATE expression .)
    GREATER_EQUAL_OP reduce using rule 110 (expression -> expression CONCATENATE expression .)
    LESS_EQUAL_OP   reduce using rule 110 (expression -> expression CONCATENATE expression .)
    BIT_RIGHT_SHIFT reduce using rule 110 (expression -> expression CONCATENATE expression .)
    BIT_LEFT_SHIFT  reduce using rule 110 (expression -> expression CONCATENATE expression .)
    PLUS_OP         reduce using rule 110 (expression -> expression CONCATENATE expression .)
    MINUS_OP        reduce using rule 110 (expression -> expression CONCATENATE expression .)
    CONCATENATE     reduce using rule 110 (expression -> expression CONCATENATE expression .)
    SEMICOLON       reduce using rule 110 (expression -> expression CONCATENATE expression .)
    CLOSE_PARANTHESIS reduce using rule 110 (expression -> expression CONCATENATE expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 110 (expression -> expression CONCATENATE expression .) ]
  ! DECREMENT_OP    [ reduce using rule 110 (expression -> expression CONCATENATE expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 110 (expression -> expression CONCATENATE expression .) ]
  ! DIVISION_OP     [ reduce using rule 110 (expression -> expression CONCATENATE expression .) ]
  ! MODULUS_OP      [ reduce using rule 110 (expression -> expression CONCATENATE expression .) ]
  ! REP_OP          [ reduce using rule 110 (expression -> expression CONCATENATE expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 110 (expression -> expression CONCATENATE expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 110 (expression -> expression CONCATENATE expression .) ]
  ! EXPONENT_OP     [ reduce using rule 110 (expression -> expression CONCATENATE expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]


state 202

    (106) expression -> expression BIT_RIGHT_SHIFT expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .)
    XOR_STR_OP      reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .)
    AND_STR_OP      reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .)
    NOT_STR_OP      reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .)
    COMMA           reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .)
    ASSOCIATE_OP    reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .)
    ADV_ASSIGNMENT_OP reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .)
    ASSIGNMENT_OP   reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .)
    RANGE_OP        reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .)
    OR_OP           reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .)
    AND_OP          reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .)
    BIT_OR          reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .)
    BIT_XOR         reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .)
    BIT_AND         reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .)
    EQUALS_OP       reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .)
    NOT_EQUALS_OP   reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .)
    COMPARE_OP      reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .)
    GREATER_OP      reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .)
    LESS_OP         reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .)
    GREATER_EQUAL_OP reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .)
    LESS_EQUAL_OP   reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .)
    BIT_RIGHT_SHIFT reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .)
    BIT_LEFT_SHIFT  reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .)
    SEMICOLON       reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .)
    CLOSE_PARANTHESIS reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! DECREMENT_OP    [ reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! PLUS_OP         [ reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! MINUS_OP        [ reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! CONCATENATE     [ reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! DIVISION_OP     [ reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! MODULUS_OP      [ reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! REP_OP          [ reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! EXPONENT_OP     [ reduce using rule 106 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]


state 203

    (91) expression -> expression ADV_ASSIGNMENT_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    XOR_STR_OP      reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    AND_STR_OP      reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    NOT_STR_OP      reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    COMMA           reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    ASSOCIATE_OP    reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    SEMICOLON       reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! RANGE_OP        [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! OR_OP           [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! AND_OP          [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! BIT_OR          [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! BIT_AND         [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! LESS_OP         [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! REP_OP          [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 91 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]


state 204

    (96) expression -> expression BIT_OR expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 96 (expression -> expression BIT_OR expression .)
    XOR_STR_OP      reduce using rule 96 (expression -> expression BIT_OR expression .)
    AND_STR_OP      reduce using rule 96 (expression -> expression BIT_OR expression .)
    NOT_STR_OP      reduce using rule 96 (expression -> expression BIT_OR expression .)
    COMMA           reduce using rule 96 (expression -> expression BIT_OR expression .)
    ASSOCIATE_OP    reduce using rule 96 (expression -> expression BIT_OR expression .)
    ADV_ASSIGNMENT_OP reduce using rule 96 (expression -> expression BIT_OR expression .)
    ASSIGNMENT_OP   reduce using rule 96 (expression -> expression BIT_OR expression .)
    RANGE_OP        reduce using rule 96 (expression -> expression BIT_OR expression .)
    OR_OP           reduce using rule 96 (expression -> expression BIT_OR expression .)
    AND_OP          reduce using rule 96 (expression -> expression BIT_OR expression .)
    BIT_OR          reduce using rule 96 (expression -> expression BIT_OR expression .)
    BIT_XOR         reduce using rule 96 (expression -> expression BIT_OR expression .)
    SEMICOLON       reduce using rule 96 (expression -> expression BIT_OR expression .)
    CLOSE_PARANTHESIS reduce using rule 96 (expression -> expression BIT_OR expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 96 (expression -> expression BIT_OR expression .) ]
  ! DECREMENT_OP    [ reduce using rule 96 (expression -> expression BIT_OR expression .) ]
  ! BIT_AND         [ reduce using rule 96 (expression -> expression BIT_OR expression .) ]
  ! EQUALS_OP       [ reduce using rule 96 (expression -> expression BIT_OR expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 96 (expression -> expression BIT_OR expression .) ]
  ! COMPARE_OP      [ reduce using rule 96 (expression -> expression BIT_OR expression .) ]
  ! GREATER_OP      [ reduce using rule 96 (expression -> expression BIT_OR expression .) ]
  ! LESS_OP         [ reduce using rule 96 (expression -> expression BIT_OR expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 96 (expression -> expression BIT_OR expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 96 (expression -> expression BIT_OR expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 96 (expression -> expression BIT_OR expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 96 (expression -> expression BIT_OR expression .) ]
  ! PLUS_OP         [ reduce using rule 96 (expression -> expression BIT_OR expression .) ]
  ! MINUS_OP        [ reduce using rule 96 (expression -> expression BIT_OR expression .) ]
  ! CONCATENATE     [ reduce using rule 96 (expression -> expression BIT_OR expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 96 (expression -> expression BIT_OR expression .) ]
  ! DIVISION_OP     [ reduce using rule 96 (expression -> expression BIT_OR expression .) ]
  ! MODULUS_OP      [ reduce using rule 96 (expression -> expression BIT_OR expression .) ]
  ! REP_OP          [ reduce using rule 96 (expression -> expression BIT_OR expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 96 (expression -> expression BIT_OR expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 96 (expression -> expression BIT_OR expression .) ]
  ! EXPONENT_OP     [ reduce using rule 96 (expression -> expression BIT_OR expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]


state 205

    (108) expression -> expression PLUS_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 108 (expression -> expression PLUS_OP expression .)
    XOR_STR_OP      reduce using rule 108 (expression -> expression PLUS_OP expression .)
    AND_STR_OP      reduce using rule 108 (expression -> expression PLUS_OP expression .)
    NOT_STR_OP      reduce using rule 108 (expression -> expression PLUS_OP expression .)
    COMMA           reduce using rule 108 (expression -> expression PLUS_OP expression .)
    ASSOCIATE_OP    reduce using rule 108 (expression -> expression PLUS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 108 (expression -> expression PLUS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 108 (expression -> expression PLUS_OP expression .)
    RANGE_OP        reduce using rule 108 (expression -> expression PLUS_OP expression .)
    OR_OP           reduce using rule 108 (expression -> expression PLUS_OP expression .)
    AND_OP          reduce using rule 108 (expression -> expression PLUS_OP expression .)
    BIT_OR          reduce using rule 108 (expression -> expression PLUS_OP expression .)
    BIT_XOR         reduce using rule 108 (expression -> expression PLUS_OP expression .)
    BIT_AND         reduce using rule 108 (expression -> expression PLUS_OP expression .)
    EQUALS_OP       reduce using rule 108 (expression -> expression PLUS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 108 (expression -> expression PLUS_OP expression .)
    COMPARE_OP      reduce using rule 108 (expression -> expression PLUS_OP expression .)
    GREATER_OP      reduce using rule 108 (expression -> expression PLUS_OP expression .)
    LESS_OP         reduce using rule 108 (expression -> expression PLUS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 108 (expression -> expression PLUS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 108 (expression -> expression PLUS_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 108 (expression -> expression PLUS_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 108 (expression -> expression PLUS_OP expression .)
    PLUS_OP         reduce using rule 108 (expression -> expression PLUS_OP expression .)
    MINUS_OP        reduce using rule 108 (expression -> expression PLUS_OP expression .)
    CONCATENATE     reduce using rule 108 (expression -> expression PLUS_OP expression .)
    SEMICOLON       reduce using rule 108 (expression -> expression PLUS_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 108 (expression -> expression PLUS_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 108 (expression -> expression PLUS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 108 (expression -> expression PLUS_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 108 (expression -> expression PLUS_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 108 (expression -> expression PLUS_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 108 (expression -> expression PLUS_OP expression .) ]
  ! REP_OP          [ reduce using rule 108 (expression -> expression PLUS_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 108 (expression -> expression PLUS_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 108 (expression -> expression PLUS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 108 (expression -> expression PLUS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]


state 206

    (116) expression -> expression SEARCH_MODIFY_NEG expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    XOR_STR_OP      reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    AND_STR_OP      reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    NOT_STR_OP      reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    COMMA           reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    ASSOCIATE_OP    reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    ADV_ASSIGNMENT_OP reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    ASSIGNMENT_OP   reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    RANGE_OP        reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    OR_OP           reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    AND_OP          reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    BIT_OR          reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    BIT_XOR         reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    BIT_AND         reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    EQUALS_OP       reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    NOT_EQUALS_OP   reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    COMPARE_OP      reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    GREATER_OP      reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    LESS_OP         reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    GREATER_EQUAL_OP reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    LESS_EQUAL_OP   reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    BIT_RIGHT_SHIFT reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    BIT_LEFT_SHIFT  reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    PLUS_OP         reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    MINUS_OP        reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    CONCATENATE     reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    MULTIPLICATION_OP reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    DIVISION_OP     reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    MODULUS_OP      reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    REP_OP          reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    SEARCH_MODIFY   reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    SEARCH_MODIFY_NEG reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    SEMICOLON       reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    CLOSE_PARANTHESIS reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .) ]
  ! DECREMENT_OP    [ reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .) ]
  ! EXPONENT_OP     [ reduce using rule 116 (expression -> expression SEARCH_MODIFY_NEG expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]
  ! MULTIPLICATION_OP [ shift and go to state 131 ]
  ! DIVISION_OP     [ shift and go to state 117 ]
  ! MODULUS_OP      [ shift and go to state 126 ]
  ! REP_OP          [ shift and go to state 137 ]
  ! SEARCH_MODIFY   [ shift and go to state 110 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 144 ]


state 207

    (102) expression -> expression GREATER_OP expression .
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 102 (expression -> expression GREATER_OP expression .)
    XOR_STR_OP      reduce using rule 102 (expression -> expression GREATER_OP expression .)
    AND_STR_OP      reduce using rule 102 (expression -> expression GREATER_OP expression .)
    NOT_STR_OP      reduce using rule 102 (expression -> expression GREATER_OP expression .)
    COMMA           reduce using rule 102 (expression -> expression GREATER_OP expression .)
    ASSOCIATE_OP    reduce using rule 102 (expression -> expression GREATER_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 102 (expression -> expression GREATER_OP expression .)
    ASSIGNMENT_OP   reduce using rule 102 (expression -> expression GREATER_OP expression .)
    RANGE_OP        reduce using rule 102 (expression -> expression GREATER_OP expression .)
    OR_OP           reduce using rule 102 (expression -> expression GREATER_OP expression .)
    AND_OP          reduce using rule 102 (expression -> expression GREATER_OP expression .)
    BIT_OR          reduce using rule 102 (expression -> expression GREATER_OP expression .)
    BIT_XOR         reduce using rule 102 (expression -> expression GREATER_OP expression .)
    BIT_AND         reduce using rule 102 (expression -> expression GREATER_OP expression .)
    EQUALS_OP       reduce using rule 102 (expression -> expression GREATER_OP expression .)
    NOT_EQUALS_OP   reduce using rule 102 (expression -> expression GREATER_OP expression .)
    COMPARE_OP      reduce using rule 102 (expression -> expression GREATER_OP expression .)
    GREATER_OP      reduce using rule 102 (expression -> expression GREATER_OP expression .)
    LESS_OP         reduce using rule 102 (expression -> expression GREATER_OP expression .)
    GREATER_EQUAL_OP reduce using rule 102 (expression -> expression GREATER_OP expression .)
    LESS_EQUAL_OP   reduce using rule 102 (expression -> expression GREATER_OP expression .)
    SEMICOLON       reduce using rule 102 (expression -> expression GREATER_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 102 (expression -> expression GREATER_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 102 (expression -> expression GREATER_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 102 (expression -> expression GREATER_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 102 (expression -> expression GREATER_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 102 (expression -> expression GREATER_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 102 (expression -> expression GREATER_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 102 (expression -> expression GREATER_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 102 (expression -> expression GREATER_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 102 (expression -> expression GREATER_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 102 (expression -> expression GREATER_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 102 (expression -> expression GREATER_OP expression .) ]
  ! REP_OP          [ reduce using rule 102 (expression -> expression GREATER_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 102 (expression -> expression GREATER_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 102 (expression -> expression GREATER_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 102 (expression -> expression GREATER_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]


state 208

    (23) switchStatement -> SWITCH empty lefthandside empty . BLOCK_BEGIN caselist BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 228


state 209

    (42) lefthandside -> PRIVATE OPEN_PARANTHESIS type decList . CLOSE_PARANTHESIS

    CLOSE_PARANTHESIS shift and go to state 229


state 210

    (41) lefthandside -> PRIVATE empty type decList .

    ADV_ASSIGNMENT_OP reduce using rule 41 (lefthandside -> PRIVATE empty type decList .)
    ASSIGNMENT_OP   reduce using rule 41 (lefthandside -> PRIVATE empty type decList .)
    COMMA           reduce using rule 41 (lefthandside -> PRIVATE empty type decList .)
    CLOSE_PARANTHESIS reduce using rule 41 (lefthandside -> PRIVATE empty type decList .)
    SEMICOLON       reduce using rule 41 (lefthandside -> PRIVATE empty type decList .)
    BLOCK_BEGIN     reduce using rule 41 (lefthandside -> PRIVATE empty type decList .)


state 211

    (54) parameters -> empty empty . empty
    (7) empty -> .

    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)

    empty                          shift and go to state 230

state 212

    (51) functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 231


state 213

    (52) parameters -> expression COMMA . parameters
    (89) expression -> expression COMMA . expression
    (52) parameters -> . expression COMMA parameters
    (53) parameters -> . expression empty empty
    (54) parameters -> . empty empty empty
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    parameters                     shift and go to state 232
    expression                     shift and go to state 233
    empty                          shift and go to state 150

state 214

    (53) parameters -> expression empty . empty
    (7) empty -> .

    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)

    empty                          shift and go to state 234

state 215

    (56) forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON . expression SEMICOLON expression CLOSE_PARANTHESIS block
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 235
    empty                          shift and go to state 54

state 216

    (38) assignment -> lefthandside assignmenttype expression SEMICOLON .

    RETURN          reduce using rule 38 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    IDENTIFIER      reduce using rule 38 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    WHILE           reduce using rule 38 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    FOR             reduce using rule 38 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    PRINT           reduce using rule 38 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    SUB             reduce using rule 38 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    LAST            reduce using rule 38 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    NEXT            reduce using rule 38 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    IF              reduce using rule 38 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    USE             reduce using rule 38 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    SWITCH          reduce using rule 38 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    PRIVATE         reduce using rule 38 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    LOCAL           reduce using rule 38 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 38 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    ARRAY           reduce using rule 38 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    HASH            reduce using rule 38 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    VARIABLE        reduce using rule 38 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    BLOCK_ENDS      reduce using rule 38 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    $end            reduce using rule 38 (assignment -> lefthandside assignmenttype expression SEMICOLON .)


state 217

    (48) declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .

    RETURN          reduce using rule 48 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    IDENTIFIER      reduce using rule 48 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    WHILE           reduce using rule 48 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    FOR             reduce using rule 48 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    PRINT           reduce using rule 48 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    SUB             reduce using rule 48 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    LAST            reduce using rule 48 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    NEXT            reduce using rule 48 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    IF              reduce using rule 48 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    USE             reduce using rule 48 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    SWITCH          reduce using rule 48 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    PRIVATE         reduce using rule 48 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    LOCAL           reduce using rule 48 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 48 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    ARRAY           reduce using rule 48 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    HASH            reduce using rule 48 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    VARIABLE        reduce using rule 48 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    $end            reduce using rule 48 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    BLOCK_ENDS      reduce using rule 48 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)


state 218

    (47) declaration -> lefthandside decList empty SEMICOLON .

    RETURN          reduce using rule 47 (declaration -> lefthandside decList empty SEMICOLON .)
    IDENTIFIER      reduce using rule 47 (declaration -> lefthandside decList empty SEMICOLON .)
    WHILE           reduce using rule 47 (declaration -> lefthandside decList empty SEMICOLON .)
    FOR             reduce using rule 47 (declaration -> lefthandside decList empty SEMICOLON .)
    PRINT           reduce using rule 47 (declaration -> lefthandside decList empty SEMICOLON .)
    SUB             reduce using rule 47 (declaration -> lefthandside decList empty SEMICOLON .)
    LAST            reduce using rule 47 (declaration -> lefthandside decList empty SEMICOLON .)
    NEXT            reduce using rule 47 (declaration -> lefthandside decList empty SEMICOLON .)
    IF              reduce using rule 47 (declaration -> lefthandside decList empty SEMICOLON .)
    USE             reduce using rule 47 (declaration -> lefthandside decList empty SEMICOLON .)
    SWITCH          reduce using rule 47 (declaration -> lefthandside decList empty SEMICOLON .)
    PRIVATE         reduce using rule 47 (declaration -> lefthandside decList empty SEMICOLON .)
    LOCAL           reduce using rule 47 (declaration -> lefthandside decList empty SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 47 (declaration -> lefthandside decList empty SEMICOLON .)
    ARRAY           reduce using rule 47 (declaration -> lefthandside decList empty SEMICOLON .)
    HASH            reduce using rule 47 (declaration -> lefthandside decList empty SEMICOLON .)
    VARIABLE        reduce using rule 47 (declaration -> lefthandside decList empty SEMICOLON .)
    $end            reduce using rule 47 (declaration -> lefthandside decList empty SEMICOLON .)
    BLOCK_ENDS      reduce using rule 47 (declaration -> lefthandside decList empty SEMICOLON .)


state 219

    (49) decList -> COMMA type decList .

    ADV_ASSIGNMENT_OP reduce using rule 49 (decList -> COMMA type decList .)
    ASSIGNMENT_OP   reduce using rule 49 (decList -> COMMA type decList .)
    COMMA           reduce using rule 49 (decList -> COMMA type decList .)
    CLOSE_PARANTHESIS reduce using rule 49 (decList -> COMMA type decList .)
    SEMICOLON       reduce using rule 49 (decList -> COMMA type decList .)
    BLOCK_BEGIN     reduce using rule 49 (decList -> COMMA type decList .)


state 220

    (50) decList -> empty empty empty .

    ADV_ASSIGNMENT_OP reduce using rule 50 (decList -> empty empty empty .)
    ASSIGNMENT_OP   reduce using rule 50 (decList -> empty empty empty .)
    COMMA           reduce using rule 50 (decList -> empty empty empty .)
    CLOSE_PARANTHESIS reduce using rule 50 (decList -> empty empty empty .)
    SEMICOLON       reduce using rule 50 (decList -> empty empty empty .)
    BLOCK_BEGIN     reduce using rule 50 (decList -> empty empty empty .)


state 221

    (44) lefthandside -> LOCAL OPEN_PARANTHESIS type decList . CLOSE_PARANTHESIS

    CLOSE_PARANTHESIS shift and go to state 236


state 222

    (43) lefthandside -> LOCAL empty type decList .

    ADV_ASSIGNMENT_OP reduce using rule 43 (lefthandside -> LOCAL empty type decList .)
    ASSIGNMENT_OP   reduce using rule 43 (lefthandside -> LOCAL empty type decList .)
    COMMA           reduce using rule 43 (lefthandside -> LOCAL empty type decList .)
    CLOSE_PARANTHESIS reduce using rule 43 (lefthandside -> LOCAL empty type decList .)
    SEMICOLON       reduce using rule 43 (lefthandside -> LOCAL empty type decList .)
    BLOCK_BEGIN     reduce using rule 43 (lefthandside -> LOCAL empty type decList .)


state 223

    (27) ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS . block
    (28) ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS . block ELSE block
    (3) block -> . BLOCK_BEGIN statements BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 7

    block                          shift and go to state 237

state 224

    (55) whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .

    RETURN          reduce using rule 55 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    IDENTIFIER      reduce using rule 55 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    WHILE           reduce using rule 55 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    FOR             reduce using rule 55 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    PRINT           reduce using rule 55 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    SUB             reduce using rule 55 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    LAST            reduce using rule 55 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    NEXT            reduce using rule 55 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    IF              reduce using rule 55 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    USE             reduce using rule 55 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    SWITCH          reduce using rule 55 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    PRIVATE         reduce using rule 55 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    LOCAL           reduce using rule 55 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    OPEN_PARANTHESIS reduce using rule 55 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    ARRAY           reduce using rule 55 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    HASH            reduce using rule 55 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    VARIABLE        reduce using rule 55 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    $end            reduce using rule 55 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    BLOCK_ENDS      reduce using rule 55 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)


state 225

    (32) printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .

    RETURN          reduce using rule 32 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    IDENTIFIER      reduce using rule 32 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    WHILE           reduce using rule 32 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    FOR             reduce using rule 32 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    PRINT           reduce using rule 32 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    SUB             reduce using rule 32 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    LAST            reduce using rule 32 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    NEXT            reduce using rule 32 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    IF              reduce using rule 32 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    USE             reduce using rule 32 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    SWITCH          reduce using rule 32 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    PRIVATE         reduce using rule 32 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    LOCAL           reduce using rule 32 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 32 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    ARRAY           reduce using rule 32 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    HASH            reduce using rule 32 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    VARIABLE        reduce using rule 32 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    $end            reduce using rule 32 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    BLOCK_ENDS      reduce using rule 32 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)


state 226

    (33) printStatement -> PRINT empty string1 empty SEMICOLON .

    RETURN          reduce using rule 33 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    IDENTIFIER      reduce using rule 33 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    WHILE           reduce using rule 33 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    FOR             reduce using rule 33 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    PRINT           reduce using rule 33 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    SUB             reduce using rule 33 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    LAST            reduce using rule 33 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    NEXT            reduce using rule 33 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    IF              reduce using rule 33 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    USE             reduce using rule 33 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    SWITCH          reduce using rule 33 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    PRIVATE         reduce using rule 33 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    LOCAL           reduce using rule 33 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 33 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    ARRAY           reduce using rule 33 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    HASH            reduce using rule 33 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    VARIABLE        reduce using rule 33 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    $end            reduce using rule 33 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    BLOCK_ENDS      reduce using rule 33 (printStatement -> PRINT empty string1 empty SEMICOLON .)


state 227

    (34) printStatement -> PRINT empty expression empty SEMICOLON .

    RETURN          reduce using rule 34 (printStatement -> PRINT empty expression empty SEMICOLON .)
    IDENTIFIER      reduce using rule 34 (printStatement -> PRINT empty expression empty SEMICOLON .)
    WHILE           reduce using rule 34 (printStatement -> PRINT empty expression empty SEMICOLON .)
    FOR             reduce using rule 34 (printStatement -> PRINT empty expression empty SEMICOLON .)
    PRINT           reduce using rule 34 (printStatement -> PRINT empty expression empty SEMICOLON .)
    SUB             reduce using rule 34 (printStatement -> PRINT empty expression empty SEMICOLON .)
    LAST            reduce using rule 34 (printStatement -> PRINT empty expression empty SEMICOLON .)
    NEXT            reduce using rule 34 (printStatement -> PRINT empty expression empty SEMICOLON .)
    IF              reduce using rule 34 (printStatement -> PRINT empty expression empty SEMICOLON .)
    USE             reduce using rule 34 (printStatement -> PRINT empty expression empty SEMICOLON .)
    SWITCH          reduce using rule 34 (printStatement -> PRINT empty expression empty SEMICOLON .)
    PRIVATE         reduce using rule 34 (printStatement -> PRINT empty expression empty SEMICOLON .)
    LOCAL           reduce using rule 34 (printStatement -> PRINT empty expression empty SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 34 (printStatement -> PRINT empty expression empty SEMICOLON .)
    ARRAY           reduce using rule 34 (printStatement -> PRINT empty expression empty SEMICOLON .)
    HASH            reduce using rule 34 (printStatement -> PRINT empty expression empty SEMICOLON .)
    VARIABLE        reduce using rule 34 (printStatement -> PRINT empty expression empty SEMICOLON .)
    $end            reduce using rule 34 (printStatement -> PRINT empty expression empty SEMICOLON .)
    BLOCK_ENDS      reduce using rule 34 (printStatement -> PRINT empty expression empty SEMICOLON .)


state 228

    (23) switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN . caselist BLOCK_ENDS
    (24) caselist -> . CASE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block caselist
    (25) caselist -> . ELSE empty empty empty block empty
    (26) caselist -> . empty empty empty empty empty empty
    (7) empty -> .

    CASE            shift and go to state 238
    ELSE            shift and go to state 240
    BLOCK_ENDS      reduce using rule 7 (empty -> .)

    caselist                       shift and go to state 239
    empty                          shift and go to state 241

state 229

    (42) lefthandside -> PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .

    ADV_ASSIGNMENT_OP reduce using rule 42 (lefthandside -> PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    ASSIGNMENT_OP   reduce using rule 42 (lefthandside -> PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    COMMA           reduce using rule 42 (lefthandside -> PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    CLOSE_PARANTHESIS reduce using rule 42 (lefthandside -> PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    SEMICOLON       reduce using rule 42 (lefthandside -> PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    BLOCK_BEGIN     reduce using rule 42 (lefthandside -> PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)


state 230

    (54) parameters -> empty empty empty .

    CLOSE_PARANTHESIS reduce using rule 54 (parameters -> empty empty empty .)


state 231

    (51) functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .

    RETURN          reduce using rule 51 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    IDENTIFIER      reduce using rule 51 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    WHILE           reduce using rule 51 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    FOR             reduce using rule 51 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    PRINT           reduce using rule 51 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    SUB             reduce using rule 51 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    LAST            reduce using rule 51 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    NEXT            reduce using rule 51 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    IF              reduce using rule 51 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    USE             reduce using rule 51 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    SWITCH          reduce using rule 51 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    PRIVATE         reduce using rule 51 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    LOCAL           reduce using rule 51 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 51 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    ARRAY           reduce using rule 51 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    HASH            reduce using rule 51 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    VARIABLE        reduce using rule 51 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    BLOCK_ENDS      reduce using rule 51 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    $end            reduce using rule 51 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)


state 232

    (52) parameters -> expression COMMA parameters .

    CLOSE_PARANTHESIS reduce using rule 52 (parameters -> expression COMMA parameters .)


state 233

    (89) expression -> expression COMMA expression .
    (52) parameters -> expression . COMMA parameters
    (53) parameters -> expression . empty empty
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression
    (7) empty -> .

  ! reduce/reduce conflict for CLOSE_PARANTHESIS resolved using rule 7 (empty -> .)
    COMMA           reduce using rule 89 (expression -> expression COMMA expression .)
    OR_STR_OP       reduce using rule 89 (expression -> expression COMMA expression .)
    XOR_STR_OP      reduce using rule 89 (expression -> expression COMMA expression .)
    AND_STR_OP      reduce using rule 89 (expression -> expression COMMA expression .)
    NOT_STR_OP      reduce using rule 89 (expression -> expression COMMA expression .)
    ASSOCIATE_OP    reduce using rule 89 (expression -> expression COMMA expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)

  ! INCREMENT_OP    [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! DECREMENT_OP    [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! RANGE_OP        [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! OR_OP           [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! AND_OP          [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! BIT_OR          [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! BIT_XOR         [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! BIT_AND         [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! EQUALS_OP       [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! COMPARE_OP      [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! GREATER_OP      [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! LESS_OP         [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! PLUS_OP         [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! MINUS_OP        [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! CONCATENATE     [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! DIVISION_OP     [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! MODULUS_OP      [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! REP_OP          [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! EXPONENT_OP     [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! CLOSE_PARANTHESIS [ reduce using rule 89 (expression -> expression COMMA expression .) ]
  ! COMMA           [ shift and go to state 213 ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]

    empty                          shift and go to state 214

state 234

    (53) parameters -> expression empty empty .

    CLOSE_PARANTHESIS reduce using rule 53 (parameters -> expression empty empty .)


state 235

    (56) forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression . SEMICOLON expression CLOSE_PARANTHESIS block
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    SEMICOLON       shift and go to state 242
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    OR_STR_OP       shift and go to state 134
    XOR_STR_OP      shift and go to state 129
    AND_STR_OP      shift and go to state 122
    NOT_STR_OP      shift and go to state 116
    COMMA           shift and go to state 125
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115


state 236

    (44) lefthandside -> LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .

    ADV_ASSIGNMENT_OP reduce using rule 44 (lefthandside -> LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    ASSIGNMENT_OP   reduce using rule 44 (lefthandside -> LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    COMMA           reduce using rule 44 (lefthandside -> LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    CLOSE_PARANTHESIS reduce using rule 44 (lefthandside -> LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    SEMICOLON       reduce using rule 44 (lefthandside -> LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    BLOCK_BEGIN     reduce using rule 44 (lefthandside -> LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)


state 237

    (27) ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .
    (28) ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block . ELSE block

    RETURN          reduce using rule 27 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    IDENTIFIER      reduce using rule 27 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    WHILE           reduce using rule 27 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    FOR             reduce using rule 27 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    PRINT           reduce using rule 27 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    SUB             reduce using rule 27 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    LAST            reduce using rule 27 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    NEXT            reduce using rule 27 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    IF              reduce using rule 27 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    USE             reduce using rule 27 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    SWITCH          reduce using rule 27 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    PRIVATE         reduce using rule 27 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    LOCAL           reduce using rule 27 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    OPEN_PARANTHESIS reduce using rule 27 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    ARRAY           reduce using rule 27 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    HASH            reduce using rule 27 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    VARIABLE        reduce using rule 27 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    BLOCK_ENDS      reduce using rule 27 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    $end            reduce using rule 27 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    ELSE            shift and go to state 243


state 238

    (24) caselist -> CASE . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block caselist

    OPEN_PARANTHESIS shift and go to state 244


state 239

    (23) switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist . BLOCK_ENDS

    BLOCK_ENDS      shift and go to state 245


state 240

    (25) caselist -> ELSE . empty empty empty block empty
    (7) empty -> .

    BLOCK_BEGIN     reduce using rule 7 (empty -> .)

    empty                          shift and go to state 246

state 241

    (26) caselist -> empty . empty empty empty empty empty
    (7) empty -> .

    BLOCK_ENDS      reduce using rule 7 (empty -> .)

    empty                          shift and go to state 247

state 242

    (56) forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON . expression CLOSE_PARANTHESIS block
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 248
    empty                          shift and go to state 54

state 243

    (28) ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE . block
    (3) block -> . BLOCK_BEGIN statements BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 7

    block                          shift and go to state 249

state 244

    (24) caselist -> CASE OPEN_PARANTHESIS . expression CLOSE_PARANTHESIS block caselist
    (75) expression -> . PLUS_OP expression
    (76) expression -> . MINUS_OP expression
    (77) expression -> . BIT_FLIP expression
    (78) expression -> . NOT_OP expression
    (79) expression -> . INCREMENT_OP expression
    (80) expression -> . DECREMENT_OP expression
    (81) expression -> . expression INCREMENT_OP
    (82) expression -> . expression DECREMENT_OP
    (83) expression -> . empty
    (84) expression -> . term
    (85) expression -> . expression OR_STR_OP expression
    (86) expression -> . expression XOR_STR_OP expression
    (87) expression -> . expression AND_STR_OP expression
    (88) expression -> . expression NOT_STR_OP expression
    (89) expression -> . expression COMMA expression
    (90) expression -> . expression ASSOCIATE_OP expression
    (91) expression -> . expression ADV_ASSIGNMENT_OP expression
    (92) expression -> . expression ASSIGNMENT_OP expression
    (93) expression -> . expression RANGE_OP expression
    (94) expression -> . expression OR_OP expression
    (95) expression -> . expression AND_OP expression
    (96) expression -> . expression BIT_OR expression
    (97) expression -> . expression BIT_XOR expression
    (98) expression -> . expression BIT_AND expression
    (99) expression -> . expression EQUALS_OP expression
    (100) expression -> . expression NOT_EQUALS_OP expression
    (101) expression -> . expression COMPARE_OP expression
    (102) expression -> . expression GREATER_OP expression
    (103) expression -> . expression LESS_OP expression
    (104) expression -> . expression GREATER_EQUAL_OP expression
    (105) expression -> . expression LESS_EQUAL_OP expression
    (106) expression -> . expression BIT_RIGHT_SHIFT expression
    (107) expression -> . expression BIT_LEFT_SHIFT expression
    (108) expression -> . expression PLUS_OP expression
    (109) expression -> . expression MINUS_OP expression
    (110) expression -> . expression CONCATENATE expression
    (111) expression -> . expression MULTIPLICATION_OP expression
    (112) expression -> . expression DIVISION_OP expression
    (113) expression -> . expression MODULUS_OP expression
    (114) expression -> . expression REP_OP expression
    (115) expression -> . expression SEARCH_MODIFY expression
    (116) expression -> . expression SEARCH_MODIFY_NEG expression
    (117) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (67) term -> . empty number empty
    (68) term -> . empty type empty
    (69) term -> . empty variable empty
    (70) term -> . empty string empty
    (71) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 58
    MINUS_OP        shift and go to state 51
    BIT_FLIP        shift and go to state 53
    NOT_OP          shift and go to state 52
    INCREMENT_OP    shift and go to state 57
    DECREMENT_OP    shift and go to state 55
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 50

  ! INCREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 7 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 7 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 7 (empty -> .) ]

    term                           shift and go to state 56
    expression                     shift and go to state 250
    empty                          shift and go to state 54

state 245

    (23) switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .

    RETURN          reduce using rule 23 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    IDENTIFIER      reduce using rule 23 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    WHILE           reduce using rule 23 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    FOR             reduce using rule 23 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    PRINT           reduce using rule 23 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    SUB             reduce using rule 23 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    LAST            reduce using rule 23 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    NEXT            reduce using rule 23 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    IF              reduce using rule 23 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    USE             reduce using rule 23 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    SWITCH          reduce using rule 23 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    PRIVATE         reduce using rule 23 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    LOCAL           reduce using rule 23 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    OPEN_PARANTHESIS reduce using rule 23 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    ARRAY           reduce using rule 23 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    HASH            reduce using rule 23 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    VARIABLE        reduce using rule 23 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    BLOCK_ENDS      reduce using rule 23 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    $end            reduce using rule 23 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)


state 246

    (25) caselist -> ELSE empty . empty empty block empty
    (7) empty -> .

    BLOCK_BEGIN     reduce using rule 7 (empty -> .)

    empty                          shift and go to state 251

state 247

    (26) caselist -> empty empty . empty empty empty empty
    (7) empty -> .

    BLOCK_ENDS      reduce using rule 7 (empty -> .)

    empty                          shift and go to state 252

state 248

    (56) forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression . CLOSE_PARANTHESIS block
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS shift and go to state 253
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    OR_STR_OP       shift and go to state 134
    XOR_STR_OP      shift and go to state 129
    AND_STR_OP      shift and go to state 122
    NOT_STR_OP      shift and go to state 116
    COMMA           shift and go to state 125
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115


state 249

    (28) ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .

    RETURN          reduce using rule 28 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    IDENTIFIER      reduce using rule 28 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    WHILE           reduce using rule 28 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    FOR             reduce using rule 28 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    PRINT           reduce using rule 28 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    SUB             reduce using rule 28 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    LAST            reduce using rule 28 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    NEXT            reduce using rule 28 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    IF              reduce using rule 28 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    USE             reduce using rule 28 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    SWITCH          reduce using rule 28 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    PRIVATE         reduce using rule 28 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    LOCAL           reduce using rule 28 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    OPEN_PARANTHESIS reduce using rule 28 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    ARRAY           reduce using rule 28 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    HASH            reduce using rule 28 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    VARIABLE        reduce using rule 28 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    $end            reduce using rule 28 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    BLOCK_ENDS      reduce using rule 28 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)


state 250

    (24) caselist -> CASE OPEN_PARANTHESIS expression . CLOSE_PARANTHESIS block caselist
    (81) expression -> expression . INCREMENT_OP
    (82) expression -> expression . DECREMENT_OP
    (85) expression -> expression . OR_STR_OP expression
    (86) expression -> expression . XOR_STR_OP expression
    (87) expression -> expression . AND_STR_OP expression
    (88) expression -> expression . NOT_STR_OP expression
    (89) expression -> expression . COMMA expression
    (90) expression -> expression . ASSOCIATE_OP expression
    (91) expression -> expression . ADV_ASSIGNMENT_OP expression
    (92) expression -> expression . ASSIGNMENT_OP expression
    (93) expression -> expression . RANGE_OP expression
    (94) expression -> expression . OR_OP expression
    (95) expression -> expression . AND_OP expression
    (96) expression -> expression . BIT_OR expression
    (97) expression -> expression . BIT_XOR expression
    (98) expression -> expression . BIT_AND expression
    (99) expression -> expression . EQUALS_OP expression
    (100) expression -> expression . NOT_EQUALS_OP expression
    (101) expression -> expression . COMPARE_OP expression
    (102) expression -> expression . GREATER_OP expression
    (103) expression -> expression . LESS_OP expression
    (104) expression -> expression . GREATER_EQUAL_OP expression
    (105) expression -> expression . LESS_EQUAL_OP expression
    (106) expression -> expression . BIT_RIGHT_SHIFT expression
    (107) expression -> expression . BIT_LEFT_SHIFT expression
    (108) expression -> expression . PLUS_OP expression
    (109) expression -> expression . MINUS_OP expression
    (110) expression -> expression . CONCATENATE expression
    (111) expression -> expression . MULTIPLICATION_OP expression
    (112) expression -> expression . DIVISION_OP expression
    (113) expression -> expression . MODULUS_OP expression
    (114) expression -> expression . REP_OP expression
    (115) expression -> expression . SEARCH_MODIFY expression
    (116) expression -> expression . SEARCH_MODIFY_NEG expression
    (117) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS shift and go to state 254
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    OR_STR_OP       shift and go to state 134
    XOR_STR_OP      shift and go to state 129
    AND_STR_OP      shift and go to state 122
    NOT_STR_OP      shift and go to state 116
    COMMA           shift and go to state 125
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115


state 251

    (25) caselist -> ELSE empty empty . empty block empty
    (7) empty -> .

    BLOCK_BEGIN     reduce using rule 7 (empty -> .)

    empty                          shift and go to state 255

state 252

    (26) caselist -> empty empty empty . empty empty empty
    (7) empty -> .

    BLOCK_ENDS      reduce using rule 7 (empty -> .)

    empty                          shift and go to state 256

state 253

    (56) forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS . block
    (3) block -> . BLOCK_BEGIN statements BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 7

    block                          shift and go to state 257

state 254

    (24) caselist -> CASE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS . block caselist
    (3) block -> . BLOCK_BEGIN statements BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 7

    block                          shift and go to state 258

state 255

    (25) caselist -> ELSE empty empty empty . block empty
    (3) block -> . BLOCK_BEGIN statements BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 7

    block                          shift and go to state 259

state 256

    (26) caselist -> empty empty empty empty . empty empty
    (7) empty -> .

    BLOCK_ENDS      reduce using rule 7 (empty -> .)

    empty                          shift and go to state 260

state 257

    (56) forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .

    RETURN          reduce using rule 56 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    IDENTIFIER      reduce using rule 56 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    WHILE           reduce using rule 56 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    FOR             reduce using rule 56 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    PRINT           reduce using rule 56 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    SUB             reduce using rule 56 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    LAST            reduce using rule 56 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    NEXT            reduce using rule 56 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    IF              reduce using rule 56 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    USE             reduce using rule 56 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    SWITCH          reduce using rule 56 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    PRIVATE         reduce using rule 56 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    LOCAL           reduce using rule 56 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    OPEN_PARANTHESIS reduce using rule 56 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    ARRAY           reduce using rule 56 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    HASH            reduce using rule 56 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    VARIABLE        reduce using rule 56 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    $end            reduce using rule 56 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    BLOCK_ENDS      reduce using rule 56 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)


state 258

    (24) caselist -> CASE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block . caselist
    (24) caselist -> . CASE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block caselist
    (25) caselist -> . ELSE empty empty empty block empty
    (26) caselist -> . empty empty empty empty empty empty
    (7) empty -> .

    CASE            shift and go to state 238
    ELSE            shift and go to state 240
    BLOCK_ENDS      reduce using rule 7 (empty -> .)

    caselist                       shift and go to state 261
    empty                          shift and go to state 241

state 259

    (25) caselist -> ELSE empty empty empty block . empty
    (7) empty -> .

    BLOCK_ENDS      reduce using rule 7 (empty -> .)

    empty                          shift and go to state 262

state 260

    (26) caselist -> empty empty empty empty empty . empty
    (7) empty -> .

    BLOCK_ENDS      reduce using rule 7 (empty -> .)

    empty                          shift and go to state 263

state 261

    (24) caselist -> CASE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block caselist .

    BLOCK_ENDS      reduce using rule 24 (caselist -> CASE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block caselist .)


state 262

    (25) caselist -> ELSE empty empty empty block empty .

    BLOCK_ENDS      reduce using rule 25 (caselist -> ELSE empty empty empty block empty .)


state 263

    (26) caselist -> empty empty empty empty empty empty .

    BLOCK_ENDS      reduce using rule 26 (caselist -> empty empty empty empty empty empty .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for BLOCK_BEGIN in state 8 resolved as shift
WARNING: shift/reduce conflict for OPEN_PARANTHESIS in state 10 resolved as shift
WARNING: shift/reduce conflict for STRING in state 49 resolved as shift
WARNING: shift/reduce conflict for RES_STRING in state 49 resolved as shift
WARNING: reduce/reduce conflict in state 67 resolved using rule (statements -> statement empty)
WARNING: rejected rule (empty -> <empty>) in state 67
WARNING: reduce/reduce conflict in state 104 resolved using rule (empty -> <empty>)
WARNING: rejected rule (type -> variable) in state 104
WARNING: reduce/reduce conflict in state 150 resolved using rule (empty -> <empty>)
WARNING: rejected rule (expression -> empty) in state 150
WARNING: reduce/reduce conflict in state 233 resolved using rule (empty -> <empty>)
WARNING: rejected rule (expression -> expression COMMA expression) in state 233
