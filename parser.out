Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    FORMAT
    COMMENT
    TRANSLATION
    GOTO
    FOREACH
    ELSIF
    SUBSTITUTE
    SELECT
    FILE_HANDLING_OPTIONS
    COLON
    UNLESS
    UNTIL
    WHITESPACE
    USER_INPUT_OP
    QUESTION_MARK
    REDO
    WRITE
    MATCH
    DO
    SYSTEM_COMMAND
    CONTINUE

Grammar

Rule 0     S' -> start
Rule 1     start -> start1
Rule 2     start1 -> block
Rule 3     start1 -> statements
Rule 4     block -> BLOCK_BEGIN statements BLOCK_ENDS
Rule 5     statements -> statement statements
Rule 6     statements -> statement empty
Rule 7     statements -> empty
Rule 8     empty -> <empty>
Rule 9     statement -> assignment
Rule 10    statement -> declaration
Rule 11    statement -> returnStatement
Rule 12    statement -> functionCall
Rule 13    statement -> whileStatement
Rule 14    statement -> forStatement
Rule 15    statement -> printStatement
Rule 16    statement -> functionStatement
Rule 17    statement -> lastStatement
Rule 18    statement -> nextStatement
Rule 19    statement -> ifthen
Rule 20    statement -> ifthenelse
Rule 21    statement -> useStatement
Rule 22    statement -> switchStatement
Rule 23    useStatement -> USE IDENTIFIER SEMICOLON
Rule 24    switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS
Rule 25    caselist -> CASE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block caselist
Rule 26    caselist -> ELSE empty empty empty block empty
Rule 27    caselist -> empty
Rule 28    ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
Rule 29    ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block
Rule 30    lastStatement -> LAST SEMICOLON
Rule 31    nextStatement -> NEXT SEMICOLON
Rule 32    functionStatement -> SUB IDENTIFIER block
Rule 33    printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON
Rule 34    printStatement -> PRINT empty string1 empty SEMICOLON
Rule 35    printStatement -> PRINT empty expression empty SEMICOLON
Rule 36    string1 -> STRING
Rule 37    string1 -> RES_STRING
Rule 38    returnStatement -> RETURN expression SEMICOLON
Rule 39    assignment -> lefthandside assignmenttype expression SEMICOLON
Rule 40    assignmenttype -> ADV_ASSIGNMENT_OP
Rule 41    assignmenttype -> ASSIGNMENT_OP
Rule 42    lefthandside -> PRIVATE empty type decList
Rule 43    lefthandside -> PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
Rule 44    lefthandside -> LOCAL empty type decList
Rule 45    lefthandside -> LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
Rule 46    lefthandside -> OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
Rule 47    lefthandside -> type
Rule 48    declaration -> lefthandside decList empty SEMICOLON
Rule 49    declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON
Rule 50    decList -> COMMA type decList
Rule 51    decList -> empty
Rule 52    functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON
Rule 53    parameters -> expression COMMA parameters
Rule 54    parameters -> expression empty empty
Rule 55    parameters -> empty
Rule 56    whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
Rule 57    forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block
Rule 58    string -> STRING
Rule 59    string -> RES_STRING
Rule 60    number -> NUMBER
Rule 61    number -> SCI_NOT
Rule 62    number -> FLOAT
Rule 63    number -> HEXADECIMAL
Rule 64    number -> OCTAL
Rule 65    variable -> VARIABLE empty empty empty
Rule 66    variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
Rule 67    variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS
Rule 68    term -> empty number empty
Rule 69    term -> empty type empty
Rule 70    term -> empty variable empty
Rule 71    term -> empty string empty
Rule 72    term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
Rule 73    type -> ARRAY
Rule 74    type -> HASH
Rule 75    type -> variable
Rule 76    expression -> PLUS_OP expression
Rule 77    expression -> MINUS_OP expression
Rule 78    expression -> BIT_FLIP expression
Rule 79    expression -> NOT_OP expression
Rule 80    expression -> INCREMENT_OP expression
Rule 81    expression -> DECREMENT_OP expression
Rule 82    expression -> expression INCREMENT_OP
Rule 83    expression -> expression DECREMENT_OP
Rule 84    expression -> empty
Rule 85    expression -> term
Rule 86    expression -> expression OR_STR_OP expression
Rule 87    expression -> expression XOR_STR_OP expression
Rule 88    expression -> expression AND_STR_OP expression
Rule 89    expression -> expression NOT_STR_OP expression
Rule 90    expression -> expression COMMA expression
Rule 91    expression -> expression ASSOCIATE_OP expression
Rule 92    expression -> expression ADV_ASSIGNMENT_OP expression
Rule 93    expression -> expression ASSIGNMENT_OP expression
Rule 94    expression -> expression RANGE_OP expression
Rule 95    expression -> expression OR_OP expression
Rule 96    expression -> expression AND_OP expression
Rule 97    expression -> expression BIT_OR expression
Rule 98    expression -> expression BIT_XOR expression
Rule 99    expression -> expression BIT_AND expression
Rule 100   expression -> expression EQUALS_OP expression
Rule 101   expression -> expression NOT_EQUALS_OP expression
Rule 102   expression -> expression COMPARE_OP expression
Rule 103   expression -> expression GREATER_OP expression
Rule 104   expression -> expression LESS_OP expression
Rule 105   expression -> expression GREATER_EQUAL_OP expression
Rule 106   expression -> expression LESS_EQUAL_OP expression
Rule 107   expression -> expression BIT_RIGHT_SHIFT expression
Rule 108   expression -> expression BIT_LEFT_SHIFT expression
Rule 109   expression -> expression PLUS_OP expression
Rule 110   expression -> expression MINUS_OP expression
Rule 111   expression -> expression CONCATENATE expression
Rule 112   expression -> expression MULTIPLICATION_OP expression
Rule 113   expression -> expression DIVISION_OP expression
Rule 114   expression -> expression MODULUS_OP expression
Rule 115   expression -> expression REP_OP expression
Rule 116   expression -> expression SEARCH_MODIFY expression
Rule 117   expression -> expression SEARCH_MODIFY_NEG expression
Rule 118   expression -> expression EXPONENT_OP expression

Terminals, with rules where they appear

ADV_ASSIGNMENT_OP    : 40 92
AND_OP               : 96
AND_STR_OP           : 88
ARRAY                : 73
ASSIGNMENT_OP        : 41 93
ASSOCIATE_OP         : 91
BIT_AND              : 99
BIT_FLIP             : 78
BIT_LEFT_SHIFT       : 108
BIT_OR               : 97
BIT_RIGHT_SHIFT      : 107
BIT_XOR              : 98
BLOCK_BEGIN          : 4 24 67
BLOCK_ENDS           : 4 24 67
CASE                 : 25
CLOSE_BRACKET        : 66
CLOSE_PARANTHESIS    : 25 28 29 33 43 45 46 49 52 56 57 72
COLON                : 
COMMA                : 50 53 90
COMMENT              : 
COMPARE_OP           : 102
CONCATENATE          : 111
CONTINUE             : 
DECREMENT_OP         : 81 83
DIVISION_OP          : 113
DO                   : 
ELSE                 : 26 29
ELSIF                : 
EQUALS_OP            : 100
EXPONENT_OP          : 118
FILE_HANDLING_OPTIONS : 
FLOAT                : 62
FOR                  : 57
FOREACH              : 
FORMAT               : 
GOTO                 : 
GREATER_EQUAL_OP     : 105
GREATER_OP           : 103
HASH                 : 74
HEXADECIMAL          : 63
IDENTIFIER           : 23 32 52
IF                   : 28 29
INCREMENT_OP         : 80 82
LAST                 : 30
LESS_EQUAL_OP        : 106
LESS_OP              : 104
LOCAL                : 44 45
MATCH                : 
MINUS_OP             : 77 110
MODULUS_OP           : 114
MULTIPLICATION_OP    : 112
NEXT                 : 31
NOT_EQUALS_OP        : 101
NOT_OP               : 79
NOT_STR_OP           : 89
NUMBER               : 60 66
OCTAL                : 64
OPEN_BRACKET         : 66
OPEN_PARANTHESIS     : 25 28 29 33 43 45 46 52 56 57 72
OR_OP                : 95
OR_STR_OP            : 86
PLUS_OP              : 76 109
PRINT                : 33 34 35
PRIVATE              : 42 43
QUESTION_MARK        : 
RANGE_OP             : 94
REDO                 : 
REP_OP               : 115
RES_STRING           : 37 59
RETURN               : 38
SCI_NOT              : 61
SEARCH_MODIFY        : 116
SEARCH_MODIFY_NEG    : 117
SELECT               : 
SEMICOLON            : 23 30 31 33 34 35 38 39 48 49 52 57 57
STRING               : 36 58
SUB                  : 32
SUBSTITUTE           : 
SWITCH               : 24
SYSTEM_COMMAND       : 
TRANSLATION          : 
UNLESS               : 
UNTIL                : 
USE                  : 23
USER_INPUT_OP        : 
VARIABLE             : 65 66 67
WHILE                : 56
WHITESPACE           : 
WRITE                : 
XOR_STR_OP           : 87
error                : 

Nonterminals, with rules where they appear

assignment           : 9
assignmenttype       : 39
block                : 2 25 26 28 29 29 32 56 57
caselist             : 24 25
decList              : 42 43 44 45 46 48 49 50
declaration          : 10
empty                : 6 7 24 24 26 26 26 26 27 34 34 35 35 42 44 48 51 54 54 55 65 65 65 68 68 69 69 70 70 71 71 84
expression           : 25 28 29 35 38 39 53 54 56 57 57 57 72 76 77 78 79 80 81 82 83 86 86 87 87 88 88 89 89 90 90 91 91 92 92 93 93 94 94 95 95 96 96 97 97 98 98 99 99 100 100 101 101 102 102 103 103 104 104 105 105 106 106 107 107 108 108 109 109 110 110 111 111 112 112 113 113 114 114 115 115 116 116 117 117 118 118
forStatement         : 14
functionCall         : 12
functionStatement    : 16
ifthen               : 19
ifthenelse           : 20
lastStatement        : 17
lefthandside         : 24 39 48 49
nextStatement        : 18
number               : 68
parameters           : 52 53
printStatement       : 15
returnStatement      : 11
start                : 0
start1               : 1
statement            : 5 6
statements           : 3 4 5
string               : 67 71
string1              : 33 34
switchStatement      : 22
term                 : 85
type                 : 42 43 44 45 46 47 50 69
useStatement         : 21
variable             : 70 75
whileStatement       : 13

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . start1
    (2) start1 -> . block
    (3) start1 -> . statements
    (4) block -> . BLOCK_BEGIN statements BLOCK_ENDS
    (5) statements -> . statement statements
    (6) statements -> . statement empty
    (7) statements -> . empty
    (9) statement -> . assignment
    (10) statement -> . declaration
    (11) statement -> . returnStatement
    (12) statement -> . functionCall
    (13) statement -> . whileStatement
    (14) statement -> . forStatement
    (15) statement -> . printStatement
    (16) statement -> . functionStatement
    (17) statement -> . lastStatement
    (18) statement -> . nextStatement
    (19) statement -> . ifthen
    (20) statement -> . ifthenelse
    (21) statement -> . useStatement
    (22) statement -> . switchStatement
    (8) empty -> .
    (39) assignment -> . lefthandside assignmenttype expression SEMICOLON
    (48) declaration -> . lefthandside decList empty SEMICOLON
    (49) declaration -> . lefthandside decList CLOSE_PARANTHESIS SEMICOLON
    (38) returnStatement -> . RETURN expression SEMICOLON
    (52) functionCall -> . IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON
    (56) whileStatement -> . WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
    (57) forStatement -> . FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block
    (33) printStatement -> . PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON
    (34) printStatement -> . PRINT empty string1 empty SEMICOLON
    (35) printStatement -> . PRINT empty expression empty SEMICOLON
    (32) functionStatement -> . SUB IDENTIFIER block
    (30) lastStatement -> . LAST SEMICOLON
    (31) nextStatement -> . NEXT SEMICOLON
    (28) ifthen -> . IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
    (29) ifthenelse -> . IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block
    (23) useStatement -> . USE IDENTIFIER SEMICOLON
    (24) switchStatement -> . SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS
    (42) lefthandside -> . PRIVATE empty type decList
    (43) lefthandside -> . PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (44) lefthandside -> . LOCAL empty type decList
    (45) lefthandside -> . LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (46) lefthandside -> . OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (47) lefthandside -> . type
    (73) type -> . ARRAY
    (74) type -> . HASH
    (75) type -> . variable
    (65) variable -> . VARIABLE empty empty empty
    (66) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (67) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 8
    $end            reduce using rule 8 (empty -> .)
    RETURN          shift and go to state 12
    IDENTIFIER      shift and go to state 25
    WHILE           shift and go to state 10
    FOR             shift and go to state 30
    PRINT           shift and go to state 11
    SUB             shift and go to state 14
    LAST            shift and go to state 15
    NEXT            shift and go to state 19
    IF              shift and go to state 40
    USE             shift and go to state 2
    SWITCH          shift and go to state 17
    PRIVATE         shift and go to state 18
    LOCAL           shift and go to state 38
    OPEN_PARANTHESIS shift and go to state 5
    ARRAY           shift and go to state 39
    HASH            shift and go to state 28
    VARIABLE        shift and go to state 9

    forStatement                   shift and go to state 1
    start1                         shift and go to state 3
    statements                     shift and go to state 4
    functionStatement              shift and go to state 6
    switchStatement                shift and go to state 7
    ifthen                         shift and go to state 13
    nextStatement                  shift and go to state 16
    start                          shift and go to state 20
    lastStatement                  shift and go to state 21
    useStatement                   shift and go to state 22
    statement                      shift and go to state 23
    printStatement                 shift and go to state 24
    type                           shift and go to state 26
    empty                          shift and go to state 27
    ifthenelse                     shift and go to state 29
    assignment                     shift and go to state 31
    whileStatement                 shift and go to state 32
    lefthandside                   shift and go to state 33
    functionCall                   shift and go to state 34
    declaration                    shift and go to state 35
    variable                       shift and go to state 36
    returnStatement                shift and go to state 37
    block                          shift and go to state 41

state 1

    (14) statement -> forStatement .

    RETURN          reduce using rule 14 (statement -> forStatement .)
    IDENTIFIER      reduce using rule 14 (statement -> forStatement .)
    WHILE           reduce using rule 14 (statement -> forStatement .)
    FOR             reduce using rule 14 (statement -> forStatement .)
    PRINT           reduce using rule 14 (statement -> forStatement .)
    SUB             reduce using rule 14 (statement -> forStatement .)
    LAST            reduce using rule 14 (statement -> forStatement .)
    NEXT            reduce using rule 14 (statement -> forStatement .)
    IF              reduce using rule 14 (statement -> forStatement .)
    USE             reduce using rule 14 (statement -> forStatement .)
    SWITCH          reduce using rule 14 (statement -> forStatement .)
    PRIVATE         reduce using rule 14 (statement -> forStatement .)
    LOCAL           reduce using rule 14 (statement -> forStatement .)
    OPEN_PARANTHESIS reduce using rule 14 (statement -> forStatement .)
    ARRAY           reduce using rule 14 (statement -> forStatement .)
    HASH            reduce using rule 14 (statement -> forStatement .)
    VARIABLE        reduce using rule 14 (statement -> forStatement .)
    $end            reduce using rule 14 (statement -> forStatement .)
    BLOCK_ENDS      reduce using rule 14 (statement -> forStatement .)


state 2

    (23) useStatement -> USE . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 42


state 3

    (1) start -> start1 .

    $end            reduce using rule 1 (start -> start1 .)


state 4

    (3) start1 -> statements .

    $end            reduce using rule 3 (start1 -> statements .)


state 5

    (46) lefthandside -> OPEN_PARANTHESIS . type decList CLOSE_PARANTHESIS
    (73) type -> . ARRAY
    (74) type -> . HASH
    (75) type -> . variable
    (65) variable -> . VARIABLE empty empty empty
    (66) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (67) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    ARRAY           shift and go to state 39
    HASH            shift and go to state 28
    VARIABLE        shift and go to state 9

    variable                       shift and go to state 36
    type                           shift and go to state 43

state 6

    (16) statement -> functionStatement .

    RETURN          reduce using rule 16 (statement -> functionStatement .)
    IDENTIFIER      reduce using rule 16 (statement -> functionStatement .)
    WHILE           reduce using rule 16 (statement -> functionStatement .)
    FOR             reduce using rule 16 (statement -> functionStatement .)
    PRINT           reduce using rule 16 (statement -> functionStatement .)
    SUB             reduce using rule 16 (statement -> functionStatement .)
    LAST            reduce using rule 16 (statement -> functionStatement .)
    NEXT            reduce using rule 16 (statement -> functionStatement .)
    IF              reduce using rule 16 (statement -> functionStatement .)
    USE             reduce using rule 16 (statement -> functionStatement .)
    SWITCH          reduce using rule 16 (statement -> functionStatement .)
    PRIVATE         reduce using rule 16 (statement -> functionStatement .)
    LOCAL           reduce using rule 16 (statement -> functionStatement .)
    OPEN_PARANTHESIS reduce using rule 16 (statement -> functionStatement .)
    ARRAY           reduce using rule 16 (statement -> functionStatement .)
    HASH            reduce using rule 16 (statement -> functionStatement .)
    VARIABLE        reduce using rule 16 (statement -> functionStatement .)
    $end            reduce using rule 16 (statement -> functionStatement .)
    BLOCK_ENDS      reduce using rule 16 (statement -> functionStatement .)


state 7

    (22) statement -> switchStatement .

    RETURN          reduce using rule 22 (statement -> switchStatement .)
    IDENTIFIER      reduce using rule 22 (statement -> switchStatement .)
    WHILE           reduce using rule 22 (statement -> switchStatement .)
    FOR             reduce using rule 22 (statement -> switchStatement .)
    PRINT           reduce using rule 22 (statement -> switchStatement .)
    SUB             reduce using rule 22 (statement -> switchStatement .)
    LAST            reduce using rule 22 (statement -> switchStatement .)
    NEXT            reduce using rule 22 (statement -> switchStatement .)
    IF              reduce using rule 22 (statement -> switchStatement .)
    USE             reduce using rule 22 (statement -> switchStatement .)
    SWITCH          reduce using rule 22 (statement -> switchStatement .)
    PRIVATE         reduce using rule 22 (statement -> switchStatement .)
    LOCAL           reduce using rule 22 (statement -> switchStatement .)
    OPEN_PARANTHESIS reduce using rule 22 (statement -> switchStatement .)
    ARRAY           reduce using rule 22 (statement -> switchStatement .)
    HASH            reduce using rule 22 (statement -> switchStatement .)
    VARIABLE        reduce using rule 22 (statement -> switchStatement .)
    $end            reduce using rule 22 (statement -> switchStatement .)
    BLOCK_ENDS      reduce using rule 22 (statement -> switchStatement .)


state 8

    (4) block -> BLOCK_BEGIN . statements BLOCK_ENDS
    (5) statements -> . statement statements
    (6) statements -> . statement empty
    (7) statements -> . empty
    (9) statement -> . assignment
    (10) statement -> . declaration
    (11) statement -> . returnStatement
    (12) statement -> . functionCall
    (13) statement -> . whileStatement
    (14) statement -> . forStatement
    (15) statement -> . printStatement
    (16) statement -> . functionStatement
    (17) statement -> . lastStatement
    (18) statement -> . nextStatement
    (19) statement -> . ifthen
    (20) statement -> . ifthenelse
    (21) statement -> . useStatement
    (22) statement -> . switchStatement
    (8) empty -> .
    (39) assignment -> . lefthandside assignmenttype expression SEMICOLON
    (48) declaration -> . lefthandside decList empty SEMICOLON
    (49) declaration -> . lefthandside decList CLOSE_PARANTHESIS SEMICOLON
    (38) returnStatement -> . RETURN expression SEMICOLON
    (52) functionCall -> . IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON
    (56) whileStatement -> . WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
    (57) forStatement -> . FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block
    (33) printStatement -> . PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON
    (34) printStatement -> . PRINT empty string1 empty SEMICOLON
    (35) printStatement -> . PRINT empty expression empty SEMICOLON
    (32) functionStatement -> . SUB IDENTIFIER block
    (30) lastStatement -> . LAST SEMICOLON
    (31) nextStatement -> . NEXT SEMICOLON
    (28) ifthen -> . IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
    (29) ifthenelse -> . IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block
    (23) useStatement -> . USE IDENTIFIER SEMICOLON
    (24) switchStatement -> . SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS
    (42) lefthandside -> . PRIVATE empty type decList
    (43) lefthandside -> . PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (44) lefthandside -> . LOCAL empty type decList
    (45) lefthandside -> . LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (46) lefthandside -> . OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (47) lefthandside -> . type
    (73) type -> . ARRAY
    (74) type -> . HASH
    (75) type -> . variable
    (65) variable -> . VARIABLE empty empty empty
    (66) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (67) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    BLOCK_ENDS      reduce using rule 8 (empty -> .)
    RETURN          shift and go to state 12
    IDENTIFIER      shift and go to state 25
    WHILE           shift and go to state 10
    FOR             shift and go to state 30
    PRINT           shift and go to state 11
    SUB             shift and go to state 14
    LAST            shift and go to state 15
    NEXT            shift and go to state 19
    IF              shift and go to state 40
    USE             shift and go to state 2
    SWITCH          shift and go to state 17
    PRIVATE         shift and go to state 18
    LOCAL           shift and go to state 38
    OPEN_PARANTHESIS shift and go to state 5
    ARRAY           shift and go to state 39
    HASH            shift and go to state 28
    VARIABLE        shift and go to state 9

    forStatement                   shift and go to state 1
    statements                     shift and go to state 44
    functionStatement              shift and go to state 6
    switchStatement                shift and go to state 7
    ifthen                         shift and go to state 13
    nextStatement                  shift and go to state 16
    lastStatement                  shift and go to state 21
    useStatement                   shift and go to state 22
    statement                      shift and go to state 23
    printStatement                 shift and go to state 24
    type                           shift and go to state 26
    empty                          shift and go to state 27
    ifthenelse                     shift and go to state 29
    assignment                     shift and go to state 31
    whileStatement                 shift and go to state 32
    lefthandside                   shift and go to state 33
    functionCall                   shift and go to state 34
    declaration                    shift and go to state 35
    variable                       shift and go to state 36
    returnStatement                shift and go to state 37

state 9

    (65) variable -> VARIABLE . empty empty empty
    (66) variable -> VARIABLE . OPEN_BRACKET NUMBER CLOSE_BRACKET
    (67) variable -> VARIABLE . BLOCK_BEGIN string BLOCK_ENDS
    (8) empty -> .

  ! shift/reduce conflict for BLOCK_BEGIN resolved as shift
    OPEN_BRACKET    shift and go to state 45
    BLOCK_BEGIN     shift and go to state 46
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    INCREMENT_OP    reduce using rule 8 (empty -> .)
    DECREMENT_OP    reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    PLUS_OP         reduce using rule 8 (empty -> .)
    MINUS_OP        reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)

  ! BLOCK_BEGIN     [ reduce using rule 8 (empty -> .) ]

    empty                          shift and go to state 47

state 10

    (56) whileStatement -> WHILE . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block

    OPEN_PARANTHESIS shift and go to state 48


state 11

    (33) printStatement -> PRINT . OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON
    (34) printStatement -> PRINT . empty string1 empty SEMICOLON
    (35) printStatement -> PRINT . empty expression empty SEMICOLON
    (8) empty -> .

  ! shift/reduce conflict for OPEN_PARANTHESIS resolved as shift
    OPEN_PARANTHESIS shift and go to state 49
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    PLUS_OP         reduce using rule 8 (empty -> .)
    MINUS_OP        reduce using rule 8 (empty -> .)
    BIT_FLIP        reduce using rule 8 (empty -> .)
    NOT_OP          reduce using rule 8 (empty -> .)
    INCREMENT_OP    reduce using rule 8 (empty -> .)
    DECREMENT_OP    reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)

  ! OPEN_PARANTHESIS [ reduce using rule 8 (empty -> .) ]

    empty                          shift and go to state 50

state 12

    (38) returnStatement -> RETURN . expression SEMICOLON
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 60
    empty                          shift and go to state 55

state 13

    (19) statement -> ifthen .

    RETURN          reduce using rule 19 (statement -> ifthen .)
    IDENTIFIER      reduce using rule 19 (statement -> ifthen .)
    WHILE           reduce using rule 19 (statement -> ifthen .)
    FOR             reduce using rule 19 (statement -> ifthen .)
    PRINT           reduce using rule 19 (statement -> ifthen .)
    SUB             reduce using rule 19 (statement -> ifthen .)
    LAST            reduce using rule 19 (statement -> ifthen .)
    NEXT            reduce using rule 19 (statement -> ifthen .)
    IF              reduce using rule 19 (statement -> ifthen .)
    USE             reduce using rule 19 (statement -> ifthen .)
    SWITCH          reduce using rule 19 (statement -> ifthen .)
    PRIVATE         reduce using rule 19 (statement -> ifthen .)
    LOCAL           reduce using rule 19 (statement -> ifthen .)
    OPEN_PARANTHESIS reduce using rule 19 (statement -> ifthen .)
    ARRAY           reduce using rule 19 (statement -> ifthen .)
    HASH            reduce using rule 19 (statement -> ifthen .)
    VARIABLE        reduce using rule 19 (statement -> ifthen .)
    $end            reduce using rule 19 (statement -> ifthen .)
    BLOCK_ENDS      reduce using rule 19 (statement -> ifthen .)


state 14

    (32) functionStatement -> SUB . IDENTIFIER block

    IDENTIFIER      shift and go to state 61


state 15

    (30) lastStatement -> LAST . SEMICOLON

    SEMICOLON       shift and go to state 62


state 16

    (18) statement -> nextStatement .

    RETURN          reduce using rule 18 (statement -> nextStatement .)
    IDENTIFIER      reduce using rule 18 (statement -> nextStatement .)
    WHILE           reduce using rule 18 (statement -> nextStatement .)
    FOR             reduce using rule 18 (statement -> nextStatement .)
    PRINT           reduce using rule 18 (statement -> nextStatement .)
    SUB             reduce using rule 18 (statement -> nextStatement .)
    LAST            reduce using rule 18 (statement -> nextStatement .)
    NEXT            reduce using rule 18 (statement -> nextStatement .)
    IF              reduce using rule 18 (statement -> nextStatement .)
    USE             reduce using rule 18 (statement -> nextStatement .)
    SWITCH          reduce using rule 18 (statement -> nextStatement .)
    PRIVATE         reduce using rule 18 (statement -> nextStatement .)
    LOCAL           reduce using rule 18 (statement -> nextStatement .)
    OPEN_PARANTHESIS reduce using rule 18 (statement -> nextStatement .)
    ARRAY           reduce using rule 18 (statement -> nextStatement .)
    HASH            reduce using rule 18 (statement -> nextStatement .)
    VARIABLE        reduce using rule 18 (statement -> nextStatement .)
    $end            reduce using rule 18 (statement -> nextStatement .)
    BLOCK_ENDS      reduce using rule 18 (statement -> nextStatement .)


state 17

    (24) switchStatement -> SWITCH . empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS
    (8) empty -> .

    PRIVATE         reduce using rule 8 (empty -> .)
    LOCAL           reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)

    empty                          shift and go to state 63

state 18

    (42) lefthandside -> PRIVATE . empty type decList
    (43) lefthandside -> PRIVATE . OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (8) empty -> .

    OPEN_PARANTHESIS shift and go to state 64
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)

    empty                          shift and go to state 65

state 19

    (31) nextStatement -> NEXT . SEMICOLON

    SEMICOLON       shift and go to state 66


state 20

    (0) S' -> start .



state 21

    (17) statement -> lastStatement .

    RETURN          reduce using rule 17 (statement -> lastStatement .)
    IDENTIFIER      reduce using rule 17 (statement -> lastStatement .)
    WHILE           reduce using rule 17 (statement -> lastStatement .)
    FOR             reduce using rule 17 (statement -> lastStatement .)
    PRINT           reduce using rule 17 (statement -> lastStatement .)
    SUB             reduce using rule 17 (statement -> lastStatement .)
    LAST            reduce using rule 17 (statement -> lastStatement .)
    NEXT            reduce using rule 17 (statement -> lastStatement .)
    IF              reduce using rule 17 (statement -> lastStatement .)
    USE             reduce using rule 17 (statement -> lastStatement .)
    SWITCH          reduce using rule 17 (statement -> lastStatement .)
    PRIVATE         reduce using rule 17 (statement -> lastStatement .)
    LOCAL           reduce using rule 17 (statement -> lastStatement .)
    OPEN_PARANTHESIS reduce using rule 17 (statement -> lastStatement .)
    ARRAY           reduce using rule 17 (statement -> lastStatement .)
    HASH            reduce using rule 17 (statement -> lastStatement .)
    VARIABLE        reduce using rule 17 (statement -> lastStatement .)
    $end            reduce using rule 17 (statement -> lastStatement .)
    BLOCK_ENDS      reduce using rule 17 (statement -> lastStatement .)


state 22

    (21) statement -> useStatement .

    RETURN          reduce using rule 21 (statement -> useStatement .)
    IDENTIFIER      reduce using rule 21 (statement -> useStatement .)
    WHILE           reduce using rule 21 (statement -> useStatement .)
    FOR             reduce using rule 21 (statement -> useStatement .)
    PRINT           reduce using rule 21 (statement -> useStatement .)
    SUB             reduce using rule 21 (statement -> useStatement .)
    LAST            reduce using rule 21 (statement -> useStatement .)
    NEXT            reduce using rule 21 (statement -> useStatement .)
    IF              reduce using rule 21 (statement -> useStatement .)
    USE             reduce using rule 21 (statement -> useStatement .)
    SWITCH          reduce using rule 21 (statement -> useStatement .)
    PRIVATE         reduce using rule 21 (statement -> useStatement .)
    LOCAL           reduce using rule 21 (statement -> useStatement .)
    OPEN_PARANTHESIS reduce using rule 21 (statement -> useStatement .)
    ARRAY           reduce using rule 21 (statement -> useStatement .)
    HASH            reduce using rule 21 (statement -> useStatement .)
    VARIABLE        reduce using rule 21 (statement -> useStatement .)
    $end            reduce using rule 21 (statement -> useStatement .)
    BLOCK_ENDS      reduce using rule 21 (statement -> useStatement .)


state 23

    (5) statements -> statement . statements
    (6) statements -> statement . empty
    (5) statements -> . statement statements
    (6) statements -> . statement empty
    (7) statements -> . empty
    (8) empty -> .
    (9) statement -> . assignment
    (10) statement -> . declaration
    (11) statement -> . returnStatement
    (12) statement -> . functionCall
    (13) statement -> . whileStatement
    (14) statement -> . forStatement
    (15) statement -> . printStatement
    (16) statement -> . functionStatement
    (17) statement -> . lastStatement
    (18) statement -> . nextStatement
    (19) statement -> . ifthen
    (20) statement -> . ifthenelse
    (21) statement -> . useStatement
    (22) statement -> . switchStatement
    (39) assignment -> . lefthandside assignmenttype expression SEMICOLON
    (48) declaration -> . lefthandside decList empty SEMICOLON
    (49) declaration -> . lefthandside decList CLOSE_PARANTHESIS SEMICOLON
    (38) returnStatement -> . RETURN expression SEMICOLON
    (52) functionCall -> . IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON
    (56) whileStatement -> . WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
    (57) forStatement -> . FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block
    (33) printStatement -> . PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON
    (34) printStatement -> . PRINT empty string1 empty SEMICOLON
    (35) printStatement -> . PRINT empty expression empty SEMICOLON
    (32) functionStatement -> . SUB IDENTIFIER block
    (30) lastStatement -> . LAST SEMICOLON
    (31) nextStatement -> . NEXT SEMICOLON
    (28) ifthen -> . IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
    (29) ifthenelse -> . IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block
    (23) useStatement -> . USE IDENTIFIER SEMICOLON
    (24) switchStatement -> . SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS
    (42) lefthandside -> . PRIVATE empty type decList
    (43) lefthandside -> . PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (44) lefthandside -> . LOCAL empty type decList
    (45) lefthandside -> . LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (46) lefthandside -> . OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (47) lefthandside -> . type
    (73) type -> . ARRAY
    (74) type -> . HASH
    (75) type -> . variable
    (65) variable -> . VARIABLE empty empty empty
    (66) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (67) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    $end            reduce using rule 8 (empty -> .)
    BLOCK_ENDS      reduce using rule 8 (empty -> .)
    RETURN          shift and go to state 12
    IDENTIFIER      shift and go to state 25
    WHILE           shift and go to state 10
    FOR             shift and go to state 30
    PRINT           shift and go to state 11
    SUB             shift and go to state 14
    LAST            shift and go to state 15
    NEXT            shift and go to state 19
    IF              shift and go to state 40
    USE             shift and go to state 2
    SWITCH          shift and go to state 17
    PRIVATE         shift and go to state 18
    LOCAL           shift and go to state 38
    OPEN_PARANTHESIS shift and go to state 5
    ARRAY           shift and go to state 39
    HASH            shift and go to state 28
    VARIABLE        shift and go to state 9

    forStatement                   shift and go to state 1
    statements                     shift and go to state 67
    functionStatement              shift and go to state 6
    switchStatement                shift and go to state 7
    ifthen                         shift and go to state 13
    nextStatement                  shift and go to state 16
    lastStatement                  shift and go to state 21
    useStatement                   shift and go to state 22
    statement                      shift and go to state 23
    printStatement                 shift and go to state 24
    type                           shift and go to state 26
    empty                          shift and go to state 68
    ifthenelse                     shift and go to state 29
    assignment                     shift and go to state 31
    whileStatement                 shift and go to state 32
    lefthandside                   shift and go to state 33
    functionCall                   shift and go to state 34
    declaration                    shift and go to state 35
    variable                       shift and go to state 36
    returnStatement                shift and go to state 37

state 24

    (15) statement -> printStatement .

    RETURN          reduce using rule 15 (statement -> printStatement .)
    IDENTIFIER      reduce using rule 15 (statement -> printStatement .)
    WHILE           reduce using rule 15 (statement -> printStatement .)
    FOR             reduce using rule 15 (statement -> printStatement .)
    PRINT           reduce using rule 15 (statement -> printStatement .)
    SUB             reduce using rule 15 (statement -> printStatement .)
    LAST            reduce using rule 15 (statement -> printStatement .)
    NEXT            reduce using rule 15 (statement -> printStatement .)
    IF              reduce using rule 15 (statement -> printStatement .)
    USE             reduce using rule 15 (statement -> printStatement .)
    SWITCH          reduce using rule 15 (statement -> printStatement .)
    PRIVATE         reduce using rule 15 (statement -> printStatement .)
    LOCAL           reduce using rule 15 (statement -> printStatement .)
    OPEN_PARANTHESIS reduce using rule 15 (statement -> printStatement .)
    ARRAY           reduce using rule 15 (statement -> printStatement .)
    HASH            reduce using rule 15 (statement -> printStatement .)
    VARIABLE        reduce using rule 15 (statement -> printStatement .)
    $end            reduce using rule 15 (statement -> printStatement .)
    BLOCK_ENDS      reduce using rule 15 (statement -> printStatement .)


state 25

    (52) functionCall -> IDENTIFIER . OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON

    OPEN_PARANTHESIS shift and go to state 69


state 26

    (47) lefthandside -> type .

    BLOCK_BEGIN     reduce using rule 47 (lefthandside -> type .)
    ADV_ASSIGNMENT_OP reduce using rule 47 (lefthandside -> type .)
    ASSIGNMENT_OP   reduce using rule 47 (lefthandside -> type .)
    COMMA           reduce using rule 47 (lefthandside -> type .)
    CLOSE_PARANTHESIS reduce using rule 47 (lefthandside -> type .)
    SEMICOLON       reduce using rule 47 (lefthandside -> type .)


state 27

    (7) statements -> empty .

    BLOCK_ENDS      reduce using rule 7 (statements -> empty .)
    $end            reduce using rule 7 (statements -> empty .)


state 28

    (74) type -> HASH .

    COMMA           reduce using rule 74 (type -> HASH .)
    CLOSE_PARANTHESIS reduce using rule 74 (type -> HASH .)
    INCREMENT_OP    reduce using rule 74 (type -> HASH .)
    DECREMENT_OP    reduce using rule 74 (type -> HASH .)
    OR_STR_OP       reduce using rule 74 (type -> HASH .)
    XOR_STR_OP      reduce using rule 74 (type -> HASH .)
    AND_STR_OP      reduce using rule 74 (type -> HASH .)
    NOT_STR_OP      reduce using rule 74 (type -> HASH .)
    ASSOCIATE_OP    reduce using rule 74 (type -> HASH .)
    ADV_ASSIGNMENT_OP reduce using rule 74 (type -> HASH .)
    ASSIGNMENT_OP   reduce using rule 74 (type -> HASH .)
    RANGE_OP        reduce using rule 74 (type -> HASH .)
    OR_OP           reduce using rule 74 (type -> HASH .)
    AND_OP          reduce using rule 74 (type -> HASH .)
    BIT_OR          reduce using rule 74 (type -> HASH .)
    BIT_XOR         reduce using rule 74 (type -> HASH .)
    BIT_AND         reduce using rule 74 (type -> HASH .)
    EQUALS_OP       reduce using rule 74 (type -> HASH .)
    NOT_EQUALS_OP   reduce using rule 74 (type -> HASH .)
    COMPARE_OP      reduce using rule 74 (type -> HASH .)
    GREATER_OP      reduce using rule 74 (type -> HASH .)
    LESS_OP         reduce using rule 74 (type -> HASH .)
    GREATER_EQUAL_OP reduce using rule 74 (type -> HASH .)
    LESS_EQUAL_OP   reduce using rule 74 (type -> HASH .)
    BIT_RIGHT_SHIFT reduce using rule 74 (type -> HASH .)
    BIT_LEFT_SHIFT  reduce using rule 74 (type -> HASH .)
    PLUS_OP         reduce using rule 74 (type -> HASH .)
    MINUS_OP        reduce using rule 74 (type -> HASH .)
    CONCATENATE     reduce using rule 74 (type -> HASH .)
    MULTIPLICATION_OP reduce using rule 74 (type -> HASH .)
    DIVISION_OP     reduce using rule 74 (type -> HASH .)
    MODULUS_OP      reduce using rule 74 (type -> HASH .)
    REP_OP          reduce using rule 74 (type -> HASH .)
    SEARCH_MODIFY   reduce using rule 74 (type -> HASH .)
    SEARCH_MODIFY_NEG reduce using rule 74 (type -> HASH .)
    EXPONENT_OP     reduce using rule 74 (type -> HASH .)
    SEMICOLON       reduce using rule 74 (type -> HASH .)
    BLOCK_BEGIN     reduce using rule 74 (type -> HASH .)


state 29

    (20) statement -> ifthenelse .

    RETURN          reduce using rule 20 (statement -> ifthenelse .)
    IDENTIFIER      reduce using rule 20 (statement -> ifthenelse .)
    WHILE           reduce using rule 20 (statement -> ifthenelse .)
    FOR             reduce using rule 20 (statement -> ifthenelse .)
    PRINT           reduce using rule 20 (statement -> ifthenelse .)
    SUB             reduce using rule 20 (statement -> ifthenelse .)
    LAST            reduce using rule 20 (statement -> ifthenelse .)
    NEXT            reduce using rule 20 (statement -> ifthenelse .)
    IF              reduce using rule 20 (statement -> ifthenelse .)
    USE             reduce using rule 20 (statement -> ifthenelse .)
    SWITCH          reduce using rule 20 (statement -> ifthenelse .)
    PRIVATE         reduce using rule 20 (statement -> ifthenelse .)
    LOCAL           reduce using rule 20 (statement -> ifthenelse .)
    OPEN_PARANTHESIS reduce using rule 20 (statement -> ifthenelse .)
    ARRAY           reduce using rule 20 (statement -> ifthenelse .)
    HASH            reduce using rule 20 (statement -> ifthenelse .)
    VARIABLE        reduce using rule 20 (statement -> ifthenelse .)
    $end            reduce using rule 20 (statement -> ifthenelse .)
    BLOCK_ENDS      reduce using rule 20 (statement -> ifthenelse .)


state 30

    (57) forStatement -> FOR . OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block

    OPEN_PARANTHESIS shift and go to state 70


state 31

    (9) statement -> assignment .

    RETURN          reduce using rule 9 (statement -> assignment .)
    IDENTIFIER      reduce using rule 9 (statement -> assignment .)
    WHILE           reduce using rule 9 (statement -> assignment .)
    FOR             reduce using rule 9 (statement -> assignment .)
    PRINT           reduce using rule 9 (statement -> assignment .)
    SUB             reduce using rule 9 (statement -> assignment .)
    LAST            reduce using rule 9 (statement -> assignment .)
    NEXT            reduce using rule 9 (statement -> assignment .)
    IF              reduce using rule 9 (statement -> assignment .)
    USE             reduce using rule 9 (statement -> assignment .)
    SWITCH          reduce using rule 9 (statement -> assignment .)
    PRIVATE         reduce using rule 9 (statement -> assignment .)
    LOCAL           reduce using rule 9 (statement -> assignment .)
    OPEN_PARANTHESIS reduce using rule 9 (statement -> assignment .)
    ARRAY           reduce using rule 9 (statement -> assignment .)
    HASH            reduce using rule 9 (statement -> assignment .)
    VARIABLE        reduce using rule 9 (statement -> assignment .)
    $end            reduce using rule 9 (statement -> assignment .)
    BLOCK_ENDS      reduce using rule 9 (statement -> assignment .)


state 32

    (13) statement -> whileStatement .

    RETURN          reduce using rule 13 (statement -> whileStatement .)
    IDENTIFIER      reduce using rule 13 (statement -> whileStatement .)
    WHILE           reduce using rule 13 (statement -> whileStatement .)
    FOR             reduce using rule 13 (statement -> whileStatement .)
    PRINT           reduce using rule 13 (statement -> whileStatement .)
    SUB             reduce using rule 13 (statement -> whileStatement .)
    LAST            reduce using rule 13 (statement -> whileStatement .)
    NEXT            reduce using rule 13 (statement -> whileStatement .)
    IF              reduce using rule 13 (statement -> whileStatement .)
    USE             reduce using rule 13 (statement -> whileStatement .)
    SWITCH          reduce using rule 13 (statement -> whileStatement .)
    PRIVATE         reduce using rule 13 (statement -> whileStatement .)
    LOCAL           reduce using rule 13 (statement -> whileStatement .)
    OPEN_PARANTHESIS reduce using rule 13 (statement -> whileStatement .)
    ARRAY           reduce using rule 13 (statement -> whileStatement .)
    HASH            reduce using rule 13 (statement -> whileStatement .)
    VARIABLE        reduce using rule 13 (statement -> whileStatement .)
    $end            reduce using rule 13 (statement -> whileStatement .)
    BLOCK_ENDS      reduce using rule 13 (statement -> whileStatement .)


state 33

    (39) assignment -> lefthandside . assignmenttype expression SEMICOLON
    (48) declaration -> lefthandside . decList empty SEMICOLON
    (49) declaration -> lefthandside . decList CLOSE_PARANTHESIS SEMICOLON
    (40) assignmenttype -> . ADV_ASSIGNMENT_OP
    (41) assignmenttype -> . ASSIGNMENT_OP
    (50) decList -> . COMMA type decList
    (51) decList -> . empty
    (8) empty -> .

    ADV_ASSIGNMENT_OP shift and go to state 73
    ASSIGNMENT_OP   shift and go to state 75
    COMMA           shift and go to state 74
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)

    assignmenttype                 shift and go to state 71
    decList                        shift and go to state 72
    empty                          shift and go to state 76

state 34

    (12) statement -> functionCall .

    RETURN          reduce using rule 12 (statement -> functionCall .)
    IDENTIFIER      reduce using rule 12 (statement -> functionCall .)
    WHILE           reduce using rule 12 (statement -> functionCall .)
    FOR             reduce using rule 12 (statement -> functionCall .)
    PRINT           reduce using rule 12 (statement -> functionCall .)
    SUB             reduce using rule 12 (statement -> functionCall .)
    LAST            reduce using rule 12 (statement -> functionCall .)
    NEXT            reduce using rule 12 (statement -> functionCall .)
    IF              reduce using rule 12 (statement -> functionCall .)
    USE             reduce using rule 12 (statement -> functionCall .)
    SWITCH          reduce using rule 12 (statement -> functionCall .)
    PRIVATE         reduce using rule 12 (statement -> functionCall .)
    LOCAL           reduce using rule 12 (statement -> functionCall .)
    OPEN_PARANTHESIS reduce using rule 12 (statement -> functionCall .)
    ARRAY           reduce using rule 12 (statement -> functionCall .)
    HASH            reduce using rule 12 (statement -> functionCall .)
    VARIABLE        reduce using rule 12 (statement -> functionCall .)
    $end            reduce using rule 12 (statement -> functionCall .)
    BLOCK_ENDS      reduce using rule 12 (statement -> functionCall .)


state 35

    (10) statement -> declaration .

    RETURN          reduce using rule 10 (statement -> declaration .)
    IDENTIFIER      reduce using rule 10 (statement -> declaration .)
    WHILE           reduce using rule 10 (statement -> declaration .)
    FOR             reduce using rule 10 (statement -> declaration .)
    PRINT           reduce using rule 10 (statement -> declaration .)
    SUB             reduce using rule 10 (statement -> declaration .)
    LAST            reduce using rule 10 (statement -> declaration .)
    NEXT            reduce using rule 10 (statement -> declaration .)
    IF              reduce using rule 10 (statement -> declaration .)
    USE             reduce using rule 10 (statement -> declaration .)
    SWITCH          reduce using rule 10 (statement -> declaration .)
    PRIVATE         reduce using rule 10 (statement -> declaration .)
    LOCAL           reduce using rule 10 (statement -> declaration .)
    OPEN_PARANTHESIS reduce using rule 10 (statement -> declaration .)
    ARRAY           reduce using rule 10 (statement -> declaration .)
    HASH            reduce using rule 10 (statement -> declaration .)
    VARIABLE        reduce using rule 10 (statement -> declaration .)
    $end            reduce using rule 10 (statement -> declaration .)
    BLOCK_ENDS      reduce using rule 10 (statement -> declaration .)


state 36

    (75) type -> variable .

    COMMA           reduce using rule 75 (type -> variable .)
    CLOSE_PARANTHESIS reduce using rule 75 (type -> variable .)
    ADV_ASSIGNMENT_OP reduce using rule 75 (type -> variable .)
    ASSIGNMENT_OP   reduce using rule 75 (type -> variable .)
    SEMICOLON       reduce using rule 75 (type -> variable .)
    BLOCK_BEGIN     reduce using rule 75 (type -> variable .)


state 37

    (11) statement -> returnStatement .

    RETURN          reduce using rule 11 (statement -> returnStatement .)
    IDENTIFIER      reduce using rule 11 (statement -> returnStatement .)
    WHILE           reduce using rule 11 (statement -> returnStatement .)
    FOR             reduce using rule 11 (statement -> returnStatement .)
    PRINT           reduce using rule 11 (statement -> returnStatement .)
    SUB             reduce using rule 11 (statement -> returnStatement .)
    LAST            reduce using rule 11 (statement -> returnStatement .)
    NEXT            reduce using rule 11 (statement -> returnStatement .)
    IF              reduce using rule 11 (statement -> returnStatement .)
    USE             reduce using rule 11 (statement -> returnStatement .)
    SWITCH          reduce using rule 11 (statement -> returnStatement .)
    PRIVATE         reduce using rule 11 (statement -> returnStatement .)
    LOCAL           reduce using rule 11 (statement -> returnStatement .)
    OPEN_PARANTHESIS reduce using rule 11 (statement -> returnStatement .)
    ARRAY           reduce using rule 11 (statement -> returnStatement .)
    HASH            reduce using rule 11 (statement -> returnStatement .)
    VARIABLE        reduce using rule 11 (statement -> returnStatement .)
    $end            reduce using rule 11 (statement -> returnStatement .)
    BLOCK_ENDS      reduce using rule 11 (statement -> returnStatement .)


state 38

    (44) lefthandside -> LOCAL . empty type decList
    (45) lefthandside -> LOCAL . OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (8) empty -> .

    OPEN_PARANTHESIS shift and go to state 77
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)

    empty                          shift and go to state 78

state 39

    (73) type -> ARRAY .

    COMMA           reduce using rule 73 (type -> ARRAY .)
    CLOSE_PARANTHESIS reduce using rule 73 (type -> ARRAY .)
    INCREMENT_OP    reduce using rule 73 (type -> ARRAY .)
    DECREMENT_OP    reduce using rule 73 (type -> ARRAY .)
    OR_STR_OP       reduce using rule 73 (type -> ARRAY .)
    XOR_STR_OP      reduce using rule 73 (type -> ARRAY .)
    AND_STR_OP      reduce using rule 73 (type -> ARRAY .)
    NOT_STR_OP      reduce using rule 73 (type -> ARRAY .)
    ASSOCIATE_OP    reduce using rule 73 (type -> ARRAY .)
    ADV_ASSIGNMENT_OP reduce using rule 73 (type -> ARRAY .)
    ASSIGNMENT_OP   reduce using rule 73 (type -> ARRAY .)
    RANGE_OP        reduce using rule 73 (type -> ARRAY .)
    OR_OP           reduce using rule 73 (type -> ARRAY .)
    AND_OP          reduce using rule 73 (type -> ARRAY .)
    BIT_OR          reduce using rule 73 (type -> ARRAY .)
    BIT_XOR         reduce using rule 73 (type -> ARRAY .)
    BIT_AND         reduce using rule 73 (type -> ARRAY .)
    EQUALS_OP       reduce using rule 73 (type -> ARRAY .)
    NOT_EQUALS_OP   reduce using rule 73 (type -> ARRAY .)
    COMPARE_OP      reduce using rule 73 (type -> ARRAY .)
    GREATER_OP      reduce using rule 73 (type -> ARRAY .)
    LESS_OP         reduce using rule 73 (type -> ARRAY .)
    GREATER_EQUAL_OP reduce using rule 73 (type -> ARRAY .)
    LESS_EQUAL_OP   reduce using rule 73 (type -> ARRAY .)
    BIT_RIGHT_SHIFT reduce using rule 73 (type -> ARRAY .)
    BIT_LEFT_SHIFT  reduce using rule 73 (type -> ARRAY .)
    PLUS_OP         reduce using rule 73 (type -> ARRAY .)
    MINUS_OP        reduce using rule 73 (type -> ARRAY .)
    CONCATENATE     reduce using rule 73 (type -> ARRAY .)
    MULTIPLICATION_OP reduce using rule 73 (type -> ARRAY .)
    DIVISION_OP     reduce using rule 73 (type -> ARRAY .)
    MODULUS_OP      reduce using rule 73 (type -> ARRAY .)
    REP_OP          reduce using rule 73 (type -> ARRAY .)
    SEARCH_MODIFY   reduce using rule 73 (type -> ARRAY .)
    SEARCH_MODIFY_NEG reduce using rule 73 (type -> ARRAY .)
    EXPONENT_OP     reduce using rule 73 (type -> ARRAY .)
    SEMICOLON       reduce using rule 73 (type -> ARRAY .)
    BLOCK_BEGIN     reduce using rule 73 (type -> ARRAY .)


state 40

    (28) ifthen -> IF . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
    (29) ifthenelse -> IF . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block

    OPEN_PARANTHESIS shift and go to state 79


state 41

    (2) start1 -> block .

    $end            reduce using rule 2 (start1 -> block .)


state 42

    (23) useStatement -> USE IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 80


state 43

    (46) lefthandside -> OPEN_PARANTHESIS type . decList CLOSE_PARANTHESIS
    (50) decList -> . COMMA type decList
    (51) decList -> . empty
    (8) empty -> .

    COMMA           shift and go to state 74
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)

    empty                          shift and go to state 76
    decList                        shift and go to state 81

state 44

    (4) block -> BLOCK_BEGIN statements . BLOCK_ENDS

    BLOCK_ENDS      shift and go to state 82


state 45

    (66) variable -> VARIABLE OPEN_BRACKET . NUMBER CLOSE_BRACKET

    NUMBER          shift and go to state 83


state 46

    (67) variable -> VARIABLE BLOCK_BEGIN . string BLOCK_ENDS
    (58) string -> . STRING
    (59) string -> . RES_STRING

    STRING          shift and go to state 86
    RES_STRING      shift and go to state 85

    string                         shift and go to state 84

state 47

    (65) variable -> VARIABLE empty . empty empty
    (8) empty -> .

    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    INCREMENT_OP    reduce using rule 8 (empty -> .)
    DECREMENT_OP    reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    PLUS_OP         reduce using rule 8 (empty -> .)
    MINUS_OP        reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    BLOCK_BEGIN     reduce using rule 8 (empty -> .)

    empty                          shift and go to state 87

state 48

    (56) whileStatement -> WHILE OPEN_PARANTHESIS . expression CLOSE_PARANTHESIS block
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 88
    empty                          shift and go to state 55

state 49

    (33) printStatement -> PRINT OPEN_PARANTHESIS . string1 CLOSE_PARANTHESIS SEMICOLON
    (36) string1 -> . STRING
    (37) string1 -> . RES_STRING

    STRING          shift and go to state 89
    RES_STRING      shift and go to state 90

    string1                        shift and go to state 91

state 50

    (34) printStatement -> PRINT empty . string1 empty SEMICOLON
    (35) printStatement -> PRINT empty . expression empty SEMICOLON
    (36) string1 -> . STRING
    (37) string1 -> . RES_STRING
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for RES_STRING resolved as shift
    STRING          shift and go to state 89
    RES_STRING      shift and go to state 90
    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! STRING          [ reduce using rule 8 (empty -> .) ]
  ! RES_STRING      [ reduce using rule 8 (empty -> .) ]
  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 93
    empty                          shift and go to state 55
    string1                        shift and go to state 92

state 51

    (72) term -> OPEN_PARANTHESIS . expression CLOSE_PARANTHESIS
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 94
    empty                          shift and go to state 55

state 52

    (77) expression -> MINUS_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 95
    empty                          shift and go to state 55

state 53

    (79) expression -> NOT_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 96
    empty                          shift and go to state 55

state 54

    (78) expression -> BIT_FLIP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 97
    empty                          shift and go to state 55

state 55

    (84) expression -> empty .
    (68) term -> empty . number empty
    (69) term -> empty . type empty
    (70) term -> empty . variable empty
    (71) term -> empty . string empty
    (60) number -> . NUMBER
    (61) number -> . SCI_NOT
    (62) number -> . FLOAT
    (63) number -> . HEXADECIMAL
    (64) number -> . OCTAL
    (73) type -> . ARRAY
    (74) type -> . HASH
    (75) type -> . variable
    (65) variable -> . VARIABLE empty empty empty
    (66) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (67) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (58) string -> . STRING
    (59) string -> . RES_STRING

    INCREMENT_OP    reduce using rule 84 (expression -> empty .)
    DECREMENT_OP    reduce using rule 84 (expression -> empty .)
    OR_STR_OP       reduce using rule 84 (expression -> empty .)
    XOR_STR_OP      reduce using rule 84 (expression -> empty .)
    AND_STR_OP      reduce using rule 84 (expression -> empty .)
    NOT_STR_OP      reduce using rule 84 (expression -> empty .)
    COMMA           reduce using rule 84 (expression -> empty .)
    ASSOCIATE_OP    reduce using rule 84 (expression -> empty .)
    ADV_ASSIGNMENT_OP reduce using rule 84 (expression -> empty .)
    ASSIGNMENT_OP   reduce using rule 84 (expression -> empty .)
    RANGE_OP        reduce using rule 84 (expression -> empty .)
    OR_OP           reduce using rule 84 (expression -> empty .)
    AND_OP          reduce using rule 84 (expression -> empty .)
    BIT_OR          reduce using rule 84 (expression -> empty .)
    BIT_XOR         reduce using rule 84 (expression -> empty .)
    BIT_AND         reduce using rule 84 (expression -> empty .)
    EQUALS_OP       reduce using rule 84 (expression -> empty .)
    NOT_EQUALS_OP   reduce using rule 84 (expression -> empty .)
    COMPARE_OP      reduce using rule 84 (expression -> empty .)
    GREATER_OP      reduce using rule 84 (expression -> empty .)
    LESS_OP         reduce using rule 84 (expression -> empty .)
    GREATER_EQUAL_OP reduce using rule 84 (expression -> empty .)
    LESS_EQUAL_OP   reduce using rule 84 (expression -> empty .)
    BIT_RIGHT_SHIFT reduce using rule 84 (expression -> empty .)
    BIT_LEFT_SHIFT  reduce using rule 84 (expression -> empty .)
    PLUS_OP         reduce using rule 84 (expression -> empty .)
    MINUS_OP        reduce using rule 84 (expression -> empty .)
    CONCATENATE     reduce using rule 84 (expression -> empty .)
    MULTIPLICATION_OP reduce using rule 84 (expression -> empty .)
    DIVISION_OP     reduce using rule 84 (expression -> empty .)
    MODULUS_OP      reduce using rule 84 (expression -> empty .)
    REP_OP          reduce using rule 84 (expression -> empty .)
    SEARCH_MODIFY   reduce using rule 84 (expression -> empty .)
    SEARCH_MODIFY_NEG reduce using rule 84 (expression -> empty .)
    EXPONENT_OP     reduce using rule 84 (expression -> empty .)
    SEMICOLON       reduce using rule 84 (expression -> empty .)
    CLOSE_PARANTHESIS reduce using rule 84 (expression -> empty .)
    NUMBER          shift and go to state 100
    SCI_NOT         shift and go to state 101
    FLOAT           shift and go to state 99
    HEXADECIMAL     shift and go to state 105
    OCTAL           shift and go to state 103
    ARRAY           shift and go to state 39
    HASH            shift and go to state 28
    VARIABLE        shift and go to state 9
    STRING          shift and go to state 86
    RES_STRING      shift and go to state 85

    variable                       shift and go to state 104
    type                           shift and go to state 106
    number                         shift and go to state 102
    string                         shift and go to state 98

state 56

    (81) expression -> DECREMENT_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 107
    empty                          shift and go to state 55

state 57

    (85) expression -> term .

    INCREMENT_OP    reduce using rule 85 (expression -> term .)
    DECREMENT_OP    reduce using rule 85 (expression -> term .)
    OR_STR_OP       reduce using rule 85 (expression -> term .)
    XOR_STR_OP      reduce using rule 85 (expression -> term .)
    AND_STR_OP      reduce using rule 85 (expression -> term .)
    NOT_STR_OP      reduce using rule 85 (expression -> term .)
    COMMA           reduce using rule 85 (expression -> term .)
    ASSOCIATE_OP    reduce using rule 85 (expression -> term .)
    ADV_ASSIGNMENT_OP reduce using rule 85 (expression -> term .)
    ASSIGNMENT_OP   reduce using rule 85 (expression -> term .)
    RANGE_OP        reduce using rule 85 (expression -> term .)
    OR_OP           reduce using rule 85 (expression -> term .)
    AND_OP          reduce using rule 85 (expression -> term .)
    BIT_OR          reduce using rule 85 (expression -> term .)
    BIT_XOR         reduce using rule 85 (expression -> term .)
    BIT_AND         reduce using rule 85 (expression -> term .)
    EQUALS_OP       reduce using rule 85 (expression -> term .)
    NOT_EQUALS_OP   reduce using rule 85 (expression -> term .)
    COMPARE_OP      reduce using rule 85 (expression -> term .)
    GREATER_OP      reduce using rule 85 (expression -> term .)
    LESS_OP         reduce using rule 85 (expression -> term .)
    GREATER_EQUAL_OP reduce using rule 85 (expression -> term .)
    LESS_EQUAL_OP   reduce using rule 85 (expression -> term .)
    BIT_RIGHT_SHIFT reduce using rule 85 (expression -> term .)
    BIT_LEFT_SHIFT  reduce using rule 85 (expression -> term .)
    PLUS_OP         reduce using rule 85 (expression -> term .)
    MINUS_OP        reduce using rule 85 (expression -> term .)
    CONCATENATE     reduce using rule 85 (expression -> term .)
    MULTIPLICATION_OP reduce using rule 85 (expression -> term .)
    DIVISION_OP     reduce using rule 85 (expression -> term .)
    MODULUS_OP      reduce using rule 85 (expression -> term .)
    REP_OP          reduce using rule 85 (expression -> term .)
    SEARCH_MODIFY   reduce using rule 85 (expression -> term .)
    SEARCH_MODIFY_NEG reduce using rule 85 (expression -> term .)
    EXPONENT_OP     reduce using rule 85 (expression -> term .)
    SEMICOLON       reduce using rule 85 (expression -> term .)
    CLOSE_PARANTHESIS reduce using rule 85 (expression -> term .)


state 58

    (80) expression -> INCREMENT_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 108
    empty                          shift and go to state 55

state 59

    (76) expression -> PLUS_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 109
    empty                          shift and go to state 55

state 60

    (38) returnStatement -> RETURN expression . SEMICOLON
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    SEMICOLON       shift and go to state 121
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    OR_STR_OP       shift and go to state 134
    XOR_STR_OP      shift and go to state 129
    AND_STR_OP      shift and go to state 122
    NOT_STR_OP      shift and go to state 116
    COMMA           shift and go to state 125
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115


state 61

    (32) functionStatement -> SUB IDENTIFIER . block
    (4) block -> . BLOCK_BEGIN statements BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 8

    block                          shift and go to state 146

state 62

    (30) lastStatement -> LAST SEMICOLON .

    RETURN          reduce using rule 30 (lastStatement -> LAST SEMICOLON .)
    IDENTIFIER      reduce using rule 30 (lastStatement -> LAST SEMICOLON .)
    WHILE           reduce using rule 30 (lastStatement -> LAST SEMICOLON .)
    FOR             reduce using rule 30 (lastStatement -> LAST SEMICOLON .)
    PRINT           reduce using rule 30 (lastStatement -> LAST SEMICOLON .)
    SUB             reduce using rule 30 (lastStatement -> LAST SEMICOLON .)
    LAST            reduce using rule 30 (lastStatement -> LAST SEMICOLON .)
    NEXT            reduce using rule 30 (lastStatement -> LAST SEMICOLON .)
    IF              reduce using rule 30 (lastStatement -> LAST SEMICOLON .)
    USE             reduce using rule 30 (lastStatement -> LAST SEMICOLON .)
    SWITCH          reduce using rule 30 (lastStatement -> LAST SEMICOLON .)
    PRIVATE         reduce using rule 30 (lastStatement -> LAST SEMICOLON .)
    LOCAL           reduce using rule 30 (lastStatement -> LAST SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 30 (lastStatement -> LAST SEMICOLON .)
    ARRAY           reduce using rule 30 (lastStatement -> LAST SEMICOLON .)
    HASH            reduce using rule 30 (lastStatement -> LAST SEMICOLON .)
    VARIABLE        reduce using rule 30 (lastStatement -> LAST SEMICOLON .)
    $end            reduce using rule 30 (lastStatement -> LAST SEMICOLON .)
    BLOCK_ENDS      reduce using rule 30 (lastStatement -> LAST SEMICOLON .)


state 63

    (24) switchStatement -> SWITCH empty . lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS
    (42) lefthandside -> . PRIVATE empty type decList
    (43) lefthandside -> . PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (44) lefthandside -> . LOCAL empty type decList
    (45) lefthandside -> . LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (46) lefthandside -> . OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
    (47) lefthandside -> . type
    (73) type -> . ARRAY
    (74) type -> . HASH
    (75) type -> . variable
    (65) variable -> . VARIABLE empty empty empty
    (66) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (67) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    PRIVATE         shift and go to state 18
    LOCAL           shift and go to state 38
    OPEN_PARANTHESIS shift and go to state 5
    ARRAY           shift and go to state 39
    HASH            shift and go to state 28
    VARIABLE        shift and go to state 9

    lefthandside                   shift and go to state 147
    variable                       shift and go to state 36
    type                           shift and go to state 26

state 64

    (43) lefthandside -> PRIVATE OPEN_PARANTHESIS . type decList CLOSE_PARANTHESIS
    (73) type -> . ARRAY
    (74) type -> . HASH
    (75) type -> . variable
    (65) variable -> . VARIABLE empty empty empty
    (66) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (67) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    ARRAY           shift and go to state 39
    HASH            shift and go to state 28
    VARIABLE        shift and go to state 9

    variable                       shift and go to state 36
    type                           shift and go to state 148

state 65

    (42) lefthandside -> PRIVATE empty . type decList
    (73) type -> . ARRAY
    (74) type -> . HASH
    (75) type -> . variable
    (65) variable -> . VARIABLE empty empty empty
    (66) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (67) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    ARRAY           shift and go to state 39
    HASH            shift and go to state 28
    VARIABLE        shift and go to state 9

    variable                       shift and go to state 36
    type                           shift and go to state 149

state 66

    (31) nextStatement -> NEXT SEMICOLON .

    RETURN          reduce using rule 31 (nextStatement -> NEXT SEMICOLON .)
    IDENTIFIER      reduce using rule 31 (nextStatement -> NEXT SEMICOLON .)
    WHILE           reduce using rule 31 (nextStatement -> NEXT SEMICOLON .)
    FOR             reduce using rule 31 (nextStatement -> NEXT SEMICOLON .)
    PRINT           reduce using rule 31 (nextStatement -> NEXT SEMICOLON .)
    SUB             reduce using rule 31 (nextStatement -> NEXT SEMICOLON .)
    LAST            reduce using rule 31 (nextStatement -> NEXT SEMICOLON .)
    NEXT            reduce using rule 31 (nextStatement -> NEXT SEMICOLON .)
    IF              reduce using rule 31 (nextStatement -> NEXT SEMICOLON .)
    USE             reduce using rule 31 (nextStatement -> NEXT SEMICOLON .)
    SWITCH          reduce using rule 31 (nextStatement -> NEXT SEMICOLON .)
    PRIVATE         reduce using rule 31 (nextStatement -> NEXT SEMICOLON .)
    LOCAL           reduce using rule 31 (nextStatement -> NEXT SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 31 (nextStatement -> NEXT SEMICOLON .)
    ARRAY           reduce using rule 31 (nextStatement -> NEXT SEMICOLON .)
    HASH            reduce using rule 31 (nextStatement -> NEXT SEMICOLON .)
    VARIABLE        reduce using rule 31 (nextStatement -> NEXT SEMICOLON .)
    $end            reduce using rule 31 (nextStatement -> NEXT SEMICOLON .)
    BLOCK_ENDS      reduce using rule 31 (nextStatement -> NEXT SEMICOLON .)


state 67

    (5) statements -> statement statements .

    BLOCK_ENDS      reduce using rule 5 (statements -> statement statements .)
    $end            reduce using rule 5 (statements -> statement statements .)


state 68

    (6) statements -> statement empty .
    (7) statements -> empty .

  ! reduce/reduce conflict for $end resolved using rule 6 (statements -> statement empty .)
  ! reduce/reduce conflict for BLOCK_ENDS resolved using rule 6 (statements -> statement empty .)
    BLOCK_ENDS      reduce using rule 6 (statements -> statement empty .)
    $end            reduce using rule 6 (statements -> statement empty .)

  ! $end            [ reduce using rule 7 (statements -> empty .) ]
  ! BLOCK_ENDS      [ reduce using rule 7 (statements -> empty .) ]


state 69

    (52) functionCall -> IDENTIFIER OPEN_PARANTHESIS . parameters CLOSE_PARANTHESIS SEMICOLON
    (53) parameters -> . expression COMMA parameters
    (54) parameters -> . expression empty empty
    (55) parameters -> . empty
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    parameters                     shift and go to state 151
    expression                     shift and go to state 152
    empty                          shift and go to state 150

state 70

    (57) forStatement -> FOR OPEN_PARANTHESIS . expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 153
    empty                          shift and go to state 55

state 71

    (39) assignment -> lefthandside assignmenttype . expression SEMICOLON
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 154
    empty                          shift and go to state 55

state 72

    (48) declaration -> lefthandside decList . empty SEMICOLON
    (49) declaration -> lefthandside decList . CLOSE_PARANTHESIS SEMICOLON
    (8) empty -> .

    CLOSE_PARANTHESIS shift and go to state 155
    SEMICOLON       reduce using rule 8 (empty -> .)

    empty                          shift and go to state 156

state 73

    (40) assignmenttype -> ADV_ASSIGNMENT_OP .

    PLUS_OP         reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    MINUS_OP        reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    BIT_FLIP        reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    NOT_OP          reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    INCREMENT_OP    reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    DECREMENT_OP    reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    OPEN_PARANTHESIS reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    SEMICOLON       reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    OR_STR_OP       reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    XOR_STR_OP      reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    AND_STR_OP      reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    NOT_STR_OP      reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    COMMA           reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    ASSOCIATE_OP    reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    ADV_ASSIGNMENT_OP reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    ASSIGNMENT_OP   reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    RANGE_OP        reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    OR_OP           reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    AND_OP          reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    BIT_OR          reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    BIT_XOR         reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    BIT_AND         reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    EQUALS_OP       reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    NOT_EQUALS_OP   reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    COMPARE_OP      reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    GREATER_OP      reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    LESS_OP         reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    GREATER_EQUAL_OP reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    LESS_EQUAL_OP   reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    BIT_RIGHT_SHIFT reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    BIT_LEFT_SHIFT  reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    CONCATENATE     reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    MULTIPLICATION_OP reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    DIVISION_OP     reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    MODULUS_OP      reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    REP_OP          reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    SEARCH_MODIFY   reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    SEARCH_MODIFY_NEG reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    EXPONENT_OP     reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    NUMBER          reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    SCI_NOT         reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    FLOAT           reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    HEXADECIMAL     reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    OCTAL           reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    ARRAY           reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    HASH            reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    VARIABLE        reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    STRING          reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    RES_STRING      reduce using rule 40 (assignmenttype -> ADV_ASSIGNMENT_OP .)


state 74

    (50) decList -> COMMA . type decList
    (73) type -> . ARRAY
    (74) type -> . HASH
    (75) type -> . variable
    (65) variable -> . VARIABLE empty empty empty
    (66) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (67) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    ARRAY           shift and go to state 39
    HASH            shift and go to state 28
    VARIABLE        shift and go to state 9

    variable                       shift and go to state 36
    type                           shift and go to state 157

state 75

    (41) assignmenttype -> ASSIGNMENT_OP .

    PLUS_OP         reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    MINUS_OP        reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    BIT_FLIP        reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    NOT_OP          reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    INCREMENT_OP    reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    DECREMENT_OP    reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    OPEN_PARANTHESIS reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    SEMICOLON       reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    OR_STR_OP       reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    XOR_STR_OP      reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    AND_STR_OP      reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    NOT_STR_OP      reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    COMMA           reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    ASSOCIATE_OP    reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    ADV_ASSIGNMENT_OP reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    ASSIGNMENT_OP   reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    RANGE_OP        reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    OR_OP           reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    AND_OP          reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    BIT_OR          reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    BIT_XOR         reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    BIT_AND         reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    EQUALS_OP       reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    NOT_EQUALS_OP   reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    COMPARE_OP      reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    GREATER_OP      reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    LESS_OP         reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    GREATER_EQUAL_OP reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    LESS_EQUAL_OP   reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    BIT_RIGHT_SHIFT reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    BIT_LEFT_SHIFT  reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    CONCATENATE     reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    MULTIPLICATION_OP reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    DIVISION_OP     reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    MODULUS_OP      reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    REP_OP          reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    SEARCH_MODIFY   reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    SEARCH_MODIFY_NEG reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    EXPONENT_OP     reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    NUMBER          reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    SCI_NOT         reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    FLOAT           reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    HEXADECIMAL     reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    OCTAL           reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    ARRAY           reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    HASH            reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    VARIABLE        reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    STRING          reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)
    RES_STRING      reduce using rule 41 (assignmenttype -> ASSIGNMENT_OP .)


state 76

    (51) decList -> empty .

    CLOSE_PARANTHESIS reduce using rule 51 (decList -> empty .)
    SEMICOLON       reduce using rule 51 (decList -> empty .)
    ADV_ASSIGNMENT_OP reduce using rule 51 (decList -> empty .)
    ASSIGNMENT_OP   reduce using rule 51 (decList -> empty .)
    COMMA           reduce using rule 51 (decList -> empty .)
    BLOCK_BEGIN     reduce using rule 51 (decList -> empty .)


state 77

    (45) lefthandside -> LOCAL OPEN_PARANTHESIS . type decList CLOSE_PARANTHESIS
    (73) type -> . ARRAY
    (74) type -> . HASH
    (75) type -> . variable
    (65) variable -> . VARIABLE empty empty empty
    (66) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (67) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    ARRAY           shift and go to state 39
    HASH            shift and go to state 28
    VARIABLE        shift and go to state 9

    variable                       shift and go to state 36
    type                           shift and go to state 158

state 78

    (44) lefthandside -> LOCAL empty . type decList
    (73) type -> . ARRAY
    (74) type -> . HASH
    (75) type -> . variable
    (65) variable -> . VARIABLE empty empty empty
    (66) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (67) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    ARRAY           shift and go to state 39
    HASH            shift and go to state 28
    VARIABLE        shift and go to state 9

    variable                       shift and go to state 36
    type                           shift and go to state 159

state 79

    (28) ifthen -> IF OPEN_PARANTHESIS . expression CLOSE_PARANTHESIS block
    (29) ifthenelse -> IF OPEN_PARANTHESIS . expression CLOSE_PARANTHESIS block ELSE block
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 160
    empty                          shift and go to state 55

state 80

    (23) useStatement -> USE IDENTIFIER SEMICOLON .

    RETURN          reduce using rule 23 (useStatement -> USE IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 23 (useStatement -> USE IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 23 (useStatement -> USE IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 23 (useStatement -> USE IDENTIFIER SEMICOLON .)
    PRINT           reduce using rule 23 (useStatement -> USE IDENTIFIER SEMICOLON .)
    SUB             reduce using rule 23 (useStatement -> USE IDENTIFIER SEMICOLON .)
    LAST            reduce using rule 23 (useStatement -> USE IDENTIFIER SEMICOLON .)
    NEXT            reduce using rule 23 (useStatement -> USE IDENTIFIER SEMICOLON .)
    IF              reduce using rule 23 (useStatement -> USE IDENTIFIER SEMICOLON .)
    USE             reduce using rule 23 (useStatement -> USE IDENTIFIER SEMICOLON .)
    SWITCH          reduce using rule 23 (useStatement -> USE IDENTIFIER SEMICOLON .)
    PRIVATE         reduce using rule 23 (useStatement -> USE IDENTIFIER SEMICOLON .)
    LOCAL           reduce using rule 23 (useStatement -> USE IDENTIFIER SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 23 (useStatement -> USE IDENTIFIER SEMICOLON .)
    ARRAY           reduce using rule 23 (useStatement -> USE IDENTIFIER SEMICOLON .)
    HASH            reduce using rule 23 (useStatement -> USE IDENTIFIER SEMICOLON .)
    VARIABLE        reduce using rule 23 (useStatement -> USE IDENTIFIER SEMICOLON .)
    $end            reduce using rule 23 (useStatement -> USE IDENTIFIER SEMICOLON .)
    BLOCK_ENDS      reduce using rule 23 (useStatement -> USE IDENTIFIER SEMICOLON .)


state 81

    (46) lefthandside -> OPEN_PARANTHESIS type decList . CLOSE_PARANTHESIS

    CLOSE_PARANTHESIS shift and go to state 161


state 82

    (4) block -> BLOCK_BEGIN statements BLOCK_ENDS .

    ELSE            reduce using rule 4 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    RETURN          reduce using rule 4 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    IDENTIFIER      reduce using rule 4 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    WHILE           reduce using rule 4 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    FOR             reduce using rule 4 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    PRINT           reduce using rule 4 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    SUB             reduce using rule 4 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    LAST            reduce using rule 4 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    NEXT            reduce using rule 4 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    IF              reduce using rule 4 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    USE             reduce using rule 4 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    SWITCH          reduce using rule 4 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    PRIVATE         reduce using rule 4 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    LOCAL           reduce using rule 4 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    OPEN_PARANTHESIS reduce using rule 4 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    ARRAY           reduce using rule 4 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    HASH            reduce using rule 4 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    VARIABLE        reduce using rule 4 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    $end            reduce using rule 4 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    BLOCK_ENDS      reduce using rule 4 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    CASE            reduce using rule 4 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)


state 83

    (66) variable -> VARIABLE OPEN_BRACKET NUMBER . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 162


state 84

    (67) variable -> VARIABLE BLOCK_BEGIN string . BLOCK_ENDS

    BLOCK_ENDS      shift and go to state 163


state 85

    (59) string -> RES_STRING .

    COMMA           reduce using rule 59 (string -> RES_STRING .)
    INCREMENT_OP    reduce using rule 59 (string -> RES_STRING .)
    DECREMENT_OP    reduce using rule 59 (string -> RES_STRING .)
    OR_STR_OP       reduce using rule 59 (string -> RES_STRING .)
    XOR_STR_OP      reduce using rule 59 (string -> RES_STRING .)
    AND_STR_OP      reduce using rule 59 (string -> RES_STRING .)
    NOT_STR_OP      reduce using rule 59 (string -> RES_STRING .)
    ASSOCIATE_OP    reduce using rule 59 (string -> RES_STRING .)
    ADV_ASSIGNMENT_OP reduce using rule 59 (string -> RES_STRING .)
    ASSIGNMENT_OP   reduce using rule 59 (string -> RES_STRING .)
    RANGE_OP        reduce using rule 59 (string -> RES_STRING .)
    OR_OP           reduce using rule 59 (string -> RES_STRING .)
    AND_OP          reduce using rule 59 (string -> RES_STRING .)
    BIT_OR          reduce using rule 59 (string -> RES_STRING .)
    BIT_XOR         reduce using rule 59 (string -> RES_STRING .)
    BIT_AND         reduce using rule 59 (string -> RES_STRING .)
    EQUALS_OP       reduce using rule 59 (string -> RES_STRING .)
    NOT_EQUALS_OP   reduce using rule 59 (string -> RES_STRING .)
    COMPARE_OP      reduce using rule 59 (string -> RES_STRING .)
    GREATER_OP      reduce using rule 59 (string -> RES_STRING .)
    LESS_OP         reduce using rule 59 (string -> RES_STRING .)
    GREATER_EQUAL_OP reduce using rule 59 (string -> RES_STRING .)
    LESS_EQUAL_OP   reduce using rule 59 (string -> RES_STRING .)
    BIT_RIGHT_SHIFT reduce using rule 59 (string -> RES_STRING .)
    BIT_LEFT_SHIFT  reduce using rule 59 (string -> RES_STRING .)
    PLUS_OP         reduce using rule 59 (string -> RES_STRING .)
    MINUS_OP        reduce using rule 59 (string -> RES_STRING .)
    CONCATENATE     reduce using rule 59 (string -> RES_STRING .)
    MULTIPLICATION_OP reduce using rule 59 (string -> RES_STRING .)
    DIVISION_OP     reduce using rule 59 (string -> RES_STRING .)
    MODULUS_OP      reduce using rule 59 (string -> RES_STRING .)
    REP_OP          reduce using rule 59 (string -> RES_STRING .)
    SEARCH_MODIFY   reduce using rule 59 (string -> RES_STRING .)
    SEARCH_MODIFY_NEG reduce using rule 59 (string -> RES_STRING .)
    EXPONENT_OP     reduce using rule 59 (string -> RES_STRING .)
    CLOSE_PARANTHESIS reduce using rule 59 (string -> RES_STRING .)
    BLOCK_ENDS      reduce using rule 59 (string -> RES_STRING .)
    SEMICOLON       reduce using rule 59 (string -> RES_STRING .)


state 86

    (58) string -> STRING .

    COMMA           reduce using rule 58 (string -> STRING .)
    INCREMENT_OP    reduce using rule 58 (string -> STRING .)
    DECREMENT_OP    reduce using rule 58 (string -> STRING .)
    OR_STR_OP       reduce using rule 58 (string -> STRING .)
    XOR_STR_OP      reduce using rule 58 (string -> STRING .)
    AND_STR_OP      reduce using rule 58 (string -> STRING .)
    NOT_STR_OP      reduce using rule 58 (string -> STRING .)
    ASSOCIATE_OP    reduce using rule 58 (string -> STRING .)
    ADV_ASSIGNMENT_OP reduce using rule 58 (string -> STRING .)
    ASSIGNMENT_OP   reduce using rule 58 (string -> STRING .)
    RANGE_OP        reduce using rule 58 (string -> STRING .)
    OR_OP           reduce using rule 58 (string -> STRING .)
    AND_OP          reduce using rule 58 (string -> STRING .)
    BIT_OR          reduce using rule 58 (string -> STRING .)
    BIT_XOR         reduce using rule 58 (string -> STRING .)
    BIT_AND         reduce using rule 58 (string -> STRING .)
    EQUALS_OP       reduce using rule 58 (string -> STRING .)
    NOT_EQUALS_OP   reduce using rule 58 (string -> STRING .)
    COMPARE_OP      reduce using rule 58 (string -> STRING .)
    GREATER_OP      reduce using rule 58 (string -> STRING .)
    LESS_OP         reduce using rule 58 (string -> STRING .)
    GREATER_EQUAL_OP reduce using rule 58 (string -> STRING .)
    LESS_EQUAL_OP   reduce using rule 58 (string -> STRING .)
    BIT_RIGHT_SHIFT reduce using rule 58 (string -> STRING .)
    BIT_LEFT_SHIFT  reduce using rule 58 (string -> STRING .)
    PLUS_OP         reduce using rule 58 (string -> STRING .)
    MINUS_OP        reduce using rule 58 (string -> STRING .)
    CONCATENATE     reduce using rule 58 (string -> STRING .)
    MULTIPLICATION_OP reduce using rule 58 (string -> STRING .)
    DIVISION_OP     reduce using rule 58 (string -> STRING .)
    MODULUS_OP      reduce using rule 58 (string -> STRING .)
    REP_OP          reduce using rule 58 (string -> STRING .)
    SEARCH_MODIFY   reduce using rule 58 (string -> STRING .)
    SEARCH_MODIFY_NEG reduce using rule 58 (string -> STRING .)
    EXPONENT_OP     reduce using rule 58 (string -> STRING .)
    CLOSE_PARANTHESIS reduce using rule 58 (string -> STRING .)
    BLOCK_ENDS      reduce using rule 58 (string -> STRING .)
    SEMICOLON       reduce using rule 58 (string -> STRING .)


state 87

    (65) variable -> VARIABLE empty empty . empty
    (8) empty -> .

    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    INCREMENT_OP    reduce using rule 8 (empty -> .)
    DECREMENT_OP    reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    PLUS_OP         reduce using rule 8 (empty -> .)
    MINUS_OP        reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    BLOCK_BEGIN     reduce using rule 8 (empty -> .)

    empty                          shift and go to state 164

state 88

    (56) whileStatement -> WHILE OPEN_PARANTHESIS expression . CLOSE_PARANTHESIS block
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS shift and go to state 165
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    OR_STR_OP       shift and go to state 134
    XOR_STR_OP      shift and go to state 129
    AND_STR_OP      shift and go to state 122
    NOT_STR_OP      shift and go to state 116
    COMMA           shift and go to state 125
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115


state 89

    (36) string1 -> STRING .

    SEMICOLON       reduce using rule 36 (string1 -> STRING .)
    CLOSE_PARANTHESIS reduce using rule 36 (string1 -> STRING .)


state 90

    (37) string1 -> RES_STRING .

    SEMICOLON       reduce using rule 37 (string1 -> RES_STRING .)
    CLOSE_PARANTHESIS reduce using rule 37 (string1 -> RES_STRING .)


state 91

    (33) printStatement -> PRINT OPEN_PARANTHESIS string1 . CLOSE_PARANTHESIS SEMICOLON

    CLOSE_PARANTHESIS shift and go to state 166


state 92

    (34) printStatement -> PRINT empty string1 . empty SEMICOLON
    (8) empty -> .

    SEMICOLON       reduce using rule 8 (empty -> .)

    empty                          shift and go to state 167

state 93

    (35) printStatement -> PRINT empty expression . empty SEMICOLON
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression
    (8) empty -> .

    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    OR_STR_OP       shift and go to state 134
    XOR_STR_OP      shift and go to state 129
    AND_STR_OP      shift and go to state 122
    NOT_STR_OP      shift and go to state 116
    COMMA           shift and go to state 125
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115
    SEMICOLON       reduce using rule 8 (empty -> .)

    empty                          shift and go to state 168

state 94

    (72) term -> OPEN_PARANTHESIS expression . CLOSE_PARANTHESIS
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS shift and go to state 169
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    OR_STR_OP       shift and go to state 134
    XOR_STR_OP      shift and go to state 129
    AND_STR_OP      shift and go to state 122
    NOT_STR_OP      shift and go to state 116
    COMMA           shift and go to state 125
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115


state 95

    (77) expression -> MINUS_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 77 (expression -> MINUS_OP expression .)
    XOR_STR_OP      reduce using rule 77 (expression -> MINUS_OP expression .)
    AND_STR_OP      reduce using rule 77 (expression -> MINUS_OP expression .)
    NOT_STR_OP      reduce using rule 77 (expression -> MINUS_OP expression .)
    COMMA           reduce using rule 77 (expression -> MINUS_OP expression .)
    ASSOCIATE_OP    reduce using rule 77 (expression -> MINUS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 77 (expression -> MINUS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 77 (expression -> MINUS_OP expression .)
    RANGE_OP        reduce using rule 77 (expression -> MINUS_OP expression .)
    OR_OP           reduce using rule 77 (expression -> MINUS_OP expression .)
    AND_OP          reduce using rule 77 (expression -> MINUS_OP expression .)
    BIT_OR          reduce using rule 77 (expression -> MINUS_OP expression .)
    BIT_XOR         reduce using rule 77 (expression -> MINUS_OP expression .)
    BIT_AND         reduce using rule 77 (expression -> MINUS_OP expression .)
    EQUALS_OP       reduce using rule 77 (expression -> MINUS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 77 (expression -> MINUS_OP expression .)
    COMPARE_OP      reduce using rule 77 (expression -> MINUS_OP expression .)
    GREATER_OP      reduce using rule 77 (expression -> MINUS_OP expression .)
    LESS_OP         reduce using rule 77 (expression -> MINUS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 77 (expression -> MINUS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 77 (expression -> MINUS_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 77 (expression -> MINUS_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 77 (expression -> MINUS_OP expression .)
    PLUS_OP         reduce using rule 77 (expression -> MINUS_OP expression .)
    MINUS_OP        reduce using rule 77 (expression -> MINUS_OP expression .)
    CONCATENATE     reduce using rule 77 (expression -> MINUS_OP expression .)
    MULTIPLICATION_OP reduce using rule 77 (expression -> MINUS_OP expression .)
    DIVISION_OP     reduce using rule 77 (expression -> MINUS_OP expression .)
    MODULUS_OP      reduce using rule 77 (expression -> MINUS_OP expression .)
    REP_OP          reduce using rule 77 (expression -> MINUS_OP expression .)
    SEARCH_MODIFY   reduce using rule 77 (expression -> MINUS_OP expression .)
    SEARCH_MODIFY_NEG reduce using rule 77 (expression -> MINUS_OP expression .)
    SEMICOLON       reduce using rule 77 (expression -> MINUS_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 77 (expression -> MINUS_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 77 (expression -> MINUS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 77 (expression -> MINUS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 77 (expression -> MINUS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]
  ! MULTIPLICATION_OP [ shift and go to state 131 ]
  ! DIVISION_OP     [ shift and go to state 117 ]
  ! MODULUS_OP      [ shift and go to state 126 ]
  ! REP_OP          [ shift and go to state 137 ]
  ! SEARCH_MODIFY   [ shift and go to state 110 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 144 ]


state 96

    (79) expression -> NOT_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 79 (expression -> NOT_OP expression .)
    XOR_STR_OP      reduce using rule 79 (expression -> NOT_OP expression .)
    AND_STR_OP      reduce using rule 79 (expression -> NOT_OP expression .)
    NOT_STR_OP      reduce using rule 79 (expression -> NOT_OP expression .)
    COMMA           reduce using rule 79 (expression -> NOT_OP expression .)
    ASSOCIATE_OP    reduce using rule 79 (expression -> NOT_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 79 (expression -> NOT_OP expression .)
    ASSIGNMENT_OP   reduce using rule 79 (expression -> NOT_OP expression .)
    RANGE_OP        reduce using rule 79 (expression -> NOT_OP expression .)
    OR_OP           reduce using rule 79 (expression -> NOT_OP expression .)
    AND_OP          reduce using rule 79 (expression -> NOT_OP expression .)
    BIT_OR          reduce using rule 79 (expression -> NOT_OP expression .)
    BIT_XOR         reduce using rule 79 (expression -> NOT_OP expression .)
    BIT_AND         reduce using rule 79 (expression -> NOT_OP expression .)
    EQUALS_OP       reduce using rule 79 (expression -> NOT_OP expression .)
    NOT_EQUALS_OP   reduce using rule 79 (expression -> NOT_OP expression .)
    COMPARE_OP      reduce using rule 79 (expression -> NOT_OP expression .)
    GREATER_OP      reduce using rule 79 (expression -> NOT_OP expression .)
    LESS_OP         reduce using rule 79 (expression -> NOT_OP expression .)
    GREATER_EQUAL_OP reduce using rule 79 (expression -> NOT_OP expression .)
    LESS_EQUAL_OP   reduce using rule 79 (expression -> NOT_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 79 (expression -> NOT_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 79 (expression -> NOT_OP expression .)
    PLUS_OP         reduce using rule 79 (expression -> NOT_OP expression .)
    MINUS_OP        reduce using rule 79 (expression -> NOT_OP expression .)
    CONCATENATE     reduce using rule 79 (expression -> NOT_OP expression .)
    MULTIPLICATION_OP reduce using rule 79 (expression -> NOT_OP expression .)
    DIVISION_OP     reduce using rule 79 (expression -> NOT_OP expression .)
    MODULUS_OP      reduce using rule 79 (expression -> NOT_OP expression .)
    REP_OP          reduce using rule 79 (expression -> NOT_OP expression .)
    SEARCH_MODIFY   reduce using rule 79 (expression -> NOT_OP expression .)
    SEARCH_MODIFY_NEG reduce using rule 79 (expression -> NOT_OP expression .)
    SEMICOLON       reduce using rule 79 (expression -> NOT_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 79 (expression -> NOT_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 79 (expression -> NOT_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 79 (expression -> NOT_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 79 (expression -> NOT_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]
  ! MULTIPLICATION_OP [ shift and go to state 131 ]
  ! DIVISION_OP     [ shift and go to state 117 ]
  ! MODULUS_OP      [ shift and go to state 126 ]
  ! REP_OP          [ shift and go to state 137 ]
  ! SEARCH_MODIFY   [ shift and go to state 110 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 144 ]


state 97

    (78) expression -> BIT_FLIP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 78 (expression -> BIT_FLIP expression .)
    XOR_STR_OP      reduce using rule 78 (expression -> BIT_FLIP expression .)
    AND_STR_OP      reduce using rule 78 (expression -> BIT_FLIP expression .)
    NOT_STR_OP      reduce using rule 78 (expression -> BIT_FLIP expression .)
    COMMA           reduce using rule 78 (expression -> BIT_FLIP expression .)
    ASSOCIATE_OP    reduce using rule 78 (expression -> BIT_FLIP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 78 (expression -> BIT_FLIP expression .)
    ASSIGNMENT_OP   reduce using rule 78 (expression -> BIT_FLIP expression .)
    RANGE_OP        reduce using rule 78 (expression -> BIT_FLIP expression .)
    OR_OP           reduce using rule 78 (expression -> BIT_FLIP expression .)
    AND_OP          reduce using rule 78 (expression -> BIT_FLIP expression .)
    BIT_OR          reduce using rule 78 (expression -> BIT_FLIP expression .)
    BIT_XOR         reduce using rule 78 (expression -> BIT_FLIP expression .)
    BIT_AND         reduce using rule 78 (expression -> BIT_FLIP expression .)
    EQUALS_OP       reduce using rule 78 (expression -> BIT_FLIP expression .)
    NOT_EQUALS_OP   reduce using rule 78 (expression -> BIT_FLIP expression .)
    COMPARE_OP      reduce using rule 78 (expression -> BIT_FLIP expression .)
    GREATER_OP      reduce using rule 78 (expression -> BIT_FLIP expression .)
    LESS_OP         reduce using rule 78 (expression -> BIT_FLIP expression .)
    GREATER_EQUAL_OP reduce using rule 78 (expression -> BIT_FLIP expression .)
    LESS_EQUAL_OP   reduce using rule 78 (expression -> BIT_FLIP expression .)
    BIT_RIGHT_SHIFT reduce using rule 78 (expression -> BIT_FLIP expression .)
    BIT_LEFT_SHIFT  reduce using rule 78 (expression -> BIT_FLIP expression .)
    PLUS_OP         reduce using rule 78 (expression -> BIT_FLIP expression .)
    MINUS_OP        reduce using rule 78 (expression -> BIT_FLIP expression .)
    CONCATENATE     reduce using rule 78 (expression -> BIT_FLIP expression .)
    MULTIPLICATION_OP reduce using rule 78 (expression -> BIT_FLIP expression .)
    DIVISION_OP     reduce using rule 78 (expression -> BIT_FLIP expression .)
    MODULUS_OP      reduce using rule 78 (expression -> BIT_FLIP expression .)
    REP_OP          reduce using rule 78 (expression -> BIT_FLIP expression .)
    SEARCH_MODIFY   reduce using rule 78 (expression -> BIT_FLIP expression .)
    SEARCH_MODIFY_NEG reduce using rule 78 (expression -> BIT_FLIP expression .)
    SEMICOLON       reduce using rule 78 (expression -> BIT_FLIP expression .)
    CLOSE_PARANTHESIS reduce using rule 78 (expression -> BIT_FLIP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 78 (expression -> BIT_FLIP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 78 (expression -> BIT_FLIP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 78 (expression -> BIT_FLIP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]
  ! MULTIPLICATION_OP [ shift and go to state 131 ]
  ! DIVISION_OP     [ shift and go to state 117 ]
  ! MODULUS_OP      [ shift and go to state 126 ]
  ! REP_OP          [ shift and go to state 137 ]
  ! SEARCH_MODIFY   [ shift and go to state 110 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 144 ]


state 98

    (71) term -> empty string . empty
    (8) empty -> .

    SEMICOLON       reduce using rule 8 (empty -> .)
    INCREMENT_OP    reduce using rule 8 (empty -> .)
    DECREMENT_OP    reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    PLUS_OP         reduce using rule 8 (empty -> .)
    MINUS_OP        reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)

    empty                          shift and go to state 170

state 99

    (62) number -> FLOAT .

    SEMICOLON       reduce using rule 62 (number -> FLOAT .)
    INCREMENT_OP    reduce using rule 62 (number -> FLOAT .)
    DECREMENT_OP    reduce using rule 62 (number -> FLOAT .)
    OR_STR_OP       reduce using rule 62 (number -> FLOAT .)
    XOR_STR_OP      reduce using rule 62 (number -> FLOAT .)
    AND_STR_OP      reduce using rule 62 (number -> FLOAT .)
    NOT_STR_OP      reduce using rule 62 (number -> FLOAT .)
    COMMA           reduce using rule 62 (number -> FLOAT .)
    ASSOCIATE_OP    reduce using rule 62 (number -> FLOAT .)
    ADV_ASSIGNMENT_OP reduce using rule 62 (number -> FLOAT .)
    ASSIGNMENT_OP   reduce using rule 62 (number -> FLOAT .)
    RANGE_OP        reduce using rule 62 (number -> FLOAT .)
    OR_OP           reduce using rule 62 (number -> FLOAT .)
    AND_OP          reduce using rule 62 (number -> FLOAT .)
    BIT_OR          reduce using rule 62 (number -> FLOAT .)
    BIT_XOR         reduce using rule 62 (number -> FLOAT .)
    BIT_AND         reduce using rule 62 (number -> FLOAT .)
    EQUALS_OP       reduce using rule 62 (number -> FLOAT .)
    NOT_EQUALS_OP   reduce using rule 62 (number -> FLOAT .)
    COMPARE_OP      reduce using rule 62 (number -> FLOAT .)
    GREATER_OP      reduce using rule 62 (number -> FLOAT .)
    LESS_OP         reduce using rule 62 (number -> FLOAT .)
    GREATER_EQUAL_OP reduce using rule 62 (number -> FLOAT .)
    LESS_EQUAL_OP   reduce using rule 62 (number -> FLOAT .)
    BIT_RIGHT_SHIFT reduce using rule 62 (number -> FLOAT .)
    BIT_LEFT_SHIFT  reduce using rule 62 (number -> FLOAT .)
    PLUS_OP         reduce using rule 62 (number -> FLOAT .)
    MINUS_OP        reduce using rule 62 (number -> FLOAT .)
    CONCATENATE     reduce using rule 62 (number -> FLOAT .)
    MULTIPLICATION_OP reduce using rule 62 (number -> FLOAT .)
    DIVISION_OP     reduce using rule 62 (number -> FLOAT .)
    MODULUS_OP      reduce using rule 62 (number -> FLOAT .)
    REP_OP          reduce using rule 62 (number -> FLOAT .)
    SEARCH_MODIFY   reduce using rule 62 (number -> FLOAT .)
    SEARCH_MODIFY_NEG reduce using rule 62 (number -> FLOAT .)
    EXPONENT_OP     reduce using rule 62 (number -> FLOAT .)
    CLOSE_PARANTHESIS reduce using rule 62 (number -> FLOAT .)


state 100

    (60) number -> NUMBER .

    SEMICOLON       reduce using rule 60 (number -> NUMBER .)
    INCREMENT_OP    reduce using rule 60 (number -> NUMBER .)
    DECREMENT_OP    reduce using rule 60 (number -> NUMBER .)
    OR_STR_OP       reduce using rule 60 (number -> NUMBER .)
    XOR_STR_OP      reduce using rule 60 (number -> NUMBER .)
    AND_STR_OP      reduce using rule 60 (number -> NUMBER .)
    NOT_STR_OP      reduce using rule 60 (number -> NUMBER .)
    COMMA           reduce using rule 60 (number -> NUMBER .)
    ASSOCIATE_OP    reduce using rule 60 (number -> NUMBER .)
    ADV_ASSIGNMENT_OP reduce using rule 60 (number -> NUMBER .)
    ASSIGNMENT_OP   reduce using rule 60 (number -> NUMBER .)
    RANGE_OP        reduce using rule 60 (number -> NUMBER .)
    OR_OP           reduce using rule 60 (number -> NUMBER .)
    AND_OP          reduce using rule 60 (number -> NUMBER .)
    BIT_OR          reduce using rule 60 (number -> NUMBER .)
    BIT_XOR         reduce using rule 60 (number -> NUMBER .)
    BIT_AND         reduce using rule 60 (number -> NUMBER .)
    EQUALS_OP       reduce using rule 60 (number -> NUMBER .)
    NOT_EQUALS_OP   reduce using rule 60 (number -> NUMBER .)
    COMPARE_OP      reduce using rule 60 (number -> NUMBER .)
    GREATER_OP      reduce using rule 60 (number -> NUMBER .)
    LESS_OP         reduce using rule 60 (number -> NUMBER .)
    GREATER_EQUAL_OP reduce using rule 60 (number -> NUMBER .)
    LESS_EQUAL_OP   reduce using rule 60 (number -> NUMBER .)
    BIT_RIGHT_SHIFT reduce using rule 60 (number -> NUMBER .)
    BIT_LEFT_SHIFT  reduce using rule 60 (number -> NUMBER .)
    PLUS_OP         reduce using rule 60 (number -> NUMBER .)
    MINUS_OP        reduce using rule 60 (number -> NUMBER .)
    CONCATENATE     reduce using rule 60 (number -> NUMBER .)
    MULTIPLICATION_OP reduce using rule 60 (number -> NUMBER .)
    DIVISION_OP     reduce using rule 60 (number -> NUMBER .)
    MODULUS_OP      reduce using rule 60 (number -> NUMBER .)
    REP_OP          reduce using rule 60 (number -> NUMBER .)
    SEARCH_MODIFY   reduce using rule 60 (number -> NUMBER .)
    SEARCH_MODIFY_NEG reduce using rule 60 (number -> NUMBER .)
    EXPONENT_OP     reduce using rule 60 (number -> NUMBER .)
    CLOSE_PARANTHESIS reduce using rule 60 (number -> NUMBER .)


state 101

    (61) number -> SCI_NOT .

    SEMICOLON       reduce using rule 61 (number -> SCI_NOT .)
    INCREMENT_OP    reduce using rule 61 (number -> SCI_NOT .)
    DECREMENT_OP    reduce using rule 61 (number -> SCI_NOT .)
    OR_STR_OP       reduce using rule 61 (number -> SCI_NOT .)
    XOR_STR_OP      reduce using rule 61 (number -> SCI_NOT .)
    AND_STR_OP      reduce using rule 61 (number -> SCI_NOT .)
    NOT_STR_OP      reduce using rule 61 (number -> SCI_NOT .)
    COMMA           reduce using rule 61 (number -> SCI_NOT .)
    ASSOCIATE_OP    reduce using rule 61 (number -> SCI_NOT .)
    ADV_ASSIGNMENT_OP reduce using rule 61 (number -> SCI_NOT .)
    ASSIGNMENT_OP   reduce using rule 61 (number -> SCI_NOT .)
    RANGE_OP        reduce using rule 61 (number -> SCI_NOT .)
    OR_OP           reduce using rule 61 (number -> SCI_NOT .)
    AND_OP          reduce using rule 61 (number -> SCI_NOT .)
    BIT_OR          reduce using rule 61 (number -> SCI_NOT .)
    BIT_XOR         reduce using rule 61 (number -> SCI_NOT .)
    BIT_AND         reduce using rule 61 (number -> SCI_NOT .)
    EQUALS_OP       reduce using rule 61 (number -> SCI_NOT .)
    NOT_EQUALS_OP   reduce using rule 61 (number -> SCI_NOT .)
    COMPARE_OP      reduce using rule 61 (number -> SCI_NOT .)
    GREATER_OP      reduce using rule 61 (number -> SCI_NOT .)
    LESS_OP         reduce using rule 61 (number -> SCI_NOT .)
    GREATER_EQUAL_OP reduce using rule 61 (number -> SCI_NOT .)
    LESS_EQUAL_OP   reduce using rule 61 (number -> SCI_NOT .)
    BIT_RIGHT_SHIFT reduce using rule 61 (number -> SCI_NOT .)
    BIT_LEFT_SHIFT  reduce using rule 61 (number -> SCI_NOT .)
    PLUS_OP         reduce using rule 61 (number -> SCI_NOT .)
    MINUS_OP        reduce using rule 61 (number -> SCI_NOT .)
    CONCATENATE     reduce using rule 61 (number -> SCI_NOT .)
    MULTIPLICATION_OP reduce using rule 61 (number -> SCI_NOT .)
    DIVISION_OP     reduce using rule 61 (number -> SCI_NOT .)
    MODULUS_OP      reduce using rule 61 (number -> SCI_NOT .)
    REP_OP          reduce using rule 61 (number -> SCI_NOT .)
    SEARCH_MODIFY   reduce using rule 61 (number -> SCI_NOT .)
    SEARCH_MODIFY_NEG reduce using rule 61 (number -> SCI_NOT .)
    EXPONENT_OP     reduce using rule 61 (number -> SCI_NOT .)
    CLOSE_PARANTHESIS reduce using rule 61 (number -> SCI_NOT .)


state 102

    (68) term -> empty number . empty
    (8) empty -> .

    SEMICOLON       reduce using rule 8 (empty -> .)
    INCREMENT_OP    reduce using rule 8 (empty -> .)
    DECREMENT_OP    reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    PLUS_OP         reduce using rule 8 (empty -> .)
    MINUS_OP        reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)

    empty                          shift and go to state 171

state 103

    (64) number -> OCTAL .

    SEMICOLON       reduce using rule 64 (number -> OCTAL .)
    INCREMENT_OP    reduce using rule 64 (number -> OCTAL .)
    DECREMENT_OP    reduce using rule 64 (number -> OCTAL .)
    OR_STR_OP       reduce using rule 64 (number -> OCTAL .)
    XOR_STR_OP      reduce using rule 64 (number -> OCTAL .)
    AND_STR_OP      reduce using rule 64 (number -> OCTAL .)
    NOT_STR_OP      reduce using rule 64 (number -> OCTAL .)
    COMMA           reduce using rule 64 (number -> OCTAL .)
    ASSOCIATE_OP    reduce using rule 64 (number -> OCTAL .)
    ADV_ASSIGNMENT_OP reduce using rule 64 (number -> OCTAL .)
    ASSIGNMENT_OP   reduce using rule 64 (number -> OCTAL .)
    RANGE_OP        reduce using rule 64 (number -> OCTAL .)
    OR_OP           reduce using rule 64 (number -> OCTAL .)
    AND_OP          reduce using rule 64 (number -> OCTAL .)
    BIT_OR          reduce using rule 64 (number -> OCTAL .)
    BIT_XOR         reduce using rule 64 (number -> OCTAL .)
    BIT_AND         reduce using rule 64 (number -> OCTAL .)
    EQUALS_OP       reduce using rule 64 (number -> OCTAL .)
    NOT_EQUALS_OP   reduce using rule 64 (number -> OCTAL .)
    COMPARE_OP      reduce using rule 64 (number -> OCTAL .)
    GREATER_OP      reduce using rule 64 (number -> OCTAL .)
    LESS_OP         reduce using rule 64 (number -> OCTAL .)
    GREATER_EQUAL_OP reduce using rule 64 (number -> OCTAL .)
    LESS_EQUAL_OP   reduce using rule 64 (number -> OCTAL .)
    BIT_RIGHT_SHIFT reduce using rule 64 (number -> OCTAL .)
    BIT_LEFT_SHIFT  reduce using rule 64 (number -> OCTAL .)
    PLUS_OP         reduce using rule 64 (number -> OCTAL .)
    MINUS_OP        reduce using rule 64 (number -> OCTAL .)
    CONCATENATE     reduce using rule 64 (number -> OCTAL .)
    MULTIPLICATION_OP reduce using rule 64 (number -> OCTAL .)
    DIVISION_OP     reduce using rule 64 (number -> OCTAL .)
    MODULUS_OP      reduce using rule 64 (number -> OCTAL .)
    REP_OP          reduce using rule 64 (number -> OCTAL .)
    SEARCH_MODIFY   reduce using rule 64 (number -> OCTAL .)
    SEARCH_MODIFY_NEG reduce using rule 64 (number -> OCTAL .)
    EXPONENT_OP     reduce using rule 64 (number -> OCTAL .)
    CLOSE_PARANTHESIS reduce using rule 64 (number -> OCTAL .)


state 104

    (70) term -> empty variable . empty
    (75) type -> variable .
    (8) empty -> .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for INCREMENT_OP resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for DECREMENT_OP resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for OR_STR_OP resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for XOR_STR_OP resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for AND_STR_OP resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for NOT_STR_OP resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for COMMA resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for ASSOCIATE_OP resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for ADV_ASSIGNMENT_OP resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for ASSIGNMENT_OP resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for RANGE_OP resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for OR_OP resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for AND_OP resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for BIT_OR resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for BIT_XOR resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for BIT_AND resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for EQUALS_OP resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for NOT_EQUALS_OP resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for COMPARE_OP resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for GREATER_OP resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for LESS_OP resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for GREATER_EQUAL_OP resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for LESS_EQUAL_OP resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for BIT_RIGHT_SHIFT resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for BIT_LEFT_SHIFT resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for PLUS_OP resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for MINUS_OP resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for CONCATENATE resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for MULTIPLICATION_OP resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for DIVISION_OP resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for MODULUS_OP resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for REP_OP resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for SEARCH_MODIFY resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for SEARCH_MODIFY_NEG resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for EXPONENT_OP resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for CLOSE_PARANTHESIS resolved using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    INCREMENT_OP    reduce using rule 8 (empty -> .)
    DECREMENT_OP    reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    PLUS_OP         reduce using rule 8 (empty -> .)
    MINUS_OP        reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)

  ! COMMA           [ reduce using rule 75 (type -> variable .) ]
  ! INCREMENT_OP    [ reduce using rule 75 (type -> variable .) ]
  ! DECREMENT_OP    [ reduce using rule 75 (type -> variable .) ]
  ! OR_STR_OP       [ reduce using rule 75 (type -> variable .) ]
  ! XOR_STR_OP      [ reduce using rule 75 (type -> variable .) ]
  ! AND_STR_OP      [ reduce using rule 75 (type -> variable .) ]
  ! NOT_STR_OP      [ reduce using rule 75 (type -> variable .) ]
  ! ASSOCIATE_OP    [ reduce using rule 75 (type -> variable .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 75 (type -> variable .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 75 (type -> variable .) ]
  ! RANGE_OP        [ reduce using rule 75 (type -> variable .) ]
  ! OR_OP           [ reduce using rule 75 (type -> variable .) ]
  ! AND_OP          [ reduce using rule 75 (type -> variable .) ]
  ! BIT_OR          [ reduce using rule 75 (type -> variable .) ]
  ! BIT_XOR         [ reduce using rule 75 (type -> variable .) ]
  ! BIT_AND         [ reduce using rule 75 (type -> variable .) ]
  ! EQUALS_OP       [ reduce using rule 75 (type -> variable .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 75 (type -> variable .) ]
  ! COMPARE_OP      [ reduce using rule 75 (type -> variable .) ]
  ! GREATER_OP      [ reduce using rule 75 (type -> variable .) ]
  ! LESS_OP         [ reduce using rule 75 (type -> variable .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 75 (type -> variable .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 75 (type -> variable .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 75 (type -> variable .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 75 (type -> variable .) ]
  ! PLUS_OP         [ reduce using rule 75 (type -> variable .) ]
  ! MINUS_OP        [ reduce using rule 75 (type -> variable .) ]
  ! CONCATENATE     [ reduce using rule 75 (type -> variable .) ]
  ! MULTIPLICATION_OP [ reduce using rule 75 (type -> variable .) ]
  ! DIVISION_OP     [ reduce using rule 75 (type -> variable .) ]
  ! MODULUS_OP      [ reduce using rule 75 (type -> variable .) ]
  ! REP_OP          [ reduce using rule 75 (type -> variable .) ]
  ! SEARCH_MODIFY   [ reduce using rule 75 (type -> variable .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 75 (type -> variable .) ]
  ! EXPONENT_OP     [ reduce using rule 75 (type -> variable .) ]
  ! CLOSE_PARANTHESIS [ reduce using rule 75 (type -> variable .) ]
  ! SEMICOLON       [ reduce using rule 75 (type -> variable .) ]

    empty                          shift and go to state 172

state 105

    (63) number -> HEXADECIMAL .

    SEMICOLON       reduce using rule 63 (number -> HEXADECIMAL .)
    INCREMENT_OP    reduce using rule 63 (number -> HEXADECIMAL .)
    DECREMENT_OP    reduce using rule 63 (number -> HEXADECIMAL .)
    OR_STR_OP       reduce using rule 63 (number -> HEXADECIMAL .)
    XOR_STR_OP      reduce using rule 63 (number -> HEXADECIMAL .)
    AND_STR_OP      reduce using rule 63 (number -> HEXADECIMAL .)
    NOT_STR_OP      reduce using rule 63 (number -> HEXADECIMAL .)
    COMMA           reduce using rule 63 (number -> HEXADECIMAL .)
    ASSOCIATE_OP    reduce using rule 63 (number -> HEXADECIMAL .)
    ADV_ASSIGNMENT_OP reduce using rule 63 (number -> HEXADECIMAL .)
    ASSIGNMENT_OP   reduce using rule 63 (number -> HEXADECIMAL .)
    RANGE_OP        reduce using rule 63 (number -> HEXADECIMAL .)
    OR_OP           reduce using rule 63 (number -> HEXADECIMAL .)
    AND_OP          reduce using rule 63 (number -> HEXADECIMAL .)
    BIT_OR          reduce using rule 63 (number -> HEXADECIMAL .)
    BIT_XOR         reduce using rule 63 (number -> HEXADECIMAL .)
    BIT_AND         reduce using rule 63 (number -> HEXADECIMAL .)
    EQUALS_OP       reduce using rule 63 (number -> HEXADECIMAL .)
    NOT_EQUALS_OP   reduce using rule 63 (number -> HEXADECIMAL .)
    COMPARE_OP      reduce using rule 63 (number -> HEXADECIMAL .)
    GREATER_OP      reduce using rule 63 (number -> HEXADECIMAL .)
    LESS_OP         reduce using rule 63 (number -> HEXADECIMAL .)
    GREATER_EQUAL_OP reduce using rule 63 (number -> HEXADECIMAL .)
    LESS_EQUAL_OP   reduce using rule 63 (number -> HEXADECIMAL .)
    BIT_RIGHT_SHIFT reduce using rule 63 (number -> HEXADECIMAL .)
    BIT_LEFT_SHIFT  reduce using rule 63 (number -> HEXADECIMAL .)
    PLUS_OP         reduce using rule 63 (number -> HEXADECIMAL .)
    MINUS_OP        reduce using rule 63 (number -> HEXADECIMAL .)
    CONCATENATE     reduce using rule 63 (number -> HEXADECIMAL .)
    MULTIPLICATION_OP reduce using rule 63 (number -> HEXADECIMAL .)
    DIVISION_OP     reduce using rule 63 (number -> HEXADECIMAL .)
    MODULUS_OP      reduce using rule 63 (number -> HEXADECIMAL .)
    REP_OP          reduce using rule 63 (number -> HEXADECIMAL .)
    SEARCH_MODIFY   reduce using rule 63 (number -> HEXADECIMAL .)
    SEARCH_MODIFY_NEG reduce using rule 63 (number -> HEXADECIMAL .)
    EXPONENT_OP     reduce using rule 63 (number -> HEXADECIMAL .)
    CLOSE_PARANTHESIS reduce using rule 63 (number -> HEXADECIMAL .)


state 106

    (69) term -> empty type . empty
    (8) empty -> .

    SEMICOLON       reduce using rule 8 (empty -> .)
    INCREMENT_OP    reduce using rule 8 (empty -> .)
    DECREMENT_OP    reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    PLUS_OP         reduce using rule 8 (empty -> .)
    MINUS_OP        reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)

    empty                          shift and go to state 173

state 107

    (81) expression -> DECREMENT_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    INCREMENT_OP    reduce using rule 81 (expression -> DECREMENT_OP expression .)
    DECREMENT_OP    reduce using rule 81 (expression -> DECREMENT_OP expression .)
    OR_STR_OP       reduce using rule 81 (expression -> DECREMENT_OP expression .)
    XOR_STR_OP      reduce using rule 81 (expression -> DECREMENT_OP expression .)
    AND_STR_OP      reduce using rule 81 (expression -> DECREMENT_OP expression .)
    NOT_STR_OP      reduce using rule 81 (expression -> DECREMENT_OP expression .)
    COMMA           reduce using rule 81 (expression -> DECREMENT_OP expression .)
    ASSOCIATE_OP    reduce using rule 81 (expression -> DECREMENT_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 81 (expression -> DECREMENT_OP expression .)
    ASSIGNMENT_OP   reduce using rule 81 (expression -> DECREMENT_OP expression .)
    RANGE_OP        reduce using rule 81 (expression -> DECREMENT_OP expression .)
    OR_OP           reduce using rule 81 (expression -> DECREMENT_OP expression .)
    AND_OP          reduce using rule 81 (expression -> DECREMENT_OP expression .)
    BIT_OR          reduce using rule 81 (expression -> DECREMENT_OP expression .)
    BIT_XOR         reduce using rule 81 (expression -> DECREMENT_OP expression .)
    BIT_AND         reduce using rule 81 (expression -> DECREMENT_OP expression .)
    EQUALS_OP       reduce using rule 81 (expression -> DECREMENT_OP expression .)
    NOT_EQUALS_OP   reduce using rule 81 (expression -> DECREMENT_OP expression .)
    COMPARE_OP      reduce using rule 81 (expression -> DECREMENT_OP expression .)
    GREATER_OP      reduce using rule 81 (expression -> DECREMENT_OP expression .)
    LESS_OP         reduce using rule 81 (expression -> DECREMENT_OP expression .)
    GREATER_EQUAL_OP reduce using rule 81 (expression -> DECREMENT_OP expression .)
    LESS_EQUAL_OP   reduce using rule 81 (expression -> DECREMENT_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 81 (expression -> DECREMENT_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 81 (expression -> DECREMENT_OP expression .)
    PLUS_OP         reduce using rule 81 (expression -> DECREMENT_OP expression .)
    MINUS_OP        reduce using rule 81 (expression -> DECREMENT_OP expression .)
    CONCATENATE     reduce using rule 81 (expression -> DECREMENT_OP expression .)
    MULTIPLICATION_OP reduce using rule 81 (expression -> DECREMENT_OP expression .)
    DIVISION_OP     reduce using rule 81 (expression -> DECREMENT_OP expression .)
    MODULUS_OP      reduce using rule 81 (expression -> DECREMENT_OP expression .)
    REP_OP          reduce using rule 81 (expression -> DECREMENT_OP expression .)
    SEARCH_MODIFY   reduce using rule 81 (expression -> DECREMENT_OP expression .)
    SEARCH_MODIFY_NEG reduce using rule 81 (expression -> DECREMENT_OP expression .)
    EXPONENT_OP     reduce using rule 81 (expression -> DECREMENT_OP expression .)
    SEMICOLON       reduce using rule 81 (expression -> DECREMENT_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 81 (expression -> DECREMENT_OP expression .)

  ! INCREMENT_OP    [ shift and go to state 139 ]
  ! DECREMENT_OP    [ shift and go to state 132 ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]
  ! MULTIPLICATION_OP [ shift and go to state 131 ]
  ! DIVISION_OP     [ shift and go to state 117 ]
  ! MODULUS_OP      [ shift and go to state 126 ]
  ! REP_OP          [ shift and go to state 137 ]
  ! SEARCH_MODIFY   [ shift and go to state 110 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 144 ]
  ! EXPONENT_OP     [ shift and go to state 115 ]


state 108

    (80) expression -> INCREMENT_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    INCREMENT_OP    reduce using rule 80 (expression -> INCREMENT_OP expression .)
    DECREMENT_OP    reduce using rule 80 (expression -> INCREMENT_OP expression .)
    OR_STR_OP       reduce using rule 80 (expression -> INCREMENT_OP expression .)
    XOR_STR_OP      reduce using rule 80 (expression -> INCREMENT_OP expression .)
    AND_STR_OP      reduce using rule 80 (expression -> INCREMENT_OP expression .)
    NOT_STR_OP      reduce using rule 80 (expression -> INCREMENT_OP expression .)
    COMMA           reduce using rule 80 (expression -> INCREMENT_OP expression .)
    ASSOCIATE_OP    reduce using rule 80 (expression -> INCREMENT_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 80 (expression -> INCREMENT_OP expression .)
    ASSIGNMENT_OP   reduce using rule 80 (expression -> INCREMENT_OP expression .)
    RANGE_OP        reduce using rule 80 (expression -> INCREMENT_OP expression .)
    OR_OP           reduce using rule 80 (expression -> INCREMENT_OP expression .)
    AND_OP          reduce using rule 80 (expression -> INCREMENT_OP expression .)
    BIT_OR          reduce using rule 80 (expression -> INCREMENT_OP expression .)
    BIT_XOR         reduce using rule 80 (expression -> INCREMENT_OP expression .)
    BIT_AND         reduce using rule 80 (expression -> INCREMENT_OP expression .)
    EQUALS_OP       reduce using rule 80 (expression -> INCREMENT_OP expression .)
    NOT_EQUALS_OP   reduce using rule 80 (expression -> INCREMENT_OP expression .)
    COMPARE_OP      reduce using rule 80 (expression -> INCREMENT_OP expression .)
    GREATER_OP      reduce using rule 80 (expression -> INCREMENT_OP expression .)
    LESS_OP         reduce using rule 80 (expression -> INCREMENT_OP expression .)
    GREATER_EQUAL_OP reduce using rule 80 (expression -> INCREMENT_OP expression .)
    LESS_EQUAL_OP   reduce using rule 80 (expression -> INCREMENT_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 80 (expression -> INCREMENT_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 80 (expression -> INCREMENT_OP expression .)
    PLUS_OP         reduce using rule 80 (expression -> INCREMENT_OP expression .)
    MINUS_OP        reduce using rule 80 (expression -> INCREMENT_OP expression .)
    CONCATENATE     reduce using rule 80 (expression -> INCREMENT_OP expression .)
    MULTIPLICATION_OP reduce using rule 80 (expression -> INCREMENT_OP expression .)
    DIVISION_OP     reduce using rule 80 (expression -> INCREMENT_OP expression .)
    MODULUS_OP      reduce using rule 80 (expression -> INCREMENT_OP expression .)
    REP_OP          reduce using rule 80 (expression -> INCREMENT_OP expression .)
    SEARCH_MODIFY   reduce using rule 80 (expression -> INCREMENT_OP expression .)
    SEARCH_MODIFY_NEG reduce using rule 80 (expression -> INCREMENT_OP expression .)
    EXPONENT_OP     reduce using rule 80 (expression -> INCREMENT_OP expression .)
    SEMICOLON       reduce using rule 80 (expression -> INCREMENT_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 80 (expression -> INCREMENT_OP expression .)

  ! INCREMENT_OP    [ shift and go to state 139 ]
  ! DECREMENT_OP    [ shift and go to state 132 ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]
  ! MULTIPLICATION_OP [ shift and go to state 131 ]
  ! DIVISION_OP     [ shift and go to state 117 ]
  ! MODULUS_OP      [ shift and go to state 126 ]
  ! REP_OP          [ shift and go to state 137 ]
  ! SEARCH_MODIFY   [ shift and go to state 110 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 144 ]
  ! EXPONENT_OP     [ shift and go to state 115 ]


state 109

    (76) expression -> PLUS_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 76 (expression -> PLUS_OP expression .)
    XOR_STR_OP      reduce using rule 76 (expression -> PLUS_OP expression .)
    AND_STR_OP      reduce using rule 76 (expression -> PLUS_OP expression .)
    NOT_STR_OP      reduce using rule 76 (expression -> PLUS_OP expression .)
    COMMA           reduce using rule 76 (expression -> PLUS_OP expression .)
    ASSOCIATE_OP    reduce using rule 76 (expression -> PLUS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 76 (expression -> PLUS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 76 (expression -> PLUS_OP expression .)
    RANGE_OP        reduce using rule 76 (expression -> PLUS_OP expression .)
    OR_OP           reduce using rule 76 (expression -> PLUS_OP expression .)
    AND_OP          reduce using rule 76 (expression -> PLUS_OP expression .)
    BIT_OR          reduce using rule 76 (expression -> PLUS_OP expression .)
    BIT_XOR         reduce using rule 76 (expression -> PLUS_OP expression .)
    BIT_AND         reduce using rule 76 (expression -> PLUS_OP expression .)
    EQUALS_OP       reduce using rule 76 (expression -> PLUS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 76 (expression -> PLUS_OP expression .)
    COMPARE_OP      reduce using rule 76 (expression -> PLUS_OP expression .)
    GREATER_OP      reduce using rule 76 (expression -> PLUS_OP expression .)
    LESS_OP         reduce using rule 76 (expression -> PLUS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 76 (expression -> PLUS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 76 (expression -> PLUS_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 76 (expression -> PLUS_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 76 (expression -> PLUS_OP expression .)
    PLUS_OP         reduce using rule 76 (expression -> PLUS_OP expression .)
    MINUS_OP        reduce using rule 76 (expression -> PLUS_OP expression .)
    CONCATENATE     reduce using rule 76 (expression -> PLUS_OP expression .)
    MULTIPLICATION_OP reduce using rule 76 (expression -> PLUS_OP expression .)
    DIVISION_OP     reduce using rule 76 (expression -> PLUS_OP expression .)
    MODULUS_OP      reduce using rule 76 (expression -> PLUS_OP expression .)
    REP_OP          reduce using rule 76 (expression -> PLUS_OP expression .)
    SEARCH_MODIFY   reduce using rule 76 (expression -> PLUS_OP expression .)
    SEARCH_MODIFY_NEG reduce using rule 76 (expression -> PLUS_OP expression .)
    SEMICOLON       reduce using rule 76 (expression -> PLUS_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 76 (expression -> PLUS_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 76 (expression -> PLUS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 76 (expression -> PLUS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 76 (expression -> PLUS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]
  ! MULTIPLICATION_OP [ shift and go to state 131 ]
  ! DIVISION_OP     [ shift and go to state 117 ]
  ! MODULUS_OP      [ shift and go to state 126 ]
  ! REP_OP          [ shift and go to state 137 ]
  ! SEARCH_MODIFY   [ shift and go to state 110 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 144 ]


state 110

    (116) expression -> expression SEARCH_MODIFY . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 174
    empty                          shift and go to state 55

state 111

    (106) expression -> expression LESS_EQUAL_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 175
    empty                          shift and go to state 55

state 112

    (100) expression -> expression EQUALS_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 176
    empty                          shift and go to state 55

state 113

    (102) expression -> expression COMPARE_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 177
    empty                          shift and go to state 55

state 114

    (101) expression -> expression NOT_EQUALS_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 178
    empty                          shift and go to state 55

state 115

    (118) expression -> expression EXPONENT_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 179
    empty                          shift and go to state 55

state 116

    (89) expression -> expression NOT_STR_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 180
    empty                          shift and go to state 55

state 117

    (113) expression -> expression DIVISION_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 181
    empty                          shift and go to state 55

state 118

    (94) expression -> expression RANGE_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 182
    empty                          shift and go to state 55

state 119

    (98) expression -> expression BIT_XOR . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 183
    empty                          shift and go to state 55

state 120

    (110) expression -> expression MINUS_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 184
    empty                          shift and go to state 55

state 121

    (38) returnStatement -> RETURN expression SEMICOLON .

    RETURN          reduce using rule 38 (returnStatement -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 38 (returnStatement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 38 (returnStatement -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 38 (returnStatement -> RETURN expression SEMICOLON .)
    PRINT           reduce using rule 38 (returnStatement -> RETURN expression SEMICOLON .)
    SUB             reduce using rule 38 (returnStatement -> RETURN expression SEMICOLON .)
    LAST            reduce using rule 38 (returnStatement -> RETURN expression SEMICOLON .)
    NEXT            reduce using rule 38 (returnStatement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 38 (returnStatement -> RETURN expression SEMICOLON .)
    USE             reduce using rule 38 (returnStatement -> RETURN expression SEMICOLON .)
    SWITCH          reduce using rule 38 (returnStatement -> RETURN expression SEMICOLON .)
    PRIVATE         reduce using rule 38 (returnStatement -> RETURN expression SEMICOLON .)
    LOCAL           reduce using rule 38 (returnStatement -> RETURN expression SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 38 (returnStatement -> RETURN expression SEMICOLON .)
    ARRAY           reduce using rule 38 (returnStatement -> RETURN expression SEMICOLON .)
    HASH            reduce using rule 38 (returnStatement -> RETURN expression SEMICOLON .)
    VARIABLE        reduce using rule 38 (returnStatement -> RETURN expression SEMICOLON .)
    BLOCK_ENDS      reduce using rule 38 (returnStatement -> RETURN expression SEMICOLON .)
    $end            reduce using rule 38 (returnStatement -> RETURN expression SEMICOLON .)


state 122

    (88) expression -> expression AND_STR_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 185
    empty                          shift and go to state 55

state 123

    (95) expression -> expression OR_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 186
    empty                          shift and go to state 55

state 124

    (104) expression -> expression LESS_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 187
    empty                          shift and go to state 55

state 125

    (90) expression -> expression COMMA . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 188
    empty                          shift and go to state 55

state 126

    (114) expression -> expression MODULUS_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 189
    empty                          shift and go to state 55

state 127

    (93) expression -> expression ASSIGNMENT_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 190
    empty                          shift and go to state 55

state 128

    (105) expression -> expression GREATER_EQUAL_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 191
    empty                          shift and go to state 55

state 129

    (87) expression -> expression XOR_STR_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 192
    empty                          shift and go to state 55

state 130

    (99) expression -> expression BIT_AND . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 193
    empty                          shift and go to state 55

state 131

    (112) expression -> expression MULTIPLICATION_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 194
    empty                          shift and go to state 55

state 132

    (83) expression -> expression DECREMENT_OP .

    INCREMENT_OP    reduce using rule 83 (expression -> expression DECREMENT_OP .)
    DECREMENT_OP    reduce using rule 83 (expression -> expression DECREMENT_OP .)
    OR_STR_OP       reduce using rule 83 (expression -> expression DECREMENT_OP .)
    XOR_STR_OP      reduce using rule 83 (expression -> expression DECREMENT_OP .)
    AND_STR_OP      reduce using rule 83 (expression -> expression DECREMENT_OP .)
    NOT_STR_OP      reduce using rule 83 (expression -> expression DECREMENT_OP .)
    COMMA           reduce using rule 83 (expression -> expression DECREMENT_OP .)
    ASSOCIATE_OP    reduce using rule 83 (expression -> expression DECREMENT_OP .)
    ADV_ASSIGNMENT_OP reduce using rule 83 (expression -> expression DECREMENT_OP .)
    ASSIGNMENT_OP   reduce using rule 83 (expression -> expression DECREMENT_OP .)
    RANGE_OP        reduce using rule 83 (expression -> expression DECREMENT_OP .)
    OR_OP           reduce using rule 83 (expression -> expression DECREMENT_OP .)
    AND_OP          reduce using rule 83 (expression -> expression DECREMENT_OP .)
    BIT_OR          reduce using rule 83 (expression -> expression DECREMENT_OP .)
    BIT_XOR         reduce using rule 83 (expression -> expression DECREMENT_OP .)
    BIT_AND         reduce using rule 83 (expression -> expression DECREMENT_OP .)
    EQUALS_OP       reduce using rule 83 (expression -> expression DECREMENT_OP .)
    NOT_EQUALS_OP   reduce using rule 83 (expression -> expression DECREMENT_OP .)
    COMPARE_OP      reduce using rule 83 (expression -> expression DECREMENT_OP .)
    GREATER_OP      reduce using rule 83 (expression -> expression DECREMENT_OP .)
    LESS_OP         reduce using rule 83 (expression -> expression DECREMENT_OP .)
    GREATER_EQUAL_OP reduce using rule 83 (expression -> expression DECREMENT_OP .)
    LESS_EQUAL_OP   reduce using rule 83 (expression -> expression DECREMENT_OP .)
    BIT_RIGHT_SHIFT reduce using rule 83 (expression -> expression DECREMENT_OP .)
    BIT_LEFT_SHIFT  reduce using rule 83 (expression -> expression DECREMENT_OP .)
    PLUS_OP         reduce using rule 83 (expression -> expression DECREMENT_OP .)
    MINUS_OP        reduce using rule 83 (expression -> expression DECREMENT_OP .)
    CONCATENATE     reduce using rule 83 (expression -> expression DECREMENT_OP .)
    MULTIPLICATION_OP reduce using rule 83 (expression -> expression DECREMENT_OP .)
    DIVISION_OP     reduce using rule 83 (expression -> expression DECREMENT_OP .)
    MODULUS_OP      reduce using rule 83 (expression -> expression DECREMENT_OP .)
    REP_OP          reduce using rule 83 (expression -> expression DECREMENT_OP .)
    SEARCH_MODIFY   reduce using rule 83 (expression -> expression DECREMENT_OP .)
    SEARCH_MODIFY_NEG reduce using rule 83 (expression -> expression DECREMENT_OP .)
    EXPONENT_OP     reduce using rule 83 (expression -> expression DECREMENT_OP .)
    SEMICOLON       reduce using rule 83 (expression -> expression DECREMENT_OP .)
    CLOSE_PARANTHESIS reduce using rule 83 (expression -> expression DECREMENT_OP .)


state 133

    (91) expression -> expression ASSOCIATE_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 195
    empty                          shift and go to state 55

state 134

    (86) expression -> expression OR_STR_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 196
    empty                          shift and go to state 55

state 135

    (96) expression -> expression AND_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 197
    empty                          shift and go to state 55

state 136

    (108) expression -> expression BIT_LEFT_SHIFT . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 198
    empty                          shift and go to state 55

state 137

    (115) expression -> expression REP_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 199
    empty                          shift and go to state 55

state 138

    (111) expression -> expression CONCATENATE . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 200
    empty                          shift and go to state 55

state 139

    (82) expression -> expression INCREMENT_OP .

    INCREMENT_OP    reduce using rule 82 (expression -> expression INCREMENT_OP .)
    DECREMENT_OP    reduce using rule 82 (expression -> expression INCREMENT_OP .)
    OR_STR_OP       reduce using rule 82 (expression -> expression INCREMENT_OP .)
    XOR_STR_OP      reduce using rule 82 (expression -> expression INCREMENT_OP .)
    AND_STR_OP      reduce using rule 82 (expression -> expression INCREMENT_OP .)
    NOT_STR_OP      reduce using rule 82 (expression -> expression INCREMENT_OP .)
    COMMA           reduce using rule 82 (expression -> expression INCREMENT_OP .)
    ASSOCIATE_OP    reduce using rule 82 (expression -> expression INCREMENT_OP .)
    ADV_ASSIGNMENT_OP reduce using rule 82 (expression -> expression INCREMENT_OP .)
    ASSIGNMENT_OP   reduce using rule 82 (expression -> expression INCREMENT_OP .)
    RANGE_OP        reduce using rule 82 (expression -> expression INCREMENT_OP .)
    OR_OP           reduce using rule 82 (expression -> expression INCREMENT_OP .)
    AND_OP          reduce using rule 82 (expression -> expression INCREMENT_OP .)
    BIT_OR          reduce using rule 82 (expression -> expression INCREMENT_OP .)
    BIT_XOR         reduce using rule 82 (expression -> expression INCREMENT_OP .)
    BIT_AND         reduce using rule 82 (expression -> expression INCREMENT_OP .)
    EQUALS_OP       reduce using rule 82 (expression -> expression INCREMENT_OP .)
    NOT_EQUALS_OP   reduce using rule 82 (expression -> expression INCREMENT_OP .)
    COMPARE_OP      reduce using rule 82 (expression -> expression INCREMENT_OP .)
    GREATER_OP      reduce using rule 82 (expression -> expression INCREMENT_OP .)
    LESS_OP         reduce using rule 82 (expression -> expression INCREMENT_OP .)
    GREATER_EQUAL_OP reduce using rule 82 (expression -> expression INCREMENT_OP .)
    LESS_EQUAL_OP   reduce using rule 82 (expression -> expression INCREMENT_OP .)
    BIT_RIGHT_SHIFT reduce using rule 82 (expression -> expression INCREMENT_OP .)
    BIT_LEFT_SHIFT  reduce using rule 82 (expression -> expression INCREMENT_OP .)
    PLUS_OP         reduce using rule 82 (expression -> expression INCREMENT_OP .)
    MINUS_OP        reduce using rule 82 (expression -> expression INCREMENT_OP .)
    CONCATENATE     reduce using rule 82 (expression -> expression INCREMENT_OP .)
    MULTIPLICATION_OP reduce using rule 82 (expression -> expression INCREMENT_OP .)
    DIVISION_OP     reduce using rule 82 (expression -> expression INCREMENT_OP .)
    MODULUS_OP      reduce using rule 82 (expression -> expression INCREMENT_OP .)
    REP_OP          reduce using rule 82 (expression -> expression INCREMENT_OP .)
    SEARCH_MODIFY   reduce using rule 82 (expression -> expression INCREMENT_OP .)
    SEARCH_MODIFY_NEG reduce using rule 82 (expression -> expression INCREMENT_OP .)
    EXPONENT_OP     reduce using rule 82 (expression -> expression INCREMENT_OP .)
    SEMICOLON       reduce using rule 82 (expression -> expression INCREMENT_OP .)
    CLOSE_PARANTHESIS reduce using rule 82 (expression -> expression INCREMENT_OP .)


state 140

    (107) expression -> expression BIT_RIGHT_SHIFT . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 201
    empty                          shift and go to state 55

state 141

    (92) expression -> expression ADV_ASSIGNMENT_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 202
    empty                          shift and go to state 55

state 142

    (97) expression -> expression BIT_OR . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 203
    empty                          shift and go to state 55

state 143

    (109) expression -> expression PLUS_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 204
    empty                          shift and go to state 55

state 144

    (117) expression -> expression SEARCH_MODIFY_NEG . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 205
    empty                          shift and go to state 55

state 145

    (103) expression -> expression GREATER_OP . expression
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 206
    empty                          shift and go to state 55

state 146

    (32) functionStatement -> SUB IDENTIFIER block .

    RETURN          reduce using rule 32 (functionStatement -> SUB IDENTIFIER block .)
    IDENTIFIER      reduce using rule 32 (functionStatement -> SUB IDENTIFIER block .)
    WHILE           reduce using rule 32 (functionStatement -> SUB IDENTIFIER block .)
    FOR             reduce using rule 32 (functionStatement -> SUB IDENTIFIER block .)
    PRINT           reduce using rule 32 (functionStatement -> SUB IDENTIFIER block .)
    SUB             reduce using rule 32 (functionStatement -> SUB IDENTIFIER block .)
    LAST            reduce using rule 32 (functionStatement -> SUB IDENTIFIER block .)
    NEXT            reduce using rule 32 (functionStatement -> SUB IDENTIFIER block .)
    IF              reduce using rule 32 (functionStatement -> SUB IDENTIFIER block .)
    USE             reduce using rule 32 (functionStatement -> SUB IDENTIFIER block .)
    SWITCH          reduce using rule 32 (functionStatement -> SUB IDENTIFIER block .)
    PRIVATE         reduce using rule 32 (functionStatement -> SUB IDENTIFIER block .)
    LOCAL           reduce using rule 32 (functionStatement -> SUB IDENTIFIER block .)
    OPEN_PARANTHESIS reduce using rule 32 (functionStatement -> SUB IDENTIFIER block .)
    ARRAY           reduce using rule 32 (functionStatement -> SUB IDENTIFIER block .)
    HASH            reduce using rule 32 (functionStatement -> SUB IDENTIFIER block .)
    VARIABLE        reduce using rule 32 (functionStatement -> SUB IDENTIFIER block .)
    BLOCK_ENDS      reduce using rule 32 (functionStatement -> SUB IDENTIFIER block .)
    $end            reduce using rule 32 (functionStatement -> SUB IDENTIFIER block .)


state 147

    (24) switchStatement -> SWITCH empty lefthandside . empty BLOCK_BEGIN caselist BLOCK_ENDS
    (8) empty -> .

    BLOCK_BEGIN     reduce using rule 8 (empty -> .)

    empty                          shift and go to state 207

state 148

    (43) lefthandside -> PRIVATE OPEN_PARANTHESIS type . decList CLOSE_PARANTHESIS
    (50) decList -> . COMMA type decList
    (51) decList -> . empty
    (8) empty -> .

    COMMA           shift and go to state 74
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)

    empty                          shift and go to state 76
    decList                        shift and go to state 208

state 149

    (42) lefthandside -> PRIVATE empty type . decList
    (50) decList -> . COMMA type decList
    (51) decList -> . empty
    (8) empty -> .

    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    BLOCK_BEGIN     reduce using rule 8 (empty -> .)

  ! COMMA           [ shift and go to state 74 ]

    empty                          shift and go to state 76
    decList                        shift and go to state 209

state 150

    (55) parameters -> empty .
    (84) expression -> empty .
    (68) term -> empty . number empty
    (69) term -> empty . type empty
    (70) term -> empty . variable empty
    (71) term -> empty . string empty
    (60) number -> . NUMBER
    (61) number -> . SCI_NOT
    (62) number -> . FLOAT
    (63) number -> . HEXADECIMAL
    (64) number -> . OCTAL
    (73) type -> . ARRAY
    (74) type -> . HASH
    (75) type -> . variable
    (65) variable -> . VARIABLE empty empty empty
    (66) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (67) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (58) string -> . STRING
    (59) string -> . RES_STRING

  ! reduce/reduce conflict for CLOSE_PARANTHESIS resolved using rule 55 (parameters -> empty .)
    CLOSE_PARANTHESIS reduce using rule 55 (parameters -> empty .)
    COMMA           reduce using rule 84 (expression -> empty .)
    INCREMENT_OP    reduce using rule 84 (expression -> empty .)
    DECREMENT_OP    reduce using rule 84 (expression -> empty .)
    OR_STR_OP       reduce using rule 84 (expression -> empty .)
    XOR_STR_OP      reduce using rule 84 (expression -> empty .)
    AND_STR_OP      reduce using rule 84 (expression -> empty .)
    NOT_STR_OP      reduce using rule 84 (expression -> empty .)
    ASSOCIATE_OP    reduce using rule 84 (expression -> empty .)
    ADV_ASSIGNMENT_OP reduce using rule 84 (expression -> empty .)
    ASSIGNMENT_OP   reduce using rule 84 (expression -> empty .)
    RANGE_OP        reduce using rule 84 (expression -> empty .)
    OR_OP           reduce using rule 84 (expression -> empty .)
    AND_OP          reduce using rule 84 (expression -> empty .)
    BIT_OR          reduce using rule 84 (expression -> empty .)
    BIT_XOR         reduce using rule 84 (expression -> empty .)
    BIT_AND         reduce using rule 84 (expression -> empty .)
    EQUALS_OP       reduce using rule 84 (expression -> empty .)
    NOT_EQUALS_OP   reduce using rule 84 (expression -> empty .)
    COMPARE_OP      reduce using rule 84 (expression -> empty .)
    GREATER_OP      reduce using rule 84 (expression -> empty .)
    LESS_OP         reduce using rule 84 (expression -> empty .)
    GREATER_EQUAL_OP reduce using rule 84 (expression -> empty .)
    LESS_EQUAL_OP   reduce using rule 84 (expression -> empty .)
    BIT_RIGHT_SHIFT reduce using rule 84 (expression -> empty .)
    BIT_LEFT_SHIFT  reduce using rule 84 (expression -> empty .)
    PLUS_OP         reduce using rule 84 (expression -> empty .)
    MINUS_OP        reduce using rule 84 (expression -> empty .)
    CONCATENATE     reduce using rule 84 (expression -> empty .)
    MULTIPLICATION_OP reduce using rule 84 (expression -> empty .)
    DIVISION_OP     reduce using rule 84 (expression -> empty .)
    MODULUS_OP      reduce using rule 84 (expression -> empty .)
    REP_OP          reduce using rule 84 (expression -> empty .)
    SEARCH_MODIFY   reduce using rule 84 (expression -> empty .)
    SEARCH_MODIFY_NEG reduce using rule 84 (expression -> empty .)
    EXPONENT_OP     reduce using rule 84 (expression -> empty .)
    NUMBER          shift and go to state 100
    SCI_NOT         shift and go to state 101
    FLOAT           shift and go to state 99
    HEXADECIMAL     shift and go to state 105
    OCTAL           shift and go to state 103
    ARRAY           shift and go to state 39
    HASH            shift and go to state 28
    VARIABLE        shift and go to state 9
    STRING          shift and go to state 86
    RES_STRING      shift and go to state 85

  ! CLOSE_PARANTHESIS [ reduce using rule 84 (expression -> empty .) ]

    variable                       shift and go to state 104
    type                           shift and go to state 106
    number                         shift and go to state 102
    string                         shift and go to state 98

state 151

    (52) functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters . CLOSE_PARANTHESIS SEMICOLON

    CLOSE_PARANTHESIS shift and go to state 210


state 152

    (53) parameters -> expression . COMMA parameters
    (54) parameters -> expression . empty empty
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression
    (8) empty -> .

    COMMA           shift and go to state 211
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    OR_STR_OP       shift and go to state 134
    XOR_STR_OP      shift and go to state 129
    AND_STR_OP      shift and go to state 122
    NOT_STR_OP      shift and go to state 116
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)

    empty                          shift and go to state 212

state 153

    (57) forStatement -> FOR OPEN_PARANTHESIS expression . SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    SEMICOLON       shift and go to state 213
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    OR_STR_OP       shift and go to state 134
    XOR_STR_OP      shift and go to state 129
    AND_STR_OP      shift and go to state 122
    NOT_STR_OP      shift and go to state 116
    COMMA           shift and go to state 125
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115


state 154

    (39) assignment -> lefthandside assignmenttype expression . SEMICOLON
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    SEMICOLON       shift and go to state 214
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    OR_STR_OP       shift and go to state 134
    XOR_STR_OP      shift and go to state 129
    AND_STR_OP      shift and go to state 122
    NOT_STR_OP      shift and go to state 116
    COMMA           shift and go to state 125
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115


state 155

    (49) declaration -> lefthandside decList CLOSE_PARANTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 215


state 156

    (48) declaration -> lefthandside decList empty . SEMICOLON

    SEMICOLON       shift and go to state 216


state 157

    (50) decList -> COMMA type . decList
    (50) decList -> . COMMA type decList
    (51) decList -> . empty
    (8) empty -> .

    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    BLOCK_BEGIN     reduce using rule 8 (empty -> .)

  ! COMMA           [ shift and go to state 74 ]

    empty                          shift and go to state 76
    decList                        shift and go to state 217

state 158

    (45) lefthandside -> LOCAL OPEN_PARANTHESIS type . decList CLOSE_PARANTHESIS
    (50) decList -> . COMMA type decList
    (51) decList -> . empty
    (8) empty -> .

    COMMA           shift and go to state 74
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)

    empty                          shift and go to state 76
    decList                        shift and go to state 218

state 159

    (44) lefthandside -> LOCAL empty type . decList
    (50) decList -> . COMMA type decList
    (51) decList -> . empty
    (8) empty -> .

    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    BLOCK_BEGIN     reduce using rule 8 (empty -> .)

  ! COMMA           [ shift and go to state 74 ]

    empty                          shift and go to state 76
    decList                        shift and go to state 219

state 160

    (28) ifthen -> IF OPEN_PARANTHESIS expression . CLOSE_PARANTHESIS block
    (29) ifthenelse -> IF OPEN_PARANTHESIS expression . CLOSE_PARANTHESIS block ELSE block
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS shift and go to state 220
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    OR_STR_OP       shift and go to state 134
    XOR_STR_OP      shift and go to state 129
    AND_STR_OP      shift and go to state 122
    NOT_STR_OP      shift and go to state 116
    COMMA           shift and go to state 125
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115


state 161

    (46) lefthandside -> OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .

    BLOCK_BEGIN     reduce using rule 46 (lefthandside -> OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    ADV_ASSIGNMENT_OP reduce using rule 46 (lefthandside -> OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    ASSIGNMENT_OP   reduce using rule 46 (lefthandside -> OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    COMMA           reduce using rule 46 (lefthandside -> OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    CLOSE_PARANTHESIS reduce using rule 46 (lefthandside -> OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    SEMICOLON       reduce using rule 46 (lefthandside -> OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)


state 162

    (66) variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .

    COMMA           reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    CLOSE_PARANTHESIS reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    ADV_ASSIGNMENT_OP reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    ASSIGNMENT_OP   reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    SEMICOLON       reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    INCREMENT_OP    reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    DECREMENT_OP    reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    OR_STR_OP       reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    XOR_STR_OP      reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    AND_STR_OP      reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    NOT_STR_OP      reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    ASSOCIATE_OP    reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    RANGE_OP        reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    OR_OP           reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    AND_OP          reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    BIT_OR          reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    BIT_XOR         reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    BIT_AND         reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    EQUALS_OP       reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    NOT_EQUALS_OP   reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    COMPARE_OP      reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    GREATER_OP      reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    LESS_OP         reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    GREATER_EQUAL_OP reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    LESS_EQUAL_OP   reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    BIT_RIGHT_SHIFT reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    BIT_LEFT_SHIFT  reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    PLUS_OP         reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    MINUS_OP        reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    CONCATENATE     reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    MULTIPLICATION_OP reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    DIVISION_OP     reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    MODULUS_OP      reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    REP_OP          reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    SEARCH_MODIFY   reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    SEARCH_MODIFY_NEG reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    EXPONENT_OP     reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    BLOCK_BEGIN     reduce using rule 66 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)


state 163

    (67) variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .

    COMMA           reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    CLOSE_PARANTHESIS reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    ADV_ASSIGNMENT_OP reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    ASSIGNMENT_OP   reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    SEMICOLON       reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    INCREMENT_OP    reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    DECREMENT_OP    reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    OR_STR_OP       reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    XOR_STR_OP      reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    AND_STR_OP      reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    NOT_STR_OP      reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    ASSOCIATE_OP    reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    RANGE_OP        reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    OR_OP           reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    AND_OP          reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    BIT_OR          reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    BIT_XOR         reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    BIT_AND         reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    EQUALS_OP       reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    NOT_EQUALS_OP   reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    COMPARE_OP      reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    GREATER_OP      reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    LESS_OP         reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    GREATER_EQUAL_OP reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    LESS_EQUAL_OP   reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    BIT_RIGHT_SHIFT reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    BIT_LEFT_SHIFT  reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    PLUS_OP         reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    MINUS_OP        reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    CONCATENATE     reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    MULTIPLICATION_OP reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    DIVISION_OP     reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    MODULUS_OP      reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    REP_OP          reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    SEARCH_MODIFY   reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    SEARCH_MODIFY_NEG reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    EXPONENT_OP     reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    BLOCK_BEGIN     reduce using rule 67 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)


state 164

    (65) variable -> VARIABLE empty empty empty .

    COMMA           reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    CLOSE_PARANTHESIS reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    ADV_ASSIGNMENT_OP reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    ASSIGNMENT_OP   reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    SEMICOLON       reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    INCREMENT_OP    reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    DECREMENT_OP    reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    OR_STR_OP       reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    XOR_STR_OP      reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    AND_STR_OP      reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    NOT_STR_OP      reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    ASSOCIATE_OP    reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    RANGE_OP        reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    OR_OP           reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    AND_OP          reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    BIT_OR          reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    BIT_XOR         reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    BIT_AND         reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    EQUALS_OP       reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    NOT_EQUALS_OP   reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    COMPARE_OP      reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    GREATER_OP      reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    LESS_OP         reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    GREATER_EQUAL_OP reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    LESS_EQUAL_OP   reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    BIT_RIGHT_SHIFT reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    BIT_LEFT_SHIFT  reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    PLUS_OP         reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    MINUS_OP        reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    CONCATENATE     reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    MULTIPLICATION_OP reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    DIVISION_OP     reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    MODULUS_OP      reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    REP_OP          reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    SEARCH_MODIFY   reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    SEARCH_MODIFY_NEG reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    EXPONENT_OP     reduce using rule 65 (variable -> VARIABLE empty empty empty .)
    BLOCK_BEGIN     reduce using rule 65 (variable -> VARIABLE empty empty empty .)


state 165

    (56) whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS . block
    (4) block -> . BLOCK_BEGIN statements BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 8

    block                          shift and go to state 221

state 166

    (33) printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 222


state 167

    (34) printStatement -> PRINT empty string1 empty . SEMICOLON

    SEMICOLON       shift and go to state 223


state 168

    (35) printStatement -> PRINT empty expression empty . SEMICOLON

    SEMICOLON       shift and go to state 224


state 169

    (72) term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .

    SEMICOLON       reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    INCREMENT_OP    reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    DECREMENT_OP    reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    OR_STR_OP       reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    XOR_STR_OP      reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    AND_STR_OP      reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    NOT_STR_OP      reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    COMMA           reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    ASSOCIATE_OP    reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    ADV_ASSIGNMENT_OP reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    ASSIGNMENT_OP   reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    RANGE_OP        reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    OR_OP           reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    AND_OP          reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    BIT_OR          reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    BIT_XOR         reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    BIT_AND         reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    EQUALS_OP       reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    NOT_EQUALS_OP   reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    COMPARE_OP      reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    GREATER_OP      reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    LESS_OP         reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    GREATER_EQUAL_OP reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    LESS_EQUAL_OP   reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    BIT_RIGHT_SHIFT reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    BIT_LEFT_SHIFT  reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    PLUS_OP         reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    MINUS_OP        reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    CONCATENATE     reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    MULTIPLICATION_OP reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    DIVISION_OP     reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    MODULUS_OP      reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    REP_OP          reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    SEARCH_MODIFY   reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    SEARCH_MODIFY_NEG reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    EXPONENT_OP     reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    CLOSE_PARANTHESIS reduce using rule 72 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)


state 170

    (71) term -> empty string empty .

    SEMICOLON       reduce using rule 71 (term -> empty string empty .)
    INCREMENT_OP    reduce using rule 71 (term -> empty string empty .)
    DECREMENT_OP    reduce using rule 71 (term -> empty string empty .)
    OR_STR_OP       reduce using rule 71 (term -> empty string empty .)
    XOR_STR_OP      reduce using rule 71 (term -> empty string empty .)
    AND_STR_OP      reduce using rule 71 (term -> empty string empty .)
    NOT_STR_OP      reduce using rule 71 (term -> empty string empty .)
    COMMA           reduce using rule 71 (term -> empty string empty .)
    ASSOCIATE_OP    reduce using rule 71 (term -> empty string empty .)
    ADV_ASSIGNMENT_OP reduce using rule 71 (term -> empty string empty .)
    ASSIGNMENT_OP   reduce using rule 71 (term -> empty string empty .)
    RANGE_OP        reduce using rule 71 (term -> empty string empty .)
    OR_OP           reduce using rule 71 (term -> empty string empty .)
    AND_OP          reduce using rule 71 (term -> empty string empty .)
    BIT_OR          reduce using rule 71 (term -> empty string empty .)
    BIT_XOR         reduce using rule 71 (term -> empty string empty .)
    BIT_AND         reduce using rule 71 (term -> empty string empty .)
    EQUALS_OP       reduce using rule 71 (term -> empty string empty .)
    NOT_EQUALS_OP   reduce using rule 71 (term -> empty string empty .)
    COMPARE_OP      reduce using rule 71 (term -> empty string empty .)
    GREATER_OP      reduce using rule 71 (term -> empty string empty .)
    LESS_OP         reduce using rule 71 (term -> empty string empty .)
    GREATER_EQUAL_OP reduce using rule 71 (term -> empty string empty .)
    LESS_EQUAL_OP   reduce using rule 71 (term -> empty string empty .)
    BIT_RIGHT_SHIFT reduce using rule 71 (term -> empty string empty .)
    BIT_LEFT_SHIFT  reduce using rule 71 (term -> empty string empty .)
    PLUS_OP         reduce using rule 71 (term -> empty string empty .)
    MINUS_OP        reduce using rule 71 (term -> empty string empty .)
    CONCATENATE     reduce using rule 71 (term -> empty string empty .)
    MULTIPLICATION_OP reduce using rule 71 (term -> empty string empty .)
    DIVISION_OP     reduce using rule 71 (term -> empty string empty .)
    MODULUS_OP      reduce using rule 71 (term -> empty string empty .)
    REP_OP          reduce using rule 71 (term -> empty string empty .)
    SEARCH_MODIFY   reduce using rule 71 (term -> empty string empty .)
    SEARCH_MODIFY_NEG reduce using rule 71 (term -> empty string empty .)
    EXPONENT_OP     reduce using rule 71 (term -> empty string empty .)
    CLOSE_PARANTHESIS reduce using rule 71 (term -> empty string empty .)


state 171

    (68) term -> empty number empty .

    SEMICOLON       reduce using rule 68 (term -> empty number empty .)
    INCREMENT_OP    reduce using rule 68 (term -> empty number empty .)
    DECREMENT_OP    reduce using rule 68 (term -> empty number empty .)
    OR_STR_OP       reduce using rule 68 (term -> empty number empty .)
    XOR_STR_OP      reduce using rule 68 (term -> empty number empty .)
    AND_STR_OP      reduce using rule 68 (term -> empty number empty .)
    NOT_STR_OP      reduce using rule 68 (term -> empty number empty .)
    COMMA           reduce using rule 68 (term -> empty number empty .)
    ASSOCIATE_OP    reduce using rule 68 (term -> empty number empty .)
    ADV_ASSIGNMENT_OP reduce using rule 68 (term -> empty number empty .)
    ASSIGNMENT_OP   reduce using rule 68 (term -> empty number empty .)
    RANGE_OP        reduce using rule 68 (term -> empty number empty .)
    OR_OP           reduce using rule 68 (term -> empty number empty .)
    AND_OP          reduce using rule 68 (term -> empty number empty .)
    BIT_OR          reduce using rule 68 (term -> empty number empty .)
    BIT_XOR         reduce using rule 68 (term -> empty number empty .)
    BIT_AND         reduce using rule 68 (term -> empty number empty .)
    EQUALS_OP       reduce using rule 68 (term -> empty number empty .)
    NOT_EQUALS_OP   reduce using rule 68 (term -> empty number empty .)
    COMPARE_OP      reduce using rule 68 (term -> empty number empty .)
    GREATER_OP      reduce using rule 68 (term -> empty number empty .)
    LESS_OP         reduce using rule 68 (term -> empty number empty .)
    GREATER_EQUAL_OP reduce using rule 68 (term -> empty number empty .)
    LESS_EQUAL_OP   reduce using rule 68 (term -> empty number empty .)
    BIT_RIGHT_SHIFT reduce using rule 68 (term -> empty number empty .)
    BIT_LEFT_SHIFT  reduce using rule 68 (term -> empty number empty .)
    PLUS_OP         reduce using rule 68 (term -> empty number empty .)
    MINUS_OP        reduce using rule 68 (term -> empty number empty .)
    CONCATENATE     reduce using rule 68 (term -> empty number empty .)
    MULTIPLICATION_OP reduce using rule 68 (term -> empty number empty .)
    DIVISION_OP     reduce using rule 68 (term -> empty number empty .)
    MODULUS_OP      reduce using rule 68 (term -> empty number empty .)
    REP_OP          reduce using rule 68 (term -> empty number empty .)
    SEARCH_MODIFY   reduce using rule 68 (term -> empty number empty .)
    SEARCH_MODIFY_NEG reduce using rule 68 (term -> empty number empty .)
    EXPONENT_OP     reduce using rule 68 (term -> empty number empty .)
    CLOSE_PARANTHESIS reduce using rule 68 (term -> empty number empty .)


state 172

    (70) term -> empty variable empty .

    SEMICOLON       reduce using rule 70 (term -> empty variable empty .)
    INCREMENT_OP    reduce using rule 70 (term -> empty variable empty .)
    DECREMENT_OP    reduce using rule 70 (term -> empty variable empty .)
    OR_STR_OP       reduce using rule 70 (term -> empty variable empty .)
    XOR_STR_OP      reduce using rule 70 (term -> empty variable empty .)
    AND_STR_OP      reduce using rule 70 (term -> empty variable empty .)
    NOT_STR_OP      reduce using rule 70 (term -> empty variable empty .)
    COMMA           reduce using rule 70 (term -> empty variable empty .)
    ASSOCIATE_OP    reduce using rule 70 (term -> empty variable empty .)
    ADV_ASSIGNMENT_OP reduce using rule 70 (term -> empty variable empty .)
    ASSIGNMENT_OP   reduce using rule 70 (term -> empty variable empty .)
    RANGE_OP        reduce using rule 70 (term -> empty variable empty .)
    OR_OP           reduce using rule 70 (term -> empty variable empty .)
    AND_OP          reduce using rule 70 (term -> empty variable empty .)
    BIT_OR          reduce using rule 70 (term -> empty variable empty .)
    BIT_XOR         reduce using rule 70 (term -> empty variable empty .)
    BIT_AND         reduce using rule 70 (term -> empty variable empty .)
    EQUALS_OP       reduce using rule 70 (term -> empty variable empty .)
    NOT_EQUALS_OP   reduce using rule 70 (term -> empty variable empty .)
    COMPARE_OP      reduce using rule 70 (term -> empty variable empty .)
    GREATER_OP      reduce using rule 70 (term -> empty variable empty .)
    LESS_OP         reduce using rule 70 (term -> empty variable empty .)
    GREATER_EQUAL_OP reduce using rule 70 (term -> empty variable empty .)
    LESS_EQUAL_OP   reduce using rule 70 (term -> empty variable empty .)
    BIT_RIGHT_SHIFT reduce using rule 70 (term -> empty variable empty .)
    BIT_LEFT_SHIFT  reduce using rule 70 (term -> empty variable empty .)
    PLUS_OP         reduce using rule 70 (term -> empty variable empty .)
    MINUS_OP        reduce using rule 70 (term -> empty variable empty .)
    CONCATENATE     reduce using rule 70 (term -> empty variable empty .)
    MULTIPLICATION_OP reduce using rule 70 (term -> empty variable empty .)
    DIVISION_OP     reduce using rule 70 (term -> empty variable empty .)
    MODULUS_OP      reduce using rule 70 (term -> empty variable empty .)
    REP_OP          reduce using rule 70 (term -> empty variable empty .)
    SEARCH_MODIFY   reduce using rule 70 (term -> empty variable empty .)
    SEARCH_MODIFY_NEG reduce using rule 70 (term -> empty variable empty .)
    EXPONENT_OP     reduce using rule 70 (term -> empty variable empty .)
    CLOSE_PARANTHESIS reduce using rule 70 (term -> empty variable empty .)


state 173

    (69) term -> empty type empty .

    SEMICOLON       reduce using rule 69 (term -> empty type empty .)
    INCREMENT_OP    reduce using rule 69 (term -> empty type empty .)
    DECREMENT_OP    reduce using rule 69 (term -> empty type empty .)
    OR_STR_OP       reduce using rule 69 (term -> empty type empty .)
    XOR_STR_OP      reduce using rule 69 (term -> empty type empty .)
    AND_STR_OP      reduce using rule 69 (term -> empty type empty .)
    NOT_STR_OP      reduce using rule 69 (term -> empty type empty .)
    COMMA           reduce using rule 69 (term -> empty type empty .)
    ASSOCIATE_OP    reduce using rule 69 (term -> empty type empty .)
    ADV_ASSIGNMENT_OP reduce using rule 69 (term -> empty type empty .)
    ASSIGNMENT_OP   reduce using rule 69 (term -> empty type empty .)
    RANGE_OP        reduce using rule 69 (term -> empty type empty .)
    OR_OP           reduce using rule 69 (term -> empty type empty .)
    AND_OP          reduce using rule 69 (term -> empty type empty .)
    BIT_OR          reduce using rule 69 (term -> empty type empty .)
    BIT_XOR         reduce using rule 69 (term -> empty type empty .)
    BIT_AND         reduce using rule 69 (term -> empty type empty .)
    EQUALS_OP       reduce using rule 69 (term -> empty type empty .)
    NOT_EQUALS_OP   reduce using rule 69 (term -> empty type empty .)
    COMPARE_OP      reduce using rule 69 (term -> empty type empty .)
    GREATER_OP      reduce using rule 69 (term -> empty type empty .)
    LESS_OP         reduce using rule 69 (term -> empty type empty .)
    GREATER_EQUAL_OP reduce using rule 69 (term -> empty type empty .)
    LESS_EQUAL_OP   reduce using rule 69 (term -> empty type empty .)
    BIT_RIGHT_SHIFT reduce using rule 69 (term -> empty type empty .)
    BIT_LEFT_SHIFT  reduce using rule 69 (term -> empty type empty .)
    PLUS_OP         reduce using rule 69 (term -> empty type empty .)
    MINUS_OP        reduce using rule 69 (term -> empty type empty .)
    CONCATENATE     reduce using rule 69 (term -> empty type empty .)
    MULTIPLICATION_OP reduce using rule 69 (term -> empty type empty .)
    DIVISION_OP     reduce using rule 69 (term -> empty type empty .)
    MODULUS_OP      reduce using rule 69 (term -> empty type empty .)
    REP_OP          reduce using rule 69 (term -> empty type empty .)
    SEARCH_MODIFY   reduce using rule 69 (term -> empty type empty .)
    SEARCH_MODIFY_NEG reduce using rule 69 (term -> empty type empty .)
    EXPONENT_OP     reduce using rule 69 (term -> empty type empty .)
    CLOSE_PARANTHESIS reduce using rule 69 (term -> empty type empty .)


state 174

    (116) expression -> expression SEARCH_MODIFY expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    XOR_STR_OP      reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    AND_STR_OP      reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    NOT_STR_OP      reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    COMMA           reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    ASSOCIATE_OP    reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    ADV_ASSIGNMENT_OP reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    ASSIGNMENT_OP   reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    RANGE_OP        reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    OR_OP           reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    AND_OP          reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    BIT_OR          reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    BIT_XOR         reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    BIT_AND         reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    EQUALS_OP       reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    NOT_EQUALS_OP   reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    COMPARE_OP      reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    GREATER_OP      reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    LESS_OP         reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    GREATER_EQUAL_OP reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    LESS_EQUAL_OP   reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    BIT_RIGHT_SHIFT reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    BIT_LEFT_SHIFT  reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    PLUS_OP         reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    MINUS_OP        reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    CONCATENATE     reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    MULTIPLICATION_OP reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    DIVISION_OP     reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    MODULUS_OP      reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    REP_OP          reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    SEARCH_MODIFY   reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    SEARCH_MODIFY_NEG reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    SEMICOLON       reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    CLOSE_PARANTHESIS reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .) ]
  ! DECREMENT_OP    [ reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .) ]
  ! EXPONENT_OP     [ reduce using rule 116 (expression -> expression SEARCH_MODIFY expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]
  ! MULTIPLICATION_OP [ shift and go to state 131 ]
  ! DIVISION_OP     [ shift and go to state 117 ]
  ! MODULUS_OP      [ shift and go to state 126 ]
  ! REP_OP          [ shift and go to state 137 ]
  ! SEARCH_MODIFY   [ shift and go to state 110 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 144 ]


state 175

    (106) expression -> expression LESS_EQUAL_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .)
    XOR_STR_OP      reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .)
    AND_STR_OP      reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .)
    NOT_STR_OP      reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .)
    COMMA           reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .)
    ASSOCIATE_OP    reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .)
    ASSIGNMENT_OP   reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .)
    RANGE_OP        reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .)
    OR_OP           reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .)
    AND_OP          reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .)
    BIT_OR          reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .)
    BIT_XOR         reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .)
    BIT_AND         reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .)
    EQUALS_OP       reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .)
    NOT_EQUALS_OP   reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .)
    COMPARE_OP      reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .)
    GREATER_OP      reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .)
    LESS_OP         reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .)
    GREATER_EQUAL_OP reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .)
    LESS_EQUAL_OP   reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .)
    SEMICOLON       reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! REP_OP          [ reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 106 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]


state 176

    (100) expression -> expression EQUALS_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 100 (expression -> expression EQUALS_OP expression .)
    XOR_STR_OP      reduce using rule 100 (expression -> expression EQUALS_OP expression .)
    AND_STR_OP      reduce using rule 100 (expression -> expression EQUALS_OP expression .)
    NOT_STR_OP      reduce using rule 100 (expression -> expression EQUALS_OP expression .)
    COMMA           reduce using rule 100 (expression -> expression EQUALS_OP expression .)
    ASSOCIATE_OP    reduce using rule 100 (expression -> expression EQUALS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 100 (expression -> expression EQUALS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 100 (expression -> expression EQUALS_OP expression .)
    RANGE_OP        reduce using rule 100 (expression -> expression EQUALS_OP expression .)
    OR_OP           reduce using rule 100 (expression -> expression EQUALS_OP expression .)
    AND_OP          reduce using rule 100 (expression -> expression EQUALS_OP expression .)
    BIT_OR          reduce using rule 100 (expression -> expression EQUALS_OP expression .)
    BIT_XOR         reduce using rule 100 (expression -> expression EQUALS_OP expression .)
    BIT_AND         reduce using rule 100 (expression -> expression EQUALS_OP expression .)
    EQUALS_OP       reduce using rule 100 (expression -> expression EQUALS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 100 (expression -> expression EQUALS_OP expression .)
    COMPARE_OP      reduce using rule 100 (expression -> expression EQUALS_OP expression .)
    SEMICOLON       reduce using rule 100 (expression -> expression EQUALS_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 100 (expression -> expression EQUALS_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 100 (expression -> expression EQUALS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 100 (expression -> expression EQUALS_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 100 (expression -> expression EQUALS_OP expression .) ]
  ! LESS_OP         [ reduce using rule 100 (expression -> expression EQUALS_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 100 (expression -> expression EQUALS_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 100 (expression -> expression EQUALS_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 100 (expression -> expression EQUALS_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 100 (expression -> expression EQUALS_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 100 (expression -> expression EQUALS_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 100 (expression -> expression EQUALS_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 100 (expression -> expression EQUALS_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 100 (expression -> expression EQUALS_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 100 (expression -> expression EQUALS_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 100 (expression -> expression EQUALS_OP expression .) ]
  ! REP_OP          [ reduce using rule 100 (expression -> expression EQUALS_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 100 (expression -> expression EQUALS_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 100 (expression -> expression EQUALS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 100 (expression -> expression EQUALS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]


state 177

    (102) expression -> expression COMPARE_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 102 (expression -> expression COMPARE_OP expression .)
    XOR_STR_OP      reduce using rule 102 (expression -> expression COMPARE_OP expression .)
    AND_STR_OP      reduce using rule 102 (expression -> expression COMPARE_OP expression .)
    NOT_STR_OP      reduce using rule 102 (expression -> expression COMPARE_OP expression .)
    COMMA           reduce using rule 102 (expression -> expression COMPARE_OP expression .)
    ASSOCIATE_OP    reduce using rule 102 (expression -> expression COMPARE_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 102 (expression -> expression COMPARE_OP expression .)
    ASSIGNMENT_OP   reduce using rule 102 (expression -> expression COMPARE_OP expression .)
    RANGE_OP        reduce using rule 102 (expression -> expression COMPARE_OP expression .)
    OR_OP           reduce using rule 102 (expression -> expression COMPARE_OP expression .)
    AND_OP          reduce using rule 102 (expression -> expression COMPARE_OP expression .)
    BIT_OR          reduce using rule 102 (expression -> expression COMPARE_OP expression .)
    BIT_XOR         reduce using rule 102 (expression -> expression COMPARE_OP expression .)
    BIT_AND         reduce using rule 102 (expression -> expression COMPARE_OP expression .)
    EQUALS_OP       reduce using rule 102 (expression -> expression COMPARE_OP expression .)
    NOT_EQUALS_OP   reduce using rule 102 (expression -> expression COMPARE_OP expression .)
    COMPARE_OP      reduce using rule 102 (expression -> expression COMPARE_OP expression .)
    SEMICOLON       reduce using rule 102 (expression -> expression COMPARE_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 102 (expression -> expression COMPARE_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 102 (expression -> expression COMPARE_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 102 (expression -> expression COMPARE_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 102 (expression -> expression COMPARE_OP expression .) ]
  ! LESS_OP         [ reduce using rule 102 (expression -> expression COMPARE_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 102 (expression -> expression COMPARE_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 102 (expression -> expression COMPARE_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 102 (expression -> expression COMPARE_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 102 (expression -> expression COMPARE_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 102 (expression -> expression COMPARE_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 102 (expression -> expression COMPARE_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 102 (expression -> expression COMPARE_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 102 (expression -> expression COMPARE_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 102 (expression -> expression COMPARE_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 102 (expression -> expression COMPARE_OP expression .) ]
  ! REP_OP          [ reduce using rule 102 (expression -> expression COMPARE_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 102 (expression -> expression COMPARE_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 102 (expression -> expression COMPARE_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 102 (expression -> expression COMPARE_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]


state 178

    (101) expression -> expression NOT_EQUALS_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .)
    XOR_STR_OP      reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .)
    AND_STR_OP      reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .)
    NOT_STR_OP      reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .)
    COMMA           reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .)
    ASSOCIATE_OP    reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .)
    RANGE_OP        reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .)
    OR_OP           reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .)
    AND_OP          reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .)
    BIT_OR          reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .)
    BIT_XOR         reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .)
    BIT_AND         reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .)
    EQUALS_OP       reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .)
    COMPARE_OP      reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .)
    SEMICOLON       reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! LESS_OP         [ reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! REP_OP          [ reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 101 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]


state 179

    (118) expression -> expression EXPONENT_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    XOR_STR_OP      reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    AND_STR_OP      reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    NOT_STR_OP      reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    COMMA           reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    ASSOCIATE_OP    reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    ASSIGNMENT_OP   reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    RANGE_OP        reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    OR_OP           reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    AND_OP          reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    BIT_OR          reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    BIT_XOR         reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    BIT_AND         reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    EQUALS_OP       reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    NOT_EQUALS_OP   reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    COMPARE_OP      reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    GREATER_OP      reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    LESS_OP         reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    GREATER_EQUAL_OP reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    LESS_EQUAL_OP   reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    PLUS_OP         reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    MINUS_OP        reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    CONCATENATE     reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    MULTIPLICATION_OP reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    DIVISION_OP     reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    MODULUS_OP      reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    REP_OP          reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    SEARCH_MODIFY   reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    SEARCH_MODIFY_NEG reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    SEMICOLON       reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 118 (expression -> expression EXPONENT_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 118 (expression -> expression EXPONENT_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 118 (expression -> expression EXPONENT_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 118 (expression -> expression EXPONENT_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]
  ! MULTIPLICATION_OP [ shift and go to state 131 ]
  ! DIVISION_OP     [ shift and go to state 117 ]
  ! MODULUS_OP      [ shift and go to state 126 ]
  ! REP_OP          [ shift and go to state 137 ]
  ! SEARCH_MODIFY   [ shift and go to state 110 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 144 ]


state 180

    (89) expression -> expression NOT_STR_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 89 (expression -> expression NOT_STR_OP expression .)
    XOR_STR_OP      reduce using rule 89 (expression -> expression NOT_STR_OP expression .)
    AND_STR_OP      reduce using rule 89 (expression -> expression NOT_STR_OP expression .)
    SEMICOLON       reduce using rule 89 (expression -> expression NOT_STR_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 89 (expression -> expression NOT_STR_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    NOT_STR_OP      shift and go to state 116
    COMMA           shift and go to state 125
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! NOT_STR_OP      [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! COMMA           [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! ASSOCIATE_OP    [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! RANGE_OP        [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! OR_OP           [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! AND_OP          [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! BIT_OR          [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! BIT_AND         [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! LESS_OP         [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! REP_OP          [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 89 (expression -> expression NOT_STR_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]


state 181

    (113) expression -> expression DIVISION_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    XOR_STR_OP      reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    AND_STR_OP      reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    NOT_STR_OP      reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    COMMA           reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    ASSOCIATE_OP    reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    ASSIGNMENT_OP   reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    RANGE_OP        reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    OR_OP           reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    AND_OP          reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    BIT_OR          reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    BIT_XOR         reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    BIT_AND         reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    EQUALS_OP       reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    NOT_EQUALS_OP   reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    COMPARE_OP      reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    GREATER_OP      reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    LESS_OP         reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    GREATER_EQUAL_OP reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    LESS_EQUAL_OP   reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    PLUS_OP         reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    MINUS_OP        reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    CONCATENATE     reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    MULTIPLICATION_OP reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    DIVISION_OP     reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    MODULUS_OP      reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    REP_OP          reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    SEMICOLON       reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 113 (expression -> expression DIVISION_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 113 (expression -> expression DIVISION_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 113 (expression -> expression DIVISION_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 113 (expression -> expression DIVISION_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 113 (expression -> expression DIVISION_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 113 (expression -> expression DIVISION_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]
  ! MULTIPLICATION_OP [ shift and go to state 131 ]
  ! DIVISION_OP     [ shift and go to state 117 ]
  ! MODULUS_OP      [ shift and go to state 126 ]
  ! REP_OP          [ shift and go to state 137 ]


state 182

    (94) expression -> expression RANGE_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 94 (expression -> expression RANGE_OP expression .)
    XOR_STR_OP      reduce using rule 94 (expression -> expression RANGE_OP expression .)
    AND_STR_OP      reduce using rule 94 (expression -> expression RANGE_OP expression .)
    NOT_STR_OP      reduce using rule 94 (expression -> expression RANGE_OP expression .)
    COMMA           reduce using rule 94 (expression -> expression RANGE_OP expression .)
    ASSOCIATE_OP    reduce using rule 94 (expression -> expression RANGE_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 94 (expression -> expression RANGE_OP expression .)
    ASSIGNMENT_OP   reduce using rule 94 (expression -> expression RANGE_OP expression .)
    RANGE_OP        reduce using rule 94 (expression -> expression RANGE_OP expression .)
    SEMICOLON       reduce using rule 94 (expression -> expression RANGE_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 94 (expression -> expression RANGE_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 94 (expression -> expression RANGE_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 94 (expression -> expression RANGE_OP expression .) ]
  ! OR_OP           [ reduce using rule 94 (expression -> expression RANGE_OP expression .) ]
  ! AND_OP          [ reduce using rule 94 (expression -> expression RANGE_OP expression .) ]
  ! BIT_OR          [ reduce using rule 94 (expression -> expression RANGE_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 94 (expression -> expression RANGE_OP expression .) ]
  ! BIT_AND         [ reduce using rule 94 (expression -> expression RANGE_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 94 (expression -> expression RANGE_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 94 (expression -> expression RANGE_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 94 (expression -> expression RANGE_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 94 (expression -> expression RANGE_OP expression .) ]
  ! LESS_OP         [ reduce using rule 94 (expression -> expression RANGE_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 94 (expression -> expression RANGE_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 94 (expression -> expression RANGE_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 94 (expression -> expression RANGE_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 94 (expression -> expression RANGE_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 94 (expression -> expression RANGE_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 94 (expression -> expression RANGE_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 94 (expression -> expression RANGE_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 94 (expression -> expression RANGE_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 94 (expression -> expression RANGE_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 94 (expression -> expression RANGE_OP expression .) ]
  ! REP_OP          [ reduce using rule 94 (expression -> expression RANGE_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 94 (expression -> expression RANGE_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 94 (expression -> expression RANGE_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 94 (expression -> expression RANGE_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]


state 183

    (98) expression -> expression BIT_XOR expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 98 (expression -> expression BIT_XOR expression .)
    XOR_STR_OP      reduce using rule 98 (expression -> expression BIT_XOR expression .)
    AND_STR_OP      reduce using rule 98 (expression -> expression BIT_XOR expression .)
    NOT_STR_OP      reduce using rule 98 (expression -> expression BIT_XOR expression .)
    COMMA           reduce using rule 98 (expression -> expression BIT_XOR expression .)
    ASSOCIATE_OP    reduce using rule 98 (expression -> expression BIT_XOR expression .)
    ADV_ASSIGNMENT_OP reduce using rule 98 (expression -> expression BIT_XOR expression .)
    ASSIGNMENT_OP   reduce using rule 98 (expression -> expression BIT_XOR expression .)
    RANGE_OP        reduce using rule 98 (expression -> expression BIT_XOR expression .)
    OR_OP           reduce using rule 98 (expression -> expression BIT_XOR expression .)
    AND_OP          reduce using rule 98 (expression -> expression BIT_XOR expression .)
    BIT_OR          reduce using rule 98 (expression -> expression BIT_XOR expression .)
    BIT_XOR         reduce using rule 98 (expression -> expression BIT_XOR expression .)
    SEMICOLON       reduce using rule 98 (expression -> expression BIT_XOR expression .)
    CLOSE_PARANTHESIS reduce using rule 98 (expression -> expression BIT_XOR expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 98 (expression -> expression BIT_XOR expression .) ]
  ! DECREMENT_OP    [ reduce using rule 98 (expression -> expression BIT_XOR expression .) ]
  ! BIT_AND         [ reduce using rule 98 (expression -> expression BIT_XOR expression .) ]
  ! EQUALS_OP       [ reduce using rule 98 (expression -> expression BIT_XOR expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 98 (expression -> expression BIT_XOR expression .) ]
  ! COMPARE_OP      [ reduce using rule 98 (expression -> expression BIT_XOR expression .) ]
  ! GREATER_OP      [ reduce using rule 98 (expression -> expression BIT_XOR expression .) ]
  ! LESS_OP         [ reduce using rule 98 (expression -> expression BIT_XOR expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 98 (expression -> expression BIT_XOR expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 98 (expression -> expression BIT_XOR expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 98 (expression -> expression BIT_XOR expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 98 (expression -> expression BIT_XOR expression .) ]
  ! PLUS_OP         [ reduce using rule 98 (expression -> expression BIT_XOR expression .) ]
  ! MINUS_OP        [ reduce using rule 98 (expression -> expression BIT_XOR expression .) ]
  ! CONCATENATE     [ reduce using rule 98 (expression -> expression BIT_XOR expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 98 (expression -> expression BIT_XOR expression .) ]
  ! DIVISION_OP     [ reduce using rule 98 (expression -> expression BIT_XOR expression .) ]
  ! MODULUS_OP      [ reduce using rule 98 (expression -> expression BIT_XOR expression .) ]
  ! REP_OP          [ reduce using rule 98 (expression -> expression BIT_XOR expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 98 (expression -> expression BIT_XOR expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 98 (expression -> expression BIT_XOR expression .) ]
  ! EXPONENT_OP     [ reduce using rule 98 (expression -> expression BIT_XOR expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]


state 184

    (110) expression -> expression MINUS_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 110 (expression -> expression MINUS_OP expression .)
    XOR_STR_OP      reduce using rule 110 (expression -> expression MINUS_OP expression .)
    AND_STR_OP      reduce using rule 110 (expression -> expression MINUS_OP expression .)
    NOT_STR_OP      reduce using rule 110 (expression -> expression MINUS_OP expression .)
    COMMA           reduce using rule 110 (expression -> expression MINUS_OP expression .)
    ASSOCIATE_OP    reduce using rule 110 (expression -> expression MINUS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 110 (expression -> expression MINUS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 110 (expression -> expression MINUS_OP expression .)
    RANGE_OP        reduce using rule 110 (expression -> expression MINUS_OP expression .)
    OR_OP           reduce using rule 110 (expression -> expression MINUS_OP expression .)
    AND_OP          reduce using rule 110 (expression -> expression MINUS_OP expression .)
    BIT_OR          reduce using rule 110 (expression -> expression MINUS_OP expression .)
    BIT_XOR         reduce using rule 110 (expression -> expression MINUS_OP expression .)
    BIT_AND         reduce using rule 110 (expression -> expression MINUS_OP expression .)
    EQUALS_OP       reduce using rule 110 (expression -> expression MINUS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 110 (expression -> expression MINUS_OP expression .)
    COMPARE_OP      reduce using rule 110 (expression -> expression MINUS_OP expression .)
    GREATER_OP      reduce using rule 110 (expression -> expression MINUS_OP expression .)
    LESS_OP         reduce using rule 110 (expression -> expression MINUS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 110 (expression -> expression MINUS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 110 (expression -> expression MINUS_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 110 (expression -> expression MINUS_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 110 (expression -> expression MINUS_OP expression .)
    PLUS_OP         reduce using rule 110 (expression -> expression MINUS_OP expression .)
    MINUS_OP        reduce using rule 110 (expression -> expression MINUS_OP expression .)
    CONCATENATE     reduce using rule 110 (expression -> expression MINUS_OP expression .)
    SEMICOLON       reduce using rule 110 (expression -> expression MINUS_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 110 (expression -> expression MINUS_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 110 (expression -> expression MINUS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 110 (expression -> expression MINUS_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 110 (expression -> expression MINUS_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 110 (expression -> expression MINUS_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 110 (expression -> expression MINUS_OP expression .) ]
  ! REP_OP          [ reduce using rule 110 (expression -> expression MINUS_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 110 (expression -> expression MINUS_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 110 (expression -> expression MINUS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 110 (expression -> expression MINUS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]


state 185

    (88) expression -> expression AND_STR_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 88 (expression -> expression AND_STR_OP expression .)
    XOR_STR_OP      reduce using rule 88 (expression -> expression AND_STR_OP expression .)
    AND_STR_OP      reduce using rule 88 (expression -> expression AND_STR_OP expression .)
    SEMICOLON       reduce using rule 88 (expression -> expression AND_STR_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 88 (expression -> expression AND_STR_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    NOT_STR_OP      shift and go to state 116
    COMMA           shift and go to state 125
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! NOT_STR_OP      [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! COMMA           [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! ASSOCIATE_OP    [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! RANGE_OP        [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! OR_OP           [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! AND_OP          [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! BIT_OR          [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! BIT_AND         [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! LESS_OP         [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! REP_OP          [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 88 (expression -> expression AND_STR_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]


state 186

    (95) expression -> expression OR_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 95 (expression -> expression OR_OP expression .)
    XOR_STR_OP      reduce using rule 95 (expression -> expression OR_OP expression .)
    AND_STR_OP      reduce using rule 95 (expression -> expression OR_OP expression .)
    NOT_STR_OP      reduce using rule 95 (expression -> expression OR_OP expression .)
    COMMA           reduce using rule 95 (expression -> expression OR_OP expression .)
    ASSOCIATE_OP    reduce using rule 95 (expression -> expression OR_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 95 (expression -> expression OR_OP expression .)
    ASSIGNMENT_OP   reduce using rule 95 (expression -> expression OR_OP expression .)
    RANGE_OP        reduce using rule 95 (expression -> expression OR_OP expression .)
    OR_OP           reduce using rule 95 (expression -> expression OR_OP expression .)
    SEMICOLON       reduce using rule 95 (expression -> expression OR_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 95 (expression -> expression OR_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 95 (expression -> expression OR_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 95 (expression -> expression OR_OP expression .) ]
  ! AND_OP          [ reduce using rule 95 (expression -> expression OR_OP expression .) ]
  ! BIT_OR          [ reduce using rule 95 (expression -> expression OR_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 95 (expression -> expression OR_OP expression .) ]
  ! BIT_AND         [ reduce using rule 95 (expression -> expression OR_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 95 (expression -> expression OR_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 95 (expression -> expression OR_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 95 (expression -> expression OR_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 95 (expression -> expression OR_OP expression .) ]
  ! LESS_OP         [ reduce using rule 95 (expression -> expression OR_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 95 (expression -> expression OR_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 95 (expression -> expression OR_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 95 (expression -> expression OR_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 95 (expression -> expression OR_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 95 (expression -> expression OR_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 95 (expression -> expression OR_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 95 (expression -> expression OR_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 95 (expression -> expression OR_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 95 (expression -> expression OR_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 95 (expression -> expression OR_OP expression .) ]
  ! REP_OP          [ reduce using rule 95 (expression -> expression OR_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 95 (expression -> expression OR_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 95 (expression -> expression OR_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 95 (expression -> expression OR_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]


state 187

    (104) expression -> expression LESS_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 104 (expression -> expression LESS_OP expression .)
    XOR_STR_OP      reduce using rule 104 (expression -> expression LESS_OP expression .)
    AND_STR_OP      reduce using rule 104 (expression -> expression LESS_OP expression .)
    NOT_STR_OP      reduce using rule 104 (expression -> expression LESS_OP expression .)
    COMMA           reduce using rule 104 (expression -> expression LESS_OP expression .)
    ASSOCIATE_OP    reduce using rule 104 (expression -> expression LESS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 104 (expression -> expression LESS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 104 (expression -> expression LESS_OP expression .)
    RANGE_OP        reduce using rule 104 (expression -> expression LESS_OP expression .)
    OR_OP           reduce using rule 104 (expression -> expression LESS_OP expression .)
    AND_OP          reduce using rule 104 (expression -> expression LESS_OP expression .)
    BIT_OR          reduce using rule 104 (expression -> expression LESS_OP expression .)
    BIT_XOR         reduce using rule 104 (expression -> expression LESS_OP expression .)
    BIT_AND         reduce using rule 104 (expression -> expression LESS_OP expression .)
    EQUALS_OP       reduce using rule 104 (expression -> expression LESS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 104 (expression -> expression LESS_OP expression .)
    COMPARE_OP      reduce using rule 104 (expression -> expression LESS_OP expression .)
    GREATER_OP      reduce using rule 104 (expression -> expression LESS_OP expression .)
    LESS_OP         reduce using rule 104 (expression -> expression LESS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 104 (expression -> expression LESS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 104 (expression -> expression LESS_OP expression .)
    SEMICOLON       reduce using rule 104 (expression -> expression LESS_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 104 (expression -> expression LESS_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 104 (expression -> expression LESS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 104 (expression -> expression LESS_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 104 (expression -> expression LESS_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 104 (expression -> expression LESS_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 104 (expression -> expression LESS_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 104 (expression -> expression LESS_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 104 (expression -> expression LESS_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 104 (expression -> expression LESS_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 104 (expression -> expression LESS_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 104 (expression -> expression LESS_OP expression .) ]
  ! REP_OP          [ reduce using rule 104 (expression -> expression LESS_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 104 (expression -> expression LESS_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 104 (expression -> expression LESS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 104 (expression -> expression LESS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]


state 188

    (90) expression -> expression COMMA expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 90 (expression -> expression COMMA expression .)
    XOR_STR_OP      reduce using rule 90 (expression -> expression COMMA expression .)
    AND_STR_OP      reduce using rule 90 (expression -> expression COMMA expression .)
    NOT_STR_OP      reduce using rule 90 (expression -> expression COMMA expression .)
    COMMA           reduce using rule 90 (expression -> expression COMMA expression .)
    ASSOCIATE_OP    reduce using rule 90 (expression -> expression COMMA expression .)
    SEMICOLON       reduce using rule 90 (expression -> expression COMMA expression .)
    CLOSE_PARANTHESIS reduce using rule 90 (expression -> expression COMMA expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! DECREMENT_OP    [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! RANGE_OP        [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! OR_OP           [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! AND_OP          [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! BIT_OR          [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! BIT_XOR         [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! BIT_AND         [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! EQUALS_OP       [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! COMPARE_OP      [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! GREATER_OP      [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! LESS_OP         [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! PLUS_OP         [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! MINUS_OP        [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! CONCATENATE     [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! DIVISION_OP     [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! MODULUS_OP      [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! REP_OP          [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! EXPONENT_OP     [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]


state 189

    (114) expression -> expression MODULUS_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    XOR_STR_OP      reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    AND_STR_OP      reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    NOT_STR_OP      reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    COMMA           reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    ASSOCIATE_OP    reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    RANGE_OP        reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    OR_OP           reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    AND_OP          reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    BIT_OR          reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    BIT_XOR         reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    BIT_AND         reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    EQUALS_OP       reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    COMPARE_OP      reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    GREATER_OP      reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    LESS_OP         reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    PLUS_OP         reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    MINUS_OP        reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    CONCATENATE     reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    MULTIPLICATION_OP reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    DIVISION_OP     reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    MODULUS_OP      reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    REP_OP          reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    SEMICOLON       reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 114 (expression -> expression MODULUS_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 114 (expression -> expression MODULUS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 114 (expression -> expression MODULUS_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 114 (expression -> expression MODULUS_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 114 (expression -> expression MODULUS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 114 (expression -> expression MODULUS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]
  ! MULTIPLICATION_OP [ shift and go to state 131 ]
  ! DIVISION_OP     [ shift and go to state 117 ]
  ! MODULUS_OP      [ shift and go to state 126 ]
  ! REP_OP          [ shift and go to state 137 ]


state 190

    (93) expression -> expression ASSIGNMENT_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .)
    XOR_STR_OP      reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .)
    AND_STR_OP      reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .)
    NOT_STR_OP      reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .)
    COMMA           reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .)
    ASSOCIATE_OP    reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .)
    SEMICOLON       reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! RANGE_OP        [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! OR_OP           [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! AND_OP          [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! BIT_OR          [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! BIT_AND         [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! LESS_OP         [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! REP_OP          [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 93 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]


state 191

    (105) expression -> expression GREATER_EQUAL_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .)
    XOR_STR_OP      reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .)
    AND_STR_OP      reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .)
    NOT_STR_OP      reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .)
    COMMA           reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .)
    ASSOCIATE_OP    reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .)
    ASSIGNMENT_OP   reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .)
    RANGE_OP        reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .)
    OR_OP           reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .)
    AND_OP          reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .)
    BIT_OR          reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .)
    BIT_XOR         reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .)
    BIT_AND         reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .)
    EQUALS_OP       reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .)
    NOT_EQUALS_OP   reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .)
    COMPARE_OP      reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .)
    GREATER_OP      reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .)
    LESS_OP         reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .)
    GREATER_EQUAL_OP reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .)
    LESS_EQUAL_OP   reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .)
    SEMICOLON       reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! REP_OP          [ reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 105 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]


state 192

    (87) expression -> expression XOR_STR_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 87 (expression -> expression XOR_STR_OP expression .)
    XOR_STR_OP      reduce using rule 87 (expression -> expression XOR_STR_OP expression .)
    SEMICOLON       reduce using rule 87 (expression -> expression XOR_STR_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 87 (expression -> expression XOR_STR_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    AND_STR_OP      shift and go to state 122
    NOT_STR_OP      shift and go to state 116
    COMMA           shift and go to state 125
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! AND_STR_OP      [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! NOT_STR_OP      [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! COMMA           [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! ASSOCIATE_OP    [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! RANGE_OP        [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! OR_OP           [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! AND_OP          [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! BIT_OR          [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! BIT_AND         [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! LESS_OP         [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! REP_OP          [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 87 (expression -> expression XOR_STR_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]


state 193

    (99) expression -> expression BIT_AND expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 99 (expression -> expression BIT_AND expression .)
    XOR_STR_OP      reduce using rule 99 (expression -> expression BIT_AND expression .)
    AND_STR_OP      reduce using rule 99 (expression -> expression BIT_AND expression .)
    NOT_STR_OP      reduce using rule 99 (expression -> expression BIT_AND expression .)
    COMMA           reduce using rule 99 (expression -> expression BIT_AND expression .)
    ASSOCIATE_OP    reduce using rule 99 (expression -> expression BIT_AND expression .)
    ADV_ASSIGNMENT_OP reduce using rule 99 (expression -> expression BIT_AND expression .)
    ASSIGNMENT_OP   reduce using rule 99 (expression -> expression BIT_AND expression .)
    RANGE_OP        reduce using rule 99 (expression -> expression BIT_AND expression .)
    OR_OP           reduce using rule 99 (expression -> expression BIT_AND expression .)
    AND_OP          reduce using rule 99 (expression -> expression BIT_AND expression .)
    BIT_OR          reduce using rule 99 (expression -> expression BIT_AND expression .)
    BIT_XOR         reduce using rule 99 (expression -> expression BIT_AND expression .)
    BIT_AND         reduce using rule 99 (expression -> expression BIT_AND expression .)
    SEMICOLON       reduce using rule 99 (expression -> expression BIT_AND expression .)
    CLOSE_PARANTHESIS reduce using rule 99 (expression -> expression BIT_AND expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 99 (expression -> expression BIT_AND expression .) ]
  ! DECREMENT_OP    [ reduce using rule 99 (expression -> expression BIT_AND expression .) ]
  ! EQUALS_OP       [ reduce using rule 99 (expression -> expression BIT_AND expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 99 (expression -> expression BIT_AND expression .) ]
  ! COMPARE_OP      [ reduce using rule 99 (expression -> expression BIT_AND expression .) ]
  ! GREATER_OP      [ reduce using rule 99 (expression -> expression BIT_AND expression .) ]
  ! LESS_OP         [ reduce using rule 99 (expression -> expression BIT_AND expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 99 (expression -> expression BIT_AND expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 99 (expression -> expression BIT_AND expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 99 (expression -> expression BIT_AND expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 99 (expression -> expression BIT_AND expression .) ]
  ! PLUS_OP         [ reduce using rule 99 (expression -> expression BIT_AND expression .) ]
  ! MINUS_OP        [ reduce using rule 99 (expression -> expression BIT_AND expression .) ]
  ! CONCATENATE     [ reduce using rule 99 (expression -> expression BIT_AND expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 99 (expression -> expression BIT_AND expression .) ]
  ! DIVISION_OP     [ reduce using rule 99 (expression -> expression BIT_AND expression .) ]
  ! MODULUS_OP      [ reduce using rule 99 (expression -> expression BIT_AND expression .) ]
  ! REP_OP          [ reduce using rule 99 (expression -> expression BIT_AND expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 99 (expression -> expression BIT_AND expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 99 (expression -> expression BIT_AND expression .) ]
  ! EXPONENT_OP     [ reduce using rule 99 (expression -> expression BIT_AND expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]


state 194

    (112) expression -> expression MULTIPLICATION_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    XOR_STR_OP      reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    AND_STR_OP      reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    NOT_STR_OP      reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    COMMA           reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    ASSOCIATE_OP    reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    ASSIGNMENT_OP   reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    RANGE_OP        reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    OR_OP           reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    AND_OP          reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    BIT_OR          reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    BIT_XOR         reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    BIT_AND         reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    EQUALS_OP       reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    NOT_EQUALS_OP   reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    COMPARE_OP      reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    GREATER_OP      reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    LESS_OP         reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    GREATER_EQUAL_OP reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    LESS_EQUAL_OP   reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    PLUS_OP         reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    MINUS_OP        reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    CONCATENATE     reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    MULTIPLICATION_OP reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    DIVISION_OP     reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    MODULUS_OP      reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    REP_OP          reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    SEMICOLON       reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 112 (expression -> expression MULTIPLICATION_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]
  ! MULTIPLICATION_OP [ shift and go to state 131 ]
  ! DIVISION_OP     [ shift and go to state 117 ]
  ! MODULUS_OP      [ shift and go to state 126 ]
  ! REP_OP          [ shift and go to state 137 ]


state 195

    (91) expression -> expression ASSOCIATE_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .)
    XOR_STR_OP      reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .)
    AND_STR_OP      reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .)
    NOT_STR_OP      reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .)
    COMMA           reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .)
    ASSOCIATE_OP    reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .)
    SEMICOLON       reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! RANGE_OP        [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! OR_OP           [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! AND_OP          [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! BIT_OR          [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! BIT_AND         [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! LESS_OP         [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! REP_OP          [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 91 (expression -> expression ASSOCIATE_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]


state 196

    (86) expression -> expression OR_STR_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 86 (expression -> expression OR_STR_OP expression .)
    XOR_STR_OP      reduce using rule 86 (expression -> expression OR_STR_OP expression .)
    SEMICOLON       reduce using rule 86 (expression -> expression OR_STR_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 86 (expression -> expression OR_STR_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    AND_STR_OP      shift and go to state 122
    NOT_STR_OP      shift and go to state 116
    COMMA           shift and go to state 125
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! AND_STR_OP      [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! NOT_STR_OP      [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! COMMA           [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! ASSOCIATE_OP    [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! RANGE_OP        [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! OR_OP           [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! AND_OP          [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! BIT_OR          [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! BIT_AND         [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! LESS_OP         [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! REP_OP          [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 86 (expression -> expression OR_STR_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]


state 197

    (96) expression -> expression AND_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 96 (expression -> expression AND_OP expression .)
    XOR_STR_OP      reduce using rule 96 (expression -> expression AND_OP expression .)
    AND_STR_OP      reduce using rule 96 (expression -> expression AND_OP expression .)
    NOT_STR_OP      reduce using rule 96 (expression -> expression AND_OP expression .)
    COMMA           reduce using rule 96 (expression -> expression AND_OP expression .)
    ASSOCIATE_OP    reduce using rule 96 (expression -> expression AND_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 96 (expression -> expression AND_OP expression .)
    ASSIGNMENT_OP   reduce using rule 96 (expression -> expression AND_OP expression .)
    RANGE_OP        reduce using rule 96 (expression -> expression AND_OP expression .)
    OR_OP           reduce using rule 96 (expression -> expression AND_OP expression .)
    AND_OP          reduce using rule 96 (expression -> expression AND_OP expression .)
    SEMICOLON       reduce using rule 96 (expression -> expression AND_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 96 (expression -> expression AND_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 96 (expression -> expression AND_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 96 (expression -> expression AND_OP expression .) ]
  ! BIT_OR          [ reduce using rule 96 (expression -> expression AND_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 96 (expression -> expression AND_OP expression .) ]
  ! BIT_AND         [ reduce using rule 96 (expression -> expression AND_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 96 (expression -> expression AND_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 96 (expression -> expression AND_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 96 (expression -> expression AND_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 96 (expression -> expression AND_OP expression .) ]
  ! LESS_OP         [ reduce using rule 96 (expression -> expression AND_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 96 (expression -> expression AND_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 96 (expression -> expression AND_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 96 (expression -> expression AND_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 96 (expression -> expression AND_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 96 (expression -> expression AND_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 96 (expression -> expression AND_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 96 (expression -> expression AND_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 96 (expression -> expression AND_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 96 (expression -> expression AND_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 96 (expression -> expression AND_OP expression .) ]
  ! REP_OP          [ reduce using rule 96 (expression -> expression AND_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 96 (expression -> expression AND_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 96 (expression -> expression AND_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 96 (expression -> expression AND_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]


state 198

    (108) expression -> expression BIT_LEFT_SHIFT expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .)
    XOR_STR_OP      reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .)
    AND_STR_OP      reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .)
    NOT_STR_OP      reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .)
    COMMA           reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .)
    ASSOCIATE_OP    reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .)
    ADV_ASSIGNMENT_OP reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .)
    ASSIGNMENT_OP   reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .)
    RANGE_OP        reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .)
    OR_OP           reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .)
    AND_OP          reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .)
    BIT_OR          reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .)
    BIT_XOR         reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .)
    BIT_AND         reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .)
    EQUALS_OP       reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .)
    NOT_EQUALS_OP   reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .)
    COMPARE_OP      reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .)
    GREATER_OP      reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .)
    LESS_OP         reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .)
    GREATER_EQUAL_OP reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .)
    LESS_EQUAL_OP   reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .)
    BIT_RIGHT_SHIFT reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .)
    BIT_LEFT_SHIFT  reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .)
    SEMICOLON       reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .)
    CLOSE_PARANTHESIS reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! DECREMENT_OP    [ reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! PLUS_OP         [ reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! MINUS_OP        [ reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! CONCATENATE     [ reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! DIVISION_OP     [ reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! MODULUS_OP      [ reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! REP_OP          [ reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! EXPONENT_OP     [ reduce using rule 108 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]


state 199

    (115) expression -> expression REP_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 115 (expression -> expression REP_OP expression .)
    XOR_STR_OP      reduce using rule 115 (expression -> expression REP_OP expression .)
    AND_STR_OP      reduce using rule 115 (expression -> expression REP_OP expression .)
    NOT_STR_OP      reduce using rule 115 (expression -> expression REP_OP expression .)
    COMMA           reduce using rule 115 (expression -> expression REP_OP expression .)
    ASSOCIATE_OP    reduce using rule 115 (expression -> expression REP_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 115 (expression -> expression REP_OP expression .)
    ASSIGNMENT_OP   reduce using rule 115 (expression -> expression REP_OP expression .)
    RANGE_OP        reduce using rule 115 (expression -> expression REP_OP expression .)
    OR_OP           reduce using rule 115 (expression -> expression REP_OP expression .)
    AND_OP          reduce using rule 115 (expression -> expression REP_OP expression .)
    BIT_OR          reduce using rule 115 (expression -> expression REP_OP expression .)
    BIT_XOR         reduce using rule 115 (expression -> expression REP_OP expression .)
    BIT_AND         reduce using rule 115 (expression -> expression REP_OP expression .)
    EQUALS_OP       reduce using rule 115 (expression -> expression REP_OP expression .)
    NOT_EQUALS_OP   reduce using rule 115 (expression -> expression REP_OP expression .)
    COMPARE_OP      reduce using rule 115 (expression -> expression REP_OP expression .)
    GREATER_OP      reduce using rule 115 (expression -> expression REP_OP expression .)
    LESS_OP         reduce using rule 115 (expression -> expression REP_OP expression .)
    GREATER_EQUAL_OP reduce using rule 115 (expression -> expression REP_OP expression .)
    LESS_EQUAL_OP   reduce using rule 115 (expression -> expression REP_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 115 (expression -> expression REP_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 115 (expression -> expression REP_OP expression .)
    PLUS_OP         reduce using rule 115 (expression -> expression REP_OP expression .)
    MINUS_OP        reduce using rule 115 (expression -> expression REP_OP expression .)
    CONCATENATE     reduce using rule 115 (expression -> expression REP_OP expression .)
    MULTIPLICATION_OP reduce using rule 115 (expression -> expression REP_OP expression .)
    DIVISION_OP     reduce using rule 115 (expression -> expression REP_OP expression .)
    MODULUS_OP      reduce using rule 115 (expression -> expression REP_OP expression .)
    REP_OP          reduce using rule 115 (expression -> expression REP_OP expression .)
    SEMICOLON       reduce using rule 115 (expression -> expression REP_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 115 (expression -> expression REP_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 115 (expression -> expression REP_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 115 (expression -> expression REP_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 115 (expression -> expression REP_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 115 (expression -> expression REP_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 115 (expression -> expression REP_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]
  ! MULTIPLICATION_OP [ shift and go to state 131 ]
  ! DIVISION_OP     [ shift and go to state 117 ]
  ! MODULUS_OP      [ shift and go to state 126 ]
  ! REP_OP          [ shift and go to state 137 ]


state 200

    (111) expression -> expression CONCATENATE expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 111 (expression -> expression CONCATENATE expression .)
    XOR_STR_OP      reduce using rule 111 (expression -> expression CONCATENATE expression .)
    AND_STR_OP      reduce using rule 111 (expression -> expression CONCATENATE expression .)
    NOT_STR_OP      reduce using rule 111 (expression -> expression CONCATENATE expression .)
    COMMA           reduce using rule 111 (expression -> expression CONCATENATE expression .)
    ASSOCIATE_OP    reduce using rule 111 (expression -> expression CONCATENATE expression .)
    ADV_ASSIGNMENT_OP reduce using rule 111 (expression -> expression CONCATENATE expression .)
    ASSIGNMENT_OP   reduce using rule 111 (expression -> expression CONCATENATE expression .)
    RANGE_OP        reduce using rule 111 (expression -> expression CONCATENATE expression .)
    OR_OP           reduce using rule 111 (expression -> expression CONCATENATE expression .)
    AND_OP          reduce using rule 111 (expression -> expression CONCATENATE expression .)
    BIT_OR          reduce using rule 111 (expression -> expression CONCATENATE expression .)
    BIT_XOR         reduce using rule 111 (expression -> expression CONCATENATE expression .)
    BIT_AND         reduce using rule 111 (expression -> expression CONCATENATE expression .)
    EQUALS_OP       reduce using rule 111 (expression -> expression CONCATENATE expression .)
    NOT_EQUALS_OP   reduce using rule 111 (expression -> expression CONCATENATE expression .)
    COMPARE_OP      reduce using rule 111 (expression -> expression CONCATENATE expression .)
    GREATER_OP      reduce using rule 111 (expression -> expression CONCATENATE expression .)
    LESS_OP         reduce using rule 111 (expression -> expression CONCATENATE expression .)
    GREATER_EQUAL_OP reduce using rule 111 (expression -> expression CONCATENATE expression .)
    LESS_EQUAL_OP   reduce using rule 111 (expression -> expression CONCATENATE expression .)
    BIT_RIGHT_SHIFT reduce using rule 111 (expression -> expression CONCATENATE expression .)
    BIT_LEFT_SHIFT  reduce using rule 111 (expression -> expression CONCATENATE expression .)
    PLUS_OP         reduce using rule 111 (expression -> expression CONCATENATE expression .)
    MINUS_OP        reduce using rule 111 (expression -> expression CONCATENATE expression .)
    CONCATENATE     reduce using rule 111 (expression -> expression CONCATENATE expression .)
    SEMICOLON       reduce using rule 111 (expression -> expression CONCATENATE expression .)
    CLOSE_PARANTHESIS reduce using rule 111 (expression -> expression CONCATENATE expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 111 (expression -> expression CONCATENATE expression .) ]
  ! DECREMENT_OP    [ reduce using rule 111 (expression -> expression CONCATENATE expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 111 (expression -> expression CONCATENATE expression .) ]
  ! DIVISION_OP     [ reduce using rule 111 (expression -> expression CONCATENATE expression .) ]
  ! MODULUS_OP      [ reduce using rule 111 (expression -> expression CONCATENATE expression .) ]
  ! REP_OP          [ reduce using rule 111 (expression -> expression CONCATENATE expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 111 (expression -> expression CONCATENATE expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 111 (expression -> expression CONCATENATE expression .) ]
  ! EXPONENT_OP     [ reduce using rule 111 (expression -> expression CONCATENATE expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]


state 201

    (107) expression -> expression BIT_RIGHT_SHIFT expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .)
    XOR_STR_OP      reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .)
    AND_STR_OP      reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .)
    NOT_STR_OP      reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .)
    COMMA           reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .)
    ASSOCIATE_OP    reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .)
    ADV_ASSIGNMENT_OP reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .)
    ASSIGNMENT_OP   reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .)
    RANGE_OP        reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .)
    OR_OP           reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .)
    AND_OP          reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .)
    BIT_OR          reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .)
    BIT_XOR         reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .)
    BIT_AND         reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .)
    EQUALS_OP       reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .)
    NOT_EQUALS_OP   reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .)
    COMPARE_OP      reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .)
    GREATER_OP      reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .)
    LESS_OP         reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .)
    GREATER_EQUAL_OP reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .)
    LESS_EQUAL_OP   reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .)
    BIT_RIGHT_SHIFT reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .)
    BIT_LEFT_SHIFT  reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .)
    SEMICOLON       reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .)
    CLOSE_PARANTHESIS reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! DECREMENT_OP    [ reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! PLUS_OP         [ reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! MINUS_OP        [ reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! CONCATENATE     [ reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! DIVISION_OP     [ reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! MODULUS_OP      [ reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! REP_OP          [ reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! EXPONENT_OP     [ reduce using rule 107 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]


state 202

    (92) expression -> expression ADV_ASSIGNMENT_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    XOR_STR_OP      reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    AND_STR_OP      reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    NOT_STR_OP      reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    COMMA           reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    ASSOCIATE_OP    reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    SEMICOLON       reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! RANGE_OP        [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! OR_OP           [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! AND_OP          [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! BIT_OR          [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! BIT_AND         [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! LESS_OP         [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! REP_OP          [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 92 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]


state 203

    (97) expression -> expression BIT_OR expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 97 (expression -> expression BIT_OR expression .)
    XOR_STR_OP      reduce using rule 97 (expression -> expression BIT_OR expression .)
    AND_STR_OP      reduce using rule 97 (expression -> expression BIT_OR expression .)
    NOT_STR_OP      reduce using rule 97 (expression -> expression BIT_OR expression .)
    COMMA           reduce using rule 97 (expression -> expression BIT_OR expression .)
    ASSOCIATE_OP    reduce using rule 97 (expression -> expression BIT_OR expression .)
    ADV_ASSIGNMENT_OP reduce using rule 97 (expression -> expression BIT_OR expression .)
    ASSIGNMENT_OP   reduce using rule 97 (expression -> expression BIT_OR expression .)
    RANGE_OP        reduce using rule 97 (expression -> expression BIT_OR expression .)
    OR_OP           reduce using rule 97 (expression -> expression BIT_OR expression .)
    AND_OP          reduce using rule 97 (expression -> expression BIT_OR expression .)
    BIT_OR          reduce using rule 97 (expression -> expression BIT_OR expression .)
    BIT_XOR         reduce using rule 97 (expression -> expression BIT_OR expression .)
    SEMICOLON       reduce using rule 97 (expression -> expression BIT_OR expression .)
    CLOSE_PARANTHESIS reduce using rule 97 (expression -> expression BIT_OR expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 97 (expression -> expression BIT_OR expression .) ]
  ! DECREMENT_OP    [ reduce using rule 97 (expression -> expression BIT_OR expression .) ]
  ! BIT_AND         [ reduce using rule 97 (expression -> expression BIT_OR expression .) ]
  ! EQUALS_OP       [ reduce using rule 97 (expression -> expression BIT_OR expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 97 (expression -> expression BIT_OR expression .) ]
  ! COMPARE_OP      [ reduce using rule 97 (expression -> expression BIT_OR expression .) ]
  ! GREATER_OP      [ reduce using rule 97 (expression -> expression BIT_OR expression .) ]
  ! LESS_OP         [ reduce using rule 97 (expression -> expression BIT_OR expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 97 (expression -> expression BIT_OR expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 97 (expression -> expression BIT_OR expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 97 (expression -> expression BIT_OR expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 97 (expression -> expression BIT_OR expression .) ]
  ! PLUS_OP         [ reduce using rule 97 (expression -> expression BIT_OR expression .) ]
  ! MINUS_OP        [ reduce using rule 97 (expression -> expression BIT_OR expression .) ]
  ! CONCATENATE     [ reduce using rule 97 (expression -> expression BIT_OR expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 97 (expression -> expression BIT_OR expression .) ]
  ! DIVISION_OP     [ reduce using rule 97 (expression -> expression BIT_OR expression .) ]
  ! MODULUS_OP      [ reduce using rule 97 (expression -> expression BIT_OR expression .) ]
  ! REP_OP          [ reduce using rule 97 (expression -> expression BIT_OR expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 97 (expression -> expression BIT_OR expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 97 (expression -> expression BIT_OR expression .) ]
  ! EXPONENT_OP     [ reduce using rule 97 (expression -> expression BIT_OR expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]


state 204

    (109) expression -> expression PLUS_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 109 (expression -> expression PLUS_OP expression .)
    XOR_STR_OP      reduce using rule 109 (expression -> expression PLUS_OP expression .)
    AND_STR_OP      reduce using rule 109 (expression -> expression PLUS_OP expression .)
    NOT_STR_OP      reduce using rule 109 (expression -> expression PLUS_OP expression .)
    COMMA           reduce using rule 109 (expression -> expression PLUS_OP expression .)
    ASSOCIATE_OP    reduce using rule 109 (expression -> expression PLUS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 109 (expression -> expression PLUS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 109 (expression -> expression PLUS_OP expression .)
    RANGE_OP        reduce using rule 109 (expression -> expression PLUS_OP expression .)
    OR_OP           reduce using rule 109 (expression -> expression PLUS_OP expression .)
    AND_OP          reduce using rule 109 (expression -> expression PLUS_OP expression .)
    BIT_OR          reduce using rule 109 (expression -> expression PLUS_OP expression .)
    BIT_XOR         reduce using rule 109 (expression -> expression PLUS_OP expression .)
    BIT_AND         reduce using rule 109 (expression -> expression PLUS_OP expression .)
    EQUALS_OP       reduce using rule 109 (expression -> expression PLUS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 109 (expression -> expression PLUS_OP expression .)
    COMPARE_OP      reduce using rule 109 (expression -> expression PLUS_OP expression .)
    GREATER_OP      reduce using rule 109 (expression -> expression PLUS_OP expression .)
    LESS_OP         reduce using rule 109 (expression -> expression PLUS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 109 (expression -> expression PLUS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 109 (expression -> expression PLUS_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 109 (expression -> expression PLUS_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 109 (expression -> expression PLUS_OP expression .)
    PLUS_OP         reduce using rule 109 (expression -> expression PLUS_OP expression .)
    MINUS_OP        reduce using rule 109 (expression -> expression PLUS_OP expression .)
    CONCATENATE     reduce using rule 109 (expression -> expression PLUS_OP expression .)
    SEMICOLON       reduce using rule 109 (expression -> expression PLUS_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 109 (expression -> expression PLUS_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 109 (expression -> expression PLUS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 109 (expression -> expression PLUS_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 109 (expression -> expression PLUS_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 109 (expression -> expression PLUS_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 109 (expression -> expression PLUS_OP expression .) ]
  ! REP_OP          [ reduce using rule 109 (expression -> expression PLUS_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 109 (expression -> expression PLUS_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 109 (expression -> expression PLUS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 109 (expression -> expression PLUS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]


state 205

    (117) expression -> expression SEARCH_MODIFY_NEG expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    XOR_STR_OP      reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    AND_STR_OP      reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    NOT_STR_OP      reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    COMMA           reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    ASSOCIATE_OP    reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    ADV_ASSIGNMENT_OP reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    ASSIGNMENT_OP   reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    RANGE_OP        reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    OR_OP           reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    AND_OP          reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    BIT_OR          reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    BIT_XOR         reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    BIT_AND         reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    EQUALS_OP       reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    NOT_EQUALS_OP   reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    COMPARE_OP      reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    GREATER_OP      reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    LESS_OP         reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    GREATER_EQUAL_OP reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    LESS_EQUAL_OP   reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    BIT_RIGHT_SHIFT reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    BIT_LEFT_SHIFT  reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    PLUS_OP         reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    MINUS_OP        reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    CONCATENATE     reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    MULTIPLICATION_OP reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    DIVISION_OP     reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    MODULUS_OP      reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    REP_OP          reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    SEARCH_MODIFY   reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    SEARCH_MODIFY_NEG reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    SEMICOLON       reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    CLOSE_PARANTHESIS reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .) ]
  ! DECREMENT_OP    [ reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .) ]
  ! EXPONENT_OP     [ reduce using rule 117 (expression -> expression SEARCH_MODIFY_NEG expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 140 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 136 ]
  ! PLUS_OP         [ shift and go to state 143 ]
  ! MINUS_OP        [ shift and go to state 120 ]
  ! CONCATENATE     [ shift and go to state 138 ]
  ! MULTIPLICATION_OP [ shift and go to state 131 ]
  ! DIVISION_OP     [ shift and go to state 117 ]
  ! MODULUS_OP      [ shift and go to state 126 ]
  ! REP_OP          [ shift and go to state 137 ]
  ! SEARCH_MODIFY   [ shift and go to state 110 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 144 ]


state 206

    (103) expression -> expression GREATER_OP expression .
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    OR_STR_OP       reduce using rule 103 (expression -> expression GREATER_OP expression .)
    XOR_STR_OP      reduce using rule 103 (expression -> expression GREATER_OP expression .)
    AND_STR_OP      reduce using rule 103 (expression -> expression GREATER_OP expression .)
    NOT_STR_OP      reduce using rule 103 (expression -> expression GREATER_OP expression .)
    COMMA           reduce using rule 103 (expression -> expression GREATER_OP expression .)
    ASSOCIATE_OP    reduce using rule 103 (expression -> expression GREATER_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 103 (expression -> expression GREATER_OP expression .)
    ASSIGNMENT_OP   reduce using rule 103 (expression -> expression GREATER_OP expression .)
    RANGE_OP        reduce using rule 103 (expression -> expression GREATER_OP expression .)
    OR_OP           reduce using rule 103 (expression -> expression GREATER_OP expression .)
    AND_OP          reduce using rule 103 (expression -> expression GREATER_OP expression .)
    BIT_OR          reduce using rule 103 (expression -> expression GREATER_OP expression .)
    BIT_XOR         reduce using rule 103 (expression -> expression GREATER_OP expression .)
    BIT_AND         reduce using rule 103 (expression -> expression GREATER_OP expression .)
    EQUALS_OP       reduce using rule 103 (expression -> expression GREATER_OP expression .)
    NOT_EQUALS_OP   reduce using rule 103 (expression -> expression GREATER_OP expression .)
    COMPARE_OP      reduce using rule 103 (expression -> expression GREATER_OP expression .)
    GREATER_OP      reduce using rule 103 (expression -> expression GREATER_OP expression .)
    LESS_OP         reduce using rule 103 (expression -> expression GREATER_OP expression .)
    GREATER_EQUAL_OP reduce using rule 103 (expression -> expression GREATER_OP expression .)
    LESS_EQUAL_OP   reduce using rule 103 (expression -> expression GREATER_OP expression .)
    SEMICOLON       reduce using rule 103 (expression -> expression GREATER_OP expression .)
    CLOSE_PARANTHESIS reduce using rule 103 (expression -> expression GREATER_OP expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115

  ! INCREMENT_OP    [ reduce using rule 103 (expression -> expression GREATER_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 103 (expression -> expression GREATER_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 103 (expression -> expression GREATER_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 103 (expression -> expression GREATER_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 103 (expression -> expression GREATER_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 103 (expression -> expression GREATER_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 103 (expression -> expression GREATER_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 103 (expression -> expression GREATER_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 103 (expression -> expression GREATER_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 103 (expression -> expression GREATER_OP expression .) ]
  ! REP_OP          [ reduce using rule 103 (expression -> expression GREATER_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 103 (expression -> expression GREATER_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 103 (expression -> expression GREATER_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 103 (expression -> expression GREATER_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! COMMA           [ shift and go to state 125 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 141 ]
  ! ASSIGNMENT_OP   [ shift and go to state 127 ]
  ! RANGE_OP        [ shift and go to state 118 ]
  ! OR_OP           [ shift and go to state 123 ]
  ! AND_OP          [ shift and go to state 135 ]
  ! BIT_OR          [ shift and go to state 142 ]
  ! BIT_XOR         [ shift and go to state 119 ]
  ! BIT_AND         [ shift and go to state 130 ]
  ! EQUALS_OP       [ shift and go to state 112 ]
  ! NOT_EQUALS_OP   [ shift and go to state 114 ]
  ! COMPARE_OP      [ shift and go to state 113 ]
  ! GREATER_OP      [ shift and go to state 145 ]
  ! LESS_OP         [ shift and go to state 124 ]
  ! GREATER_EQUAL_OP [ shift and go to state 128 ]
  ! LESS_EQUAL_OP   [ shift and go to state 111 ]


state 207

    (24) switchStatement -> SWITCH empty lefthandside empty . BLOCK_BEGIN caselist BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 225


state 208

    (43) lefthandside -> PRIVATE OPEN_PARANTHESIS type decList . CLOSE_PARANTHESIS

    CLOSE_PARANTHESIS shift and go to state 226


state 209

    (42) lefthandside -> PRIVATE empty type decList .

    BLOCK_BEGIN     reduce using rule 42 (lefthandside -> PRIVATE empty type decList .)
    ADV_ASSIGNMENT_OP reduce using rule 42 (lefthandside -> PRIVATE empty type decList .)
    ASSIGNMENT_OP   reduce using rule 42 (lefthandside -> PRIVATE empty type decList .)
    COMMA           reduce using rule 42 (lefthandside -> PRIVATE empty type decList .)
    CLOSE_PARANTHESIS reduce using rule 42 (lefthandside -> PRIVATE empty type decList .)
    SEMICOLON       reduce using rule 42 (lefthandside -> PRIVATE empty type decList .)


state 210

    (52) functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 227


state 211

    (53) parameters -> expression COMMA . parameters
    (90) expression -> expression COMMA . expression
    (53) parameters -> . expression COMMA parameters
    (54) parameters -> . expression empty empty
    (55) parameters -> . empty
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    parameters                     shift and go to state 228
    expression                     shift and go to state 229
    empty                          shift and go to state 150

state 212

    (54) parameters -> expression empty . empty
    (8) empty -> .

    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)

    empty                          shift and go to state 230

state 213

    (57) forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON . expression SEMICOLON expression CLOSE_PARANTHESIS block
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    SEMICOLON       reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 231
    empty                          shift and go to state 55

state 214

    (39) assignment -> lefthandside assignmenttype expression SEMICOLON .

    RETURN          reduce using rule 39 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    IDENTIFIER      reduce using rule 39 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    WHILE           reduce using rule 39 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    FOR             reduce using rule 39 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    PRINT           reduce using rule 39 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    SUB             reduce using rule 39 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    LAST            reduce using rule 39 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    NEXT            reduce using rule 39 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    IF              reduce using rule 39 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    USE             reduce using rule 39 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    SWITCH          reduce using rule 39 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    PRIVATE         reduce using rule 39 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    LOCAL           reduce using rule 39 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 39 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    ARRAY           reduce using rule 39 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    HASH            reduce using rule 39 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    VARIABLE        reduce using rule 39 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    BLOCK_ENDS      reduce using rule 39 (assignment -> lefthandside assignmenttype expression SEMICOLON .)
    $end            reduce using rule 39 (assignment -> lefthandside assignmenttype expression SEMICOLON .)


state 215

    (49) declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .

    RETURN          reduce using rule 49 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    IDENTIFIER      reduce using rule 49 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    WHILE           reduce using rule 49 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    FOR             reduce using rule 49 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    PRINT           reduce using rule 49 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    SUB             reduce using rule 49 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    LAST            reduce using rule 49 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    NEXT            reduce using rule 49 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    IF              reduce using rule 49 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    USE             reduce using rule 49 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    SWITCH          reduce using rule 49 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    PRIVATE         reduce using rule 49 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    LOCAL           reduce using rule 49 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 49 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    ARRAY           reduce using rule 49 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    HASH            reduce using rule 49 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    VARIABLE        reduce using rule 49 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    BLOCK_ENDS      reduce using rule 49 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    $end            reduce using rule 49 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)


state 216

    (48) declaration -> lefthandside decList empty SEMICOLON .

    RETURN          reduce using rule 48 (declaration -> lefthandside decList empty SEMICOLON .)
    IDENTIFIER      reduce using rule 48 (declaration -> lefthandside decList empty SEMICOLON .)
    WHILE           reduce using rule 48 (declaration -> lefthandside decList empty SEMICOLON .)
    FOR             reduce using rule 48 (declaration -> lefthandside decList empty SEMICOLON .)
    PRINT           reduce using rule 48 (declaration -> lefthandside decList empty SEMICOLON .)
    SUB             reduce using rule 48 (declaration -> lefthandside decList empty SEMICOLON .)
    LAST            reduce using rule 48 (declaration -> lefthandside decList empty SEMICOLON .)
    NEXT            reduce using rule 48 (declaration -> lefthandside decList empty SEMICOLON .)
    IF              reduce using rule 48 (declaration -> lefthandside decList empty SEMICOLON .)
    USE             reduce using rule 48 (declaration -> lefthandside decList empty SEMICOLON .)
    SWITCH          reduce using rule 48 (declaration -> lefthandside decList empty SEMICOLON .)
    PRIVATE         reduce using rule 48 (declaration -> lefthandside decList empty SEMICOLON .)
    LOCAL           reduce using rule 48 (declaration -> lefthandside decList empty SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 48 (declaration -> lefthandside decList empty SEMICOLON .)
    ARRAY           reduce using rule 48 (declaration -> lefthandside decList empty SEMICOLON .)
    HASH            reduce using rule 48 (declaration -> lefthandside decList empty SEMICOLON .)
    VARIABLE        reduce using rule 48 (declaration -> lefthandside decList empty SEMICOLON .)
    BLOCK_ENDS      reduce using rule 48 (declaration -> lefthandside decList empty SEMICOLON .)
    $end            reduce using rule 48 (declaration -> lefthandside decList empty SEMICOLON .)


state 217

    (50) decList -> COMMA type decList .

    CLOSE_PARANTHESIS reduce using rule 50 (decList -> COMMA type decList .)
    SEMICOLON       reduce using rule 50 (decList -> COMMA type decList .)
    ADV_ASSIGNMENT_OP reduce using rule 50 (decList -> COMMA type decList .)
    ASSIGNMENT_OP   reduce using rule 50 (decList -> COMMA type decList .)
    COMMA           reduce using rule 50 (decList -> COMMA type decList .)
    BLOCK_BEGIN     reduce using rule 50 (decList -> COMMA type decList .)


state 218

    (45) lefthandside -> LOCAL OPEN_PARANTHESIS type decList . CLOSE_PARANTHESIS

    CLOSE_PARANTHESIS shift and go to state 232


state 219

    (44) lefthandside -> LOCAL empty type decList .

    BLOCK_BEGIN     reduce using rule 44 (lefthandside -> LOCAL empty type decList .)
    ADV_ASSIGNMENT_OP reduce using rule 44 (lefthandside -> LOCAL empty type decList .)
    ASSIGNMENT_OP   reduce using rule 44 (lefthandside -> LOCAL empty type decList .)
    COMMA           reduce using rule 44 (lefthandside -> LOCAL empty type decList .)
    CLOSE_PARANTHESIS reduce using rule 44 (lefthandside -> LOCAL empty type decList .)
    SEMICOLON       reduce using rule 44 (lefthandside -> LOCAL empty type decList .)


state 220

    (28) ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS . block
    (29) ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS . block ELSE block
    (4) block -> . BLOCK_BEGIN statements BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 8

    block                          shift and go to state 233

state 221

    (56) whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .

    RETURN          reduce using rule 56 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    IDENTIFIER      reduce using rule 56 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    WHILE           reduce using rule 56 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    FOR             reduce using rule 56 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    PRINT           reduce using rule 56 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    SUB             reduce using rule 56 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    LAST            reduce using rule 56 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    NEXT            reduce using rule 56 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    IF              reduce using rule 56 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    USE             reduce using rule 56 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    SWITCH          reduce using rule 56 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    PRIVATE         reduce using rule 56 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    LOCAL           reduce using rule 56 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    OPEN_PARANTHESIS reduce using rule 56 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    ARRAY           reduce using rule 56 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    HASH            reduce using rule 56 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    VARIABLE        reduce using rule 56 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    $end            reduce using rule 56 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    BLOCK_ENDS      reduce using rule 56 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)


state 222

    (33) printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .

    RETURN          reduce using rule 33 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    IDENTIFIER      reduce using rule 33 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    WHILE           reduce using rule 33 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    FOR             reduce using rule 33 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    PRINT           reduce using rule 33 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    SUB             reduce using rule 33 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    LAST            reduce using rule 33 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    NEXT            reduce using rule 33 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    IF              reduce using rule 33 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    USE             reduce using rule 33 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    SWITCH          reduce using rule 33 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    PRIVATE         reduce using rule 33 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    LOCAL           reduce using rule 33 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 33 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    ARRAY           reduce using rule 33 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    HASH            reduce using rule 33 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    VARIABLE        reduce using rule 33 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    $end            reduce using rule 33 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    BLOCK_ENDS      reduce using rule 33 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)


state 223

    (34) printStatement -> PRINT empty string1 empty SEMICOLON .

    RETURN          reduce using rule 34 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    IDENTIFIER      reduce using rule 34 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    WHILE           reduce using rule 34 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    FOR             reduce using rule 34 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    PRINT           reduce using rule 34 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    SUB             reduce using rule 34 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    LAST            reduce using rule 34 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    NEXT            reduce using rule 34 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    IF              reduce using rule 34 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    USE             reduce using rule 34 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    SWITCH          reduce using rule 34 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    PRIVATE         reduce using rule 34 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    LOCAL           reduce using rule 34 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 34 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    ARRAY           reduce using rule 34 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    HASH            reduce using rule 34 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    VARIABLE        reduce using rule 34 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    $end            reduce using rule 34 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    BLOCK_ENDS      reduce using rule 34 (printStatement -> PRINT empty string1 empty SEMICOLON .)


state 224

    (35) printStatement -> PRINT empty expression empty SEMICOLON .

    RETURN          reduce using rule 35 (printStatement -> PRINT empty expression empty SEMICOLON .)
    IDENTIFIER      reduce using rule 35 (printStatement -> PRINT empty expression empty SEMICOLON .)
    WHILE           reduce using rule 35 (printStatement -> PRINT empty expression empty SEMICOLON .)
    FOR             reduce using rule 35 (printStatement -> PRINT empty expression empty SEMICOLON .)
    PRINT           reduce using rule 35 (printStatement -> PRINT empty expression empty SEMICOLON .)
    SUB             reduce using rule 35 (printStatement -> PRINT empty expression empty SEMICOLON .)
    LAST            reduce using rule 35 (printStatement -> PRINT empty expression empty SEMICOLON .)
    NEXT            reduce using rule 35 (printStatement -> PRINT empty expression empty SEMICOLON .)
    IF              reduce using rule 35 (printStatement -> PRINT empty expression empty SEMICOLON .)
    USE             reduce using rule 35 (printStatement -> PRINT empty expression empty SEMICOLON .)
    SWITCH          reduce using rule 35 (printStatement -> PRINT empty expression empty SEMICOLON .)
    PRIVATE         reduce using rule 35 (printStatement -> PRINT empty expression empty SEMICOLON .)
    LOCAL           reduce using rule 35 (printStatement -> PRINT empty expression empty SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 35 (printStatement -> PRINT empty expression empty SEMICOLON .)
    ARRAY           reduce using rule 35 (printStatement -> PRINT empty expression empty SEMICOLON .)
    HASH            reduce using rule 35 (printStatement -> PRINT empty expression empty SEMICOLON .)
    VARIABLE        reduce using rule 35 (printStatement -> PRINT empty expression empty SEMICOLON .)
    $end            reduce using rule 35 (printStatement -> PRINT empty expression empty SEMICOLON .)
    BLOCK_ENDS      reduce using rule 35 (printStatement -> PRINT empty expression empty SEMICOLON .)


state 225

    (24) switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN . caselist BLOCK_ENDS
    (25) caselist -> . CASE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block caselist
    (26) caselist -> . ELSE empty empty empty block empty
    (27) caselist -> . empty
    (8) empty -> .

    CASE            shift and go to state 234
    ELSE            shift and go to state 236
    BLOCK_ENDS      reduce using rule 8 (empty -> .)

    caselist                       shift and go to state 235
    empty                          shift and go to state 237

state 226

    (43) lefthandside -> PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .

    BLOCK_BEGIN     reduce using rule 43 (lefthandside -> PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    ADV_ASSIGNMENT_OP reduce using rule 43 (lefthandside -> PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    ASSIGNMENT_OP   reduce using rule 43 (lefthandside -> PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    COMMA           reduce using rule 43 (lefthandside -> PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    CLOSE_PARANTHESIS reduce using rule 43 (lefthandside -> PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    SEMICOLON       reduce using rule 43 (lefthandside -> PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)


state 227

    (52) functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .

    RETURN          reduce using rule 52 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    IDENTIFIER      reduce using rule 52 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    WHILE           reduce using rule 52 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    FOR             reduce using rule 52 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    PRINT           reduce using rule 52 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    SUB             reduce using rule 52 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    LAST            reduce using rule 52 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    NEXT            reduce using rule 52 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    IF              reduce using rule 52 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    USE             reduce using rule 52 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    SWITCH          reduce using rule 52 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    PRIVATE         reduce using rule 52 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    LOCAL           reduce using rule 52 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    OPEN_PARANTHESIS reduce using rule 52 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    ARRAY           reduce using rule 52 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    HASH            reduce using rule 52 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    VARIABLE        reduce using rule 52 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    BLOCK_ENDS      reduce using rule 52 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)
    $end            reduce using rule 52 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON .)


state 228

    (53) parameters -> expression COMMA parameters .

    CLOSE_PARANTHESIS reduce using rule 53 (parameters -> expression COMMA parameters .)


state 229

    (90) expression -> expression COMMA expression .
    (53) parameters -> expression . COMMA parameters
    (54) parameters -> expression . empty empty
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression
    (8) empty -> .

  ! reduce/reduce conflict for CLOSE_PARANTHESIS resolved using rule 8 (empty -> .)
    COMMA           reduce using rule 90 (expression -> expression COMMA expression .)
    OR_STR_OP       reduce using rule 90 (expression -> expression COMMA expression .)
    XOR_STR_OP      reduce using rule 90 (expression -> expression COMMA expression .)
    AND_STR_OP      reduce using rule 90 (expression -> expression COMMA expression .)
    NOT_STR_OP      reduce using rule 90 (expression -> expression COMMA expression .)
    ASSOCIATE_OP    reduce using rule 90 (expression -> expression COMMA expression .)
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)

  ! INCREMENT_OP    [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! DECREMENT_OP    [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! RANGE_OP        [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! OR_OP           [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! AND_OP          [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! BIT_OR          [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! BIT_XOR         [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! BIT_AND         [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! EQUALS_OP       [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! COMPARE_OP      [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! GREATER_OP      [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! LESS_OP         [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! PLUS_OP         [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! MINUS_OP        [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! CONCATENATE     [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! DIVISION_OP     [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! MODULUS_OP      [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! REP_OP          [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! EXPONENT_OP     [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! CLOSE_PARANTHESIS [ reduce using rule 90 (expression -> expression COMMA expression .) ]
  ! COMMA           [ shift and go to state 211 ]
  ! OR_STR_OP       [ shift and go to state 134 ]
  ! XOR_STR_OP      [ shift and go to state 129 ]
  ! AND_STR_OP      [ shift and go to state 122 ]
  ! NOT_STR_OP      [ shift and go to state 116 ]
  ! ASSOCIATE_OP    [ shift and go to state 133 ]

    empty                          shift and go to state 212

state 230

    (54) parameters -> expression empty empty .

    CLOSE_PARANTHESIS reduce using rule 54 (parameters -> expression empty empty .)


state 231

    (57) forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression . SEMICOLON expression CLOSE_PARANTHESIS block
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    SEMICOLON       shift and go to state 238
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    OR_STR_OP       shift and go to state 134
    XOR_STR_OP      shift and go to state 129
    AND_STR_OP      shift and go to state 122
    NOT_STR_OP      shift and go to state 116
    COMMA           shift and go to state 125
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115


state 232

    (45) lefthandside -> LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .

    BLOCK_BEGIN     reduce using rule 45 (lefthandside -> LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    ADV_ASSIGNMENT_OP reduce using rule 45 (lefthandside -> LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    ASSIGNMENT_OP   reduce using rule 45 (lefthandside -> LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    COMMA           reduce using rule 45 (lefthandside -> LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    CLOSE_PARANTHESIS reduce using rule 45 (lefthandside -> LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)
    SEMICOLON       reduce using rule 45 (lefthandside -> LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS .)


state 233

    (28) ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .
    (29) ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block . ELSE block

    RETURN          reduce using rule 28 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    IDENTIFIER      reduce using rule 28 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    WHILE           reduce using rule 28 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    FOR             reduce using rule 28 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    PRINT           reduce using rule 28 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    SUB             reduce using rule 28 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    LAST            reduce using rule 28 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    NEXT            reduce using rule 28 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    IF              reduce using rule 28 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    USE             reduce using rule 28 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    SWITCH          reduce using rule 28 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    PRIVATE         reduce using rule 28 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    LOCAL           reduce using rule 28 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    OPEN_PARANTHESIS reduce using rule 28 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    ARRAY           reduce using rule 28 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    HASH            reduce using rule 28 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    VARIABLE        reduce using rule 28 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    BLOCK_ENDS      reduce using rule 28 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    $end            reduce using rule 28 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    ELSE            shift and go to state 239


state 234

    (25) caselist -> CASE . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block caselist

    OPEN_PARANTHESIS shift and go to state 240


state 235

    (24) switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist . BLOCK_ENDS

    BLOCK_ENDS      shift and go to state 241


state 236

    (26) caselist -> ELSE . empty empty empty block empty
    (8) empty -> .

    BLOCK_BEGIN     reduce using rule 8 (empty -> .)

    empty                          shift and go to state 242

state 237

    (27) caselist -> empty .

    BLOCK_ENDS      reduce using rule 27 (caselist -> empty .)


state 238

    (57) forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON . expression CLOSE_PARANTHESIS block
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 243
    empty                          shift and go to state 55

state 239

    (29) ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE . block
    (4) block -> . BLOCK_BEGIN statements BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 8

    block                          shift and go to state 244

state 240

    (25) caselist -> CASE OPEN_PARANTHESIS . expression CLOSE_PARANTHESIS block caselist
    (76) expression -> . PLUS_OP expression
    (77) expression -> . MINUS_OP expression
    (78) expression -> . BIT_FLIP expression
    (79) expression -> . NOT_OP expression
    (80) expression -> . INCREMENT_OP expression
    (81) expression -> . DECREMENT_OP expression
    (82) expression -> . expression INCREMENT_OP
    (83) expression -> . expression DECREMENT_OP
    (84) expression -> . empty
    (85) expression -> . term
    (86) expression -> . expression OR_STR_OP expression
    (87) expression -> . expression XOR_STR_OP expression
    (88) expression -> . expression AND_STR_OP expression
    (89) expression -> . expression NOT_STR_OP expression
    (90) expression -> . expression COMMA expression
    (91) expression -> . expression ASSOCIATE_OP expression
    (92) expression -> . expression ADV_ASSIGNMENT_OP expression
    (93) expression -> . expression ASSIGNMENT_OP expression
    (94) expression -> . expression RANGE_OP expression
    (95) expression -> . expression OR_OP expression
    (96) expression -> . expression AND_OP expression
    (97) expression -> . expression BIT_OR expression
    (98) expression -> . expression BIT_XOR expression
    (99) expression -> . expression BIT_AND expression
    (100) expression -> . expression EQUALS_OP expression
    (101) expression -> . expression NOT_EQUALS_OP expression
    (102) expression -> . expression COMPARE_OP expression
    (103) expression -> . expression GREATER_OP expression
    (104) expression -> . expression LESS_OP expression
    (105) expression -> . expression GREATER_EQUAL_OP expression
    (106) expression -> . expression LESS_EQUAL_OP expression
    (107) expression -> . expression BIT_RIGHT_SHIFT expression
    (108) expression -> . expression BIT_LEFT_SHIFT expression
    (109) expression -> . expression PLUS_OP expression
    (110) expression -> . expression MINUS_OP expression
    (111) expression -> . expression CONCATENATE expression
    (112) expression -> . expression MULTIPLICATION_OP expression
    (113) expression -> . expression DIVISION_OP expression
    (114) expression -> . expression MODULUS_OP expression
    (115) expression -> . expression REP_OP expression
    (116) expression -> . expression SEARCH_MODIFY expression
    (117) expression -> . expression SEARCH_MODIFY_NEG expression
    (118) expression -> . expression EXPONENT_OP expression
    (8) empty -> .
    (68) term -> . empty number empty
    (69) term -> . empty type empty
    (70) term -> . empty variable empty
    (71) term -> . empty string empty
    (72) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 59
    MINUS_OP        shift and go to state 52
    BIT_FLIP        shift and go to state 54
    NOT_OP          shift and go to state 53
    INCREMENT_OP    shift and go to state 58
    DECREMENT_OP    shift and go to state 56
    NUMBER          reduce using rule 8 (empty -> .)
    SCI_NOT         reduce using rule 8 (empty -> .)
    FLOAT           reduce using rule 8 (empty -> .)
    HEXADECIMAL     reduce using rule 8 (empty -> .)
    OCTAL           reduce using rule 8 (empty -> .)
    ARRAY           reduce using rule 8 (empty -> .)
    HASH            reduce using rule 8 (empty -> .)
    VARIABLE        reduce using rule 8 (empty -> .)
    STRING          reduce using rule 8 (empty -> .)
    RES_STRING      reduce using rule 8 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 8 (empty -> .)
    OR_STR_OP       reduce using rule 8 (empty -> .)
    XOR_STR_OP      reduce using rule 8 (empty -> .)
    AND_STR_OP      reduce using rule 8 (empty -> .)
    NOT_STR_OP      reduce using rule 8 (empty -> .)
    COMMA           reduce using rule 8 (empty -> .)
    ASSOCIATE_OP    reduce using rule 8 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 8 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 8 (empty -> .)
    RANGE_OP        reduce using rule 8 (empty -> .)
    OR_OP           reduce using rule 8 (empty -> .)
    AND_OP          reduce using rule 8 (empty -> .)
    BIT_OR          reduce using rule 8 (empty -> .)
    BIT_XOR         reduce using rule 8 (empty -> .)
    BIT_AND         reduce using rule 8 (empty -> .)
    EQUALS_OP       reduce using rule 8 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 8 (empty -> .)
    COMPARE_OP      reduce using rule 8 (empty -> .)
    GREATER_OP      reduce using rule 8 (empty -> .)
    LESS_OP         reduce using rule 8 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 8 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 8 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 8 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 8 (empty -> .)
    CONCATENATE     reduce using rule 8 (empty -> .)
    MULTIPLICATION_OP reduce using rule 8 (empty -> .)
    DIVISION_OP     reduce using rule 8 (empty -> .)
    MODULUS_OP      reduce using rule 8 (empty -> .)
    REP_OP          reduce using rule 8 (empty -> .)
    SEARCH_MODIFY   reduce using rule 8 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 8 (empty -> .)
    EXPONENT_OP     reduce using rule 8 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 51

  ! INCREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! DECREMENT_OP    [ reduce using rule 8 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 8 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 8 (empty -> .) ]

    term                           shift and go to state 57
    expression                     shift and go to state 245
    empty                          shift and go to state 55

state 241

    (24) switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .

    RETURN          reduce using rule 24 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    IDENTIFIER      reduce using rule 24 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    WHILE           reduce using rule 24 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    FOR             reduce using rule 24 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    PRINT           reduce using rule 24 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    SUB             reduce using rule 24 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    LAST            reduce using rule 24 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    NEXT            reduce using rule 24 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    IF              reduce using rule 24 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    USE             reduce using rule 24 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    SWITCH          reduce using rule 24 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    PRIVATE         reduce using rule 24 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    LOCAL           reduce using rule 24 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    OPEN_PARANTHESIS reduce using rule 24 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    ARRAY           reduce using rule 24 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    HASH            reduce using rule 24 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    VARIABLE        reduce using rule 24 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    BLOCK_ENDS      reduce using rule 24 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)
    $end            reduce using rule 24 (switchStatement -> SWITCH empty lefthandside empty BLOCK_BEGIN caselist BLOCK_ENDS .)


state 242

    (26) caselist -> ELSE empty . empty empty block empty
    (8) empty -> .

    BLOCK_BEGIN     reduce using rule 8 (empty -> .)

    empty                          shift and go to state 246

state 243

    (57) forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression . CLOSE_PARANTHESIS block
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS shift and go to state 247
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    OR_STR_OP       shift and go to state 134
    XOR_STR_OP      shift and go to state 129
    AND_STR_OP      shift and go to state 122
    NOT_STR_OP      shift and go to state 116
    COMMA           shift and go to state 125
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115


state 244

    (29) ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .

    RETURN          reduce using rule 29 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    IDENTIFIER      reduce using rule 29 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    WHILE           reduce using rule 29 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    FOR             reduce using rule 29 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    PRINT           reduce using rule 29 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    SUB             reduce using rule 29 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    LAST            reduce using rule 29 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    NEXT            reduce using rule 29 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    IF              reduce using rule 29 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    USE             reduce using rule 29 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    SWITCH          reduce using rule 29 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    PRIVATE         reduce using rule 29 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    LOCAL           reduce using rule 29 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    OPEN_PARANTHESIS reduce using rule 29 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    ARRAY           reduce using rule 29 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    HASH            reduce using rule 29 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    VARIABLE        reduce using rule 29 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    $end            reduce using rule 29 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    BLOCK_ENDS      reduce using rule 29 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)


state 245

    (25) caselist -> CASE OPEN_PARANTHESIS expression . CLOSE_PARANTHESIS block caselist
    (82) expression -> expression . INCREMENT_OP
    (83) expression -> expression . DECREMENT_OP
    (86) expression -> expression . OR_STR_OP expression
    (87) expression -> expression . XOR_STR_OP expression
    (88) expression -> expression . AND_STR_OP expression
    (89) expression -> expression . NOT_STR_OP expression
    (90) expression -> expression . COMMA expression
    (91) expression -> expression . ASSOCIATE_OP expression
    (92) expression -> expression . ADV_ASSIGNMENT_OP expression
    (93) expression -> expression . ASSIGNMENT_OP expression
    (94) expression -> expression . RANGE_OP expression
    (95) expression -> expression . OR_OP expression
    (96) expression -> expression . AND_OP expression
    (97) expression -> expression . BIT_OR expression
    (98) expression -> expression . BIT_XOR expression
    (99) expression -> expression . BIT_AND expression
    (100) expression -> expression . EQUALS_OP expression
    (101) expression -> expression . NOT_EQUALS_OP expression
    (102) expression -> expression . COMPARE_OP expression
    (103) expression -> expression . GREATER_OP expression
    (104) expression -> expression . LESS_OP expression
    (105) expression -> expression . GREATER_EQUAL_OP expression
    (106) expression -> expression . LESS_EQUAL_OP expression
    (107) expression -> expression . BIT_RIGHT_SHIFT expression
    (108) expression -> expression . BIT_LEFT_SHIFT expression
    (109) expression -> expression . PLUS_OP expression
    (110) expression -> expression . MINUS_OP expression
    (111) expression -> expression . CONCATENATE expression
    (112) expression -> expression . MULTIPLICATION_OP expression
    (113) expression -> expression . DIVISION_OP expression
    (114) expression -> expression . MODULUS_OP expression
    (115) expression -> expression . REP_OP expression
    (116) expression -> expression . SEARCH_MODIFY expression
    (117) expression -> expression . SEARCH_MODIFY_NEG expression
    (118) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS shift and go to state 248
    INCREMENT_OP    shift and go to state 139
    DECREMENT_OP    shift and go to state 132
    OR_STR_OP       shift and go to state 134
    XOR_STR_OP      shift and go to state 129
    AND_STR_OP      shift and go to state 122
    NOT_STR_OP      shift and go to state 116
    COMMA           shift and go to state 125
    ASSOCIATE_OP    shift and go to state 133
    ADV_ASSIGNMENT_OP shift and go to state 141
    ASSIGNMENT_OP   shift and go to state 127
    RANGE_OP        shift and go to state 118
    OR_OP           shift and go to state 123
    AND_OP          shift and go to state 135
    BIT_OR          shift and go to state 142
    BIT_XOR         shift and go to state 119
    BIT_AND         shift and go to state 130
    EQUALS_OP       shift and go to state 112
    NOT_EQUALS_OP   shift and go to state 114
    COMPARE_OP      shift and go to state 113
    GREATER_OP      shift and go to state 145
    LESS_OP         shift and go to state 124
    GREATER_EQUAL_OP shift and go to state 128
    LESS_EQUAL_OP   shift and go to state 111
    BIT_RIGHT_SHIFT shift and go to state 140
    BIT_LEFT_SHIFT  shift and go to state 136
    PLUS_OP         shift and go to state 143
    MINUS_OP        shift and go to state 120
    CONCATENATE     shift and go to state 138
    MULTIPLICATION_OP shift and go to state 131
    DIVISION_OP     shift and go to state 117
    MODULUS_OP      shift and go to state 126
    REP_OP          shift and go to state 137
    SEARCH_MODIFY   shift and go to state 110
    SEARCH_MODIFY_NEG shift and go to state 144
    EXPONENT_OP     shift and go to state 115


state 246

    (26) caselist -> ELSE empty empty . empty block empty
    (8) empty -> .

    BLOCK_BEGIN     reduce using rule 8 (empty -> .)

    empty                          shift and go to state 249

state 247

    (57) forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS . block
    (4) block -> . BLOCK_BEGIN statements BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 8

    block                          shift and go to state 250

state 248

    (25) caselist -> CASE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS . block caselist
    (4) block -> . BLOCK_BEGIN statements BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 8

    block                          shift and go to state 251

state 249

    (26) caselist -> ELSE empty empty empty . block empty
    (4) block -> . BLOCK_BEGIN statements BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 8

    block                          shift and go to state 252

state 250

    (57) forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .

    RETURN          reduce using rule 57 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    IDENTIFIER      reduce using rule 57 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    WHILE           reduce using rule 57 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    FOR             reduce using rule 57 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    PRINT           reduce using rule 57 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    SUB             reduce using rule 57 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    LAST            reduce using rule 57 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    NEXT            reduce using rule 57 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    IF              reduce using rule 57 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    USE             reduce using rule 57 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    SWITCH          reduce using rule 57 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    PRIVATE         reduce using rule 57 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    LOCAL           reduce using rule 57 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    OPEN_PARANTHESIS reduce using rule 57 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    ARRAY           reduce using rule 57 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    HASH            reduce using rule 57 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    VARIABLE        reduce using rule 57 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    BLOCK_ENDS      reduce using rule 57 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    $end            reduce using rule 57 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)


state 251

    (25) caselist -> CASE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block . caselist
    (25) caselist -> . CASE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block caselist
    (26) caselist -> . ELSE empty empty empty block empty
    (27) caselist -> . empty
    (8) empty -> .

    CASE            shift and go to state 234
    ELSE            shift and go to state 236
    BLOCK_ENDS      reduce using rule 8 (empty -> .)

    caselist                       shift and go to state 253
    empty                          shift and go to state 237

state 252

    (26) caselist -> ELSE empty empty empty block . empty
    (8) empty -> .

    BLOCK_ENDS      reduce using rule 8 (empty -> .)

    empty                          shift and go to state 254

state 253

    (25) caselist -> CASE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block caselist .

    BLOCK_ENDS      reduce using rule 25 (caselist -> CASE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block caselist .)


state 254

    (26) caselist -> ELSE empty empty empty block empty .

    BLOCK_ENDS      reduce using rule 26 (caselist -> ELSE empty empty empty block empty .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for BLOCK_BEGIN in state 9 resolved as shift
WARNING: shift/reduce conflict for OPEN_PARANTHESIS in state 11 resolved as shift
WARNING: shift/reduce conflict for STRING in state 50 resolved as shift
WARNING: shift/reduce conflict for RES_STRING in state 50 resolved as shift
WARNING: reduce/reduce conflict in state 68 resolved using rule (statements -> statement empty)
WARNING: rejected rule (statements -> empty) in state 68
WARNING: reduce/reduce conflict in state 104 resolved using rule (empty -> <empty>)
WARNING: rejected rule (type -> variable) in state 104
WARNING: reduce/reduce conflict in state 150 resolved using rule (parameters -> empty)
WARNING: rejected rule (expression -> empty) in state 150
WARNING: reduce/reduce conflict in state 229 resolved using rule (empty -> <empty>)
WARNING: rejected rule (expression -> expression COMMA expression) in state 229
