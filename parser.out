Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    FORMAT
    COMMENT
    TRANSLATION
    GOTO
    FOREACH
    ELSIF
    SUBSTITUTE
    SELECT
    FILE_HANDLING_OPTIONS
    COLON
    UNLESS
    DECREMENT_OP
    UNTIL
    WHITESPACE
    USER_INPUT_OP
    QUESTION_MARK
    REDO
    HASH
    WRITE
    MATCH
    INCREMENT_OP
    DO
    SYSTEM_COMMAND
    CONTINUE

Grammar

Rule 0     S' -> start
Rule 1     start -> block
Rule 2     start -> statements
Rule 3     block -> BLOCK_BEGIN statements BLOCK_ENDS
Rule 4     statements -> statement statements
Rule 5     statements -> statement
Rule 6     empty -> <empty>
Rule 7     statement -> assignment Marker
Rule 8     statement -> declaration Marker
Rule 9     statement -> returnStatement Marker
Rule 10    statement -> functionCall Marker
Rule 11    statement -> whileStatement Marker
Rule 12    statement -> forStatement Marker
Rule 13    statement -> printStatement Marker
Rule 14    statement -> functionStatement Marker
Rule 15    statement -> lastStatement Marker
Rule 16    statement -> nextStatement Marker
Rule 17    statement -> ifthen Marker
Rule 18    statement -> ifthenelse Marker
Rule 19    statement -> useStatement Marker
Rule 20    statement -> switchStatement Marker
Rule 21    useStatement -> USE IDENTIFIER SEMICOLON
Rule 22    switchStatement -> SWITCH lefthandside BLOCK_BEGIN caselist BLOCK_ENDS
Rule 23    caselist -> CASE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block caselist
Rule 24    caselist -> ELSE block
Rule 25    caselist -> empty
Rule 26    ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif block
Rule 27    ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerif block ELSE Markerelse block
Rule 28    lastStatement -> LAST SEMICOLON
Rule 29    nextStatement -> NEXT SEMICOLON
Rule 30    functionStatement -> SUB IDENTIFIER block
Rule 31    printStatement -> PRINT OPEN_PARANTHESIS expression CLOSE_PARANTHESIS SEMICOLON
Rule 32    printStatement -> PRINT expression SEMICOLON
Rule 33    returnStatement -> RETURN expression SEMICOLON
Rule 34    assignment -> lefthandside assignmenttype expression SEMICOLON
Rule 35    assignmenttype -> ADV_ASSIGNMENT_OP
Rule 36    assignmenttype -> ASSIGNMENT_OP
Rule 37    lefthandside -> PRIVATE type decList
Rule 38    lefthandside -> PRIVATE OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
Rule 39    lefthandside -> LOCAL type decList
Rule 40    lefthandside -> LOCAL OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
Rule 41    lefthandside -> OPEN_PARANTHESIS type decList CLOSE_PARANTHESIS
Rule 42    lefthandside -> type
Rule 43    declaration -> lefthandside SEMICOLON
Rule 44    decList -> COMMA type decList
Rule 45    decList -> empty
Rule 46    functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS SEMICOLON
Rule 47    parameters -> expression COMMA parameters
Rule 48    parameters -> expression
Rule 49    parameters -> empty
Rule 50    whileStatement -> WHILE Marker OPEN_PARANTHESIS expression CLOSE_PARANTHESIS Markerwhile block
Rule 51    Markerwhile -> empty
Rule 52    forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block
Rule 53    string -> STRING
Rule 54    string -> RES_STRING
Rule 55    number -> NUMBER
Rule 56    number -> SCI_NOT
Rule 57    number -> FLOAT
Rule 58    number -> HEXADECIMAL
Rule 59    number -> OCTAL
Rule 60    variable -> VARIABLE
Rule 61    variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
Rule 62    term -> number
Rule 63    term -> type
Rule 64    term -> string
Rule 65    term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
Rule 66    type -> variable
Rule 67    type -> ARRAY
Rule 68    expression -> PLUS_OP expression
Rule 69    expression -> MINUS_OP expression
Rule 70    expression -> BIT_FLIP expression
Rule 71    expression -> NOT_OP expression
Rule 72    expression -> empty
Rule 73    expression -> term
Rule 74    expression -> expression OR_STR_OP expression
Rule 75    expression -> expression XOR_STR_OP expression
Rule 76    expression -> expression AND_STR_OP expression
Rule 77    expression -> expression NOT_STR_OP expression
Rule 78    expression -> expression COMPARE_OP expression
Rule 79    expression -> expression BIT_OR expression
Rule 80    expression -> expression BIT_XOR expression
Rule 81    expression -> expression BIT_AND expression
Rule 82    expression -> expression AND_OP Marker expression
Rule 83    expression -> expression OR_OP Marker expression
Rule 84    expression -> expression EQUALS_OP expression
Rule 85    expression -> expression NOT_EQUALS_OP expression
Rule 86    expression -> expression GREATER_OP expression
Rule 87    expression -> expression LESS_OP expression
Rule 88    expression -> expression GREATER_EQUAL_OP expression
Rule 89    expression -> expression LESS_EQUAL_OP expression
Rule 90    Marker -> empty
Rule 91    expression -> expression PLUS_OP expression
Rule 92    expression -> expression MINUS_OP expression
Rule 93    expression -> expression MULTIPLICATION_OP expression
Rule 94    expression -> expression DIVISION_OP expression
Rule 95    expression -> expression MODULUS_OP expression
Rule 96    expression -> expression EXPONENT_OP expression
Rule 97    expression -> expression BIT_RIGHT_SHIFT expression
Rule 98    expression -> expression BIT_LEFT_SHIFT expression
Rule 99    expression -> expression CONCATENATE expression
Rule 100   expression -> expression REP_OP expression
Rule 101   expression -> expression COMMA expression
Rule 102   expression -> expression ASSOCIATE_OP expression
Rule 103   expression -> expression RANGE_OP expression
Rule 104   expression -> expression SEARCH_MODIFY expression
Rule 105   expression -> expression SEARCH_MODIFY_NEG expression

Terminals, with rules where they appear

ADV_ASSIGNMENT_OP    : 35
AND_OP               : 82
AND_STR_OP           : 76
ARRAY                : 67
ASSIGNMENT_OP        : 36
ASSOCIATE_OP         : 102
BIT_AND              : 81
BIT_FLIP             : 70
BIT_LEFT_SHIFT       : 98
BIT_OR               : 79
BIT_RIGHT_SHIFT      : 97
BIT_XOR              : 80
BLOCK_BEGIN          : 3 22
BLOCK_ENDS           : 3 22
CASE                 : 23
CLOSE_BRACKET        : 61
CLOSE_PARANTHESIS    : 23 26 27 31 38 40 41 46 50 52 65
COLON                : 
COMMA                : 44 47 101
COMMENT              : 
COMPARE_OP           : 78
CONCATENATE          : 99
CONTINUE             : 
DECREMENT_OP         : 
DIVISION_OP          : 94
DO                   : 
ELSE                 : 24 27
ELSIF                : 
EQUALS_OP            : 84
EXPONENT_OP          : 96
FILE_HANDLING_OPTIONS : 
FLOAT                : 57
FOR                  : 52
FOREACH              : 
FORMAT               : 
GOTO                 : 
GREATER_EQUAL_OP     : 88
GREATER_OP           : 86
HASH                 : 
HEXADECIMAL          : 58
IDENTIFIER           : 21 30 46
IF                   : 26 27
INCREMENT_OP         : 
LAST                 : 28
LESS_EQUAL_OP        : 89
LESS_OP              : 87
LOCAL                : 39 40
MATCH                : 
MINUS_OP             : 69 92
MODULUS_OP           : 95
MULTIPLICATION_OP    : 93
NEXT                 : 29
NOT_EQUALS_OP        : 85
NOT_OP               : 71
NOT_STR_OP           : 77
NUMBER               : 55 61
OCTAL                : 59
OPEN_BRACKET         : 61
OPEN_PARANTHESIS     : 23 26 27 31 38 40 41 46 50 52 65
OR_OP                : 83
OR_STR_OP            : 74
PLUS_OP              : 68 91
PRINT                : 31 32
PRIVATE              : 37 38
QUESTION_MARK        : 
RANGE_OP             : 103
REDO                 : 
REP_OP               : 100
RES_STRING           : 54
RETURN               : 33
SCI_NOT              : 56
SEARCH_MODIFY        : 104
SEARCH_MODIFY_NEG    : 105
SELECT               : 
SEMICOLON            : 21 28 29 31 32 33 34 43 46 52 52
STRING               : 53
SUB                  : 30
SUBSTITUTE           : 
SWITCH               : 22
SYSTEM_COMMAND       : 
TRANSLATION          : 
UNLESS               : 
UNTIL                : 
USE                  : 21
USER_INPUT_OP        : 
VARIABLE             : 60 61
WHILE                : 50
WHITESPACE           : 
WRITE                : 
XOR_STR_OP           : 75
error                : 

Nonterminals, with rules where they appear

Marker               : 7 8 9 10 11 12 13 14 15 16 17 18 19 20 50 82 83
Markerelse           : 27
Markerif             : 26 27
Markerwhile          : 50
assignment           : 7
assignmenttype       : 34
block                : 1 23 24 26 27 27 30 50 52
caselist             : 22 23
decList              : 37 38 39 40 41 44
declaration          : 8
empty                : 25 45 49 51 72 90
expression           : 23 26 27 31 32 33 34 47 48 50 52 52 52 65 68 69 70 71 74 74 75 75 76 76 77 77 78 78 79 79 80 80 81 81 82 82 83 83 84 84 85 85 86 86 87 87 88 88 89 89 91 91 92 92 93 93 94 94 95 95 96 96 97 97 98 98 99 99 100 100 101 101 102 102 103 103 104 104 105 105
forStatement         : 12
functionCall         : 10
functionStatement    : 14
ifthen               : 17
ifthenelse           : 18
lastStatement        : 15
lefthandside         : 22 34 43
nextStatement        : 16
number               : 62
parameters           : 46 47
printStatement       : 13
returnStatement      : 9
start                : 0
statement            : 4 5
statements           : 2 3 4
string               : 64
switchStatement      : 20
term                 : 73
type                 : 37 38 39 40 41 42 44 63
useStatement         : 19
variable             : 66
whileStatement       : 11

