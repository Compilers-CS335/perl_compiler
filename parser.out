Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    FORMAT
    COMMENT
    TRANSLATION
    GOTO
    FOREACH
    ELSIF
    SUBSTITUTE
    SELECT
    FILE_HANDLING_OPTIONS
    COLON
    UNLESS
    UNTIL
    WHITESPACE
    USER_INPUT_OP
    QUESTION_MARK
    REDO
    WRITE
    MATCH
    DO
    USE
    SYSTEM_COMMAND
    CONTINUE

Grammar

Rule 0     S' -> start
Rule 1     start -> block
Rule 2     start -> statements
Rule 3     block -> BLOCK_BEGIN statements BLOCK_ENDS
Rule 4     statements -> statement statements
Rule 5     statements -> statement empty
Rule 6     statements -> empty empty
Rule 7     empty -> <empty>
Rule 8     statement -> assignment
Rule 9     statement -> declaration
Rule 10    statement -> returnStatement
Rule 11    statement -> functionCall
Rule 12    statement -> whileStatement
Rule 13    statement -> forStatement
Rule 14    statement -> printStatement
Rule 15    statement -> functionStatement
Rule 16    statement -> lastStatement
Rule 17    statement -> nextStatement
Rule 18    statement -> ifthen
Rule 19    statement -> ifthenelse
Rule 20    switchStatement -> SWITCH OPEN_PARANTHESIS lefthandside CLOSE_PARANTHESIS BLOCK_BEGIN caselist BLOCK_ENDS
Rule 21    caselist -> CASE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block caselist
Rule 22    caselist -> ELSE empty empty empty block empty
Rule 23    caselist -> empty empty empty empty empty empty
Rule 24    ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
Rule 25    ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block
Rule 26    lastStatement -> LAST SEMICOLON
Rule 27    nextStatement -> NEXT SEMICOLON
Rule 28    functionStatement -> SUB IDENTIFIER block
Rule 29    printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON
Rule 30    printStatement -> PRINT empty string1 empty SEMICOLON
Rule 31    string1 -> STRING
Rule 32    string1 -> RES_STRING
Rule 33    returnStatement -> RETURN expression SEMICOLON
Rule 34    assignment -> lefthandside decList empty assignmenttype expression SEMICOLON
Rule 35    assignment -> lefthandside decList CLOSE_PARANTHESIS assignmenttype expression SEMICOLON
Rule 36    assignmenttype -> ADV_ASSIGNMENT_OP
Rule 37    assignmenttype -> ASSIGNMENT_OP
Rule 38    lefthandside -> PRIVATE empty type
Rule 39    lefthandside -> empty empty type
Rule 40    lefthandside -> PRIVATE OPEN_PARANTHESIS type
Rule 41    lefthandside -> LOCAL empty type
Rule 42    lefthandside -> LOCAL OPEN_PARANTHESIS type
Rule 43    declaration -> lefthandside decList empty SEMICOLON
Rule 44    declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON
Rule 45    decList -> COMMA type decList
Rule 46    decList -> empty empty empty
Rule 47    functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS
Rule 48    parameters -> expression COMMA parameters
Rule 49    parameters -> expression empty empty
Rule 50    parameters -> empty empty empty
Rule 51    whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
Rule 52    forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block
Rule 53    string -> STRING
Rule 54    string -> RES_STRING
Rule 55    number -> NUMBER
Rule 56    number -> SCI_NOT
Rule 57    number -> FLOAT
Rule 58    number -> HEXADECIMAL
Rule 59    number -> OCTAL
Rule 60    variable -> VARIABLE empty empty empty
Rule 61    variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
Rule 62    variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS
Rule 63    term -> empty number empty
Rule 64    term -> empty type empty
Rule 65    term -> empty variable empty
Rule 66    term -> empty string empty
Rule 67    term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
Rule 68    type -> ARRAY
Rule 69    type -> HASH
Rule 70    type -> variable
Rule 71    expression -> PLUS_OP expression
Rule 72    expression -> MINUS_OP expression
Rule 73    expression -> BIT_FLIP expression
Rule 74    expression -> NOT_OP expression
Rule 75    expression -> INCREMENT_OP expression
Rule 76    expression -> DECREMENT_OP expression
Rule 77    expression -> expression INCREMENT_OP
Rule 78    expression -> expression DECREMENT_OP
Rule 79    expression -> term
Rule 80    expression -> expression OR_STR_OP expression
Rule 81    expression -> expression XOR_STR_OP expression
Rule 82    expression -> expression AND_STR_OP expression
Rule 83    expression -> expression NOT_STR_OP expression
Rule 84    expression -> expression COMMA expression
Rule 85    expression -> expression ASSOCIATE_OP expression
Rule 86    expression -> expression ADV_ASSIGNMENT_OP expression
Rule 87    expression -> expression ASSIGNMENT_OP expression
Rule 88    expression -> expression RANGE_OP expression
Rule 89    expression -> expression OR_OP expression
Rule 90    expression -> expression AND_OP expression
Rule 91    expression -> expression BIT_OR expression
Rule 92    expression -> expression BIT_XOR expression
Rule 93    expression -> expression BIT_AND expression
Rule 94    expression -> expression EQUALS_OP expression
Rule 95    expression -> expression NOT_EQUALS_OP expression
Rule 96    expression -> expression COMPARE_OP expression
Rule 97    expression -> expression GREATER_OP expression
Rule 98    expression -> expression LESS_OP expression
Rule 99    expression -> expression GREATER_EQUAL_OP expression
Rule 100   expression -> expression LESS_EQUAL_OP expression
Rule 101   expression -> expression BIT_RIGHT_SHIFT expression
Rule 102   expression -> expression BIT_LEFT_SHIFT expression
Rule 103   expression -> expression PLUS_OP expression
Rule 104   expression -> expression MINUS_OP expression
Rule 105   expression -> expression CONCATENATE expression
Rule 106   expression -> expression MULTIPLICATION_OP expression
Rule 107   expression -> expression DIVISION_OP expression
Rule 108   expression -> expression MODULUS_OP expression
Rule 109   expression -> expression REP_OP expression
Rule 110   expression -> expression SEARCH_MODIFY expression
Rule 111   expression -> expression SEARCH_MODIFY_NEG expression
Rule 112   expression -> expression EXPONENT_OP expression

Terminals, with rules where they appear

ADV_ASSIGNMENT_OP    : 36 86
AND_OP               : 90
AND_STR_OP           : 82
ARRAY                : 68
ASSIGNMENT_OP        : 37 87
ASSOCIATE_OP         : 85
BIT_AND              : 93
BIT_FLIP             : 73
BIT_LEFT_SHIFT       : 102
BIT_OR               : 91
BIT_RIGHT_SHIFT      : 101
BIT_XOR              : 92
BLOCK_BEGIN          : 3 20 62
BLOCK_ENDS           : 3 20 62
CASE                 : 21
CLOSE_BRACKET        : 61
CLOSE_PARANTHESIS    : 20 21 24 25 29 35 44 47 51 52 67
COLON                : 
COMMA                : 45 48 84
COMMENT              : 
COMPARE_OP           : 96
CONCATENATE          : 105
CONTINUE             : 
DECREMENT_OP         : 76 78
DIVISION_OP          : 107
DO                   : 
ELSE                 : 22 25
ELSIF                : 
EQUALS_OP            : 94
EXPONENT_OP          : 112
FILE_HANDLING_OPTIONS : 
FLOAT                : 57
FOR                  : 52
FOREACH              : 
FORMAT               : 
GOTO                 : 
GREATER_EQUAL_OP     : 99
GREATER_OP           : 97
HASH                 : 69
HEXADECIMAL          : 58
IDENTIFIER           : 28 47
IF                   : 24 25
INCREMENT_OP         : 75 77
LAST                 : 26
LESS_EQUAL_OP        : 100
LESS_OP              : 98
LOCAL                : 41 42
MATCH                : 
MINUS_OP             : 72 104
MODULUS_OP           : 108
MULTIPLICATION_OP    : 106
NEXT                 : 27
NOT_EQUALS_OP        : 95
NOT_OP               : 74
NOT_STR_OP           : 83
NUMBER               : 55 61
OCTAL                : 59
OPEN_BRACKET         : 61
OPEN_PARANTHESIS     : 20 21 24 25 29 40 42 47 51 52 67
OR_OP                : 89
OR_STR_OP            : 80
PLUS_OP              : 71 103
PRINT                : 29 30
PRIVATE              : 38 40
QUESTION_MARK        : 
RANGE_OP             : 88
REDO                 : 
REP_OP               : 109
RES_STRING           : 32 54
RETURN               : 33
SCI_NOT              : 56
SEARCH_MODIFY        : 110
SEARCH_MODIFY_NEG    : 111
SELECT               : 
SEMICOLON            : 26 27 29 30 33 34 35 43 44 52 52
STRING               : 31 53
SUB                  : 28
SUBSTITUTE           : 
SWITCH               : 20
SYSTEM_COMMAND       : 
TRANSLATION          : 
UNLESS               : 
UNTIL                : 
USE                  : 
USER_INPUT_OP        : 
VARIABLE             : 60 61 62
WHILE                : 51
WHITESPACE           : 
WRITE                : 
XOR_STR_OP           : 81
error                : 

Nonterminals, with rules where they appear

assignment           : 8
assignmenttype       : 34 35
block                : 1 21 22 24 25 25 28 51 52
caselist             : 20 21
decList              : 34 35 43 44 45
declaration          : 9
empty                : 5 6 6 22 22 22 22 23 23 23 23 23 23 30 30 34 38 39 39 41 43 46 46 46 49 49 50 50 50 60 60 60 63 63 64 64 65 65 66 66
expression           : 21 24 25 33 34 35 48 49 51 52 52 52 67 71 72 73 74 75 76 77 78 80 80 81 81 82 82 83 83 84 84 85 85 86 86 87 87 88 88 89 89 90 90 91 91 92 92 93 93 94 94 95 95 96 96 97 97 98 98 99 99 100 100 101 101 102 102 103 103 104 104 105 105 106 106 107 107 108 108 109 109 110 110 111 111 112 112
forStatement         : 13
functionCall         : 11
functionStatement    : 15
ifthen               : 18
ifthenelse           : 19
lastStatement        : 16
lefthandside         : 20 34 35 43 44
nextStatement        : 17
number               : 63
parameters           : 47 48
printStatement       : 14
returnStatement      : 10
start                : 0
statement            : 4 5
statements           : 2 3 4
string               : 62 66
string1              : 29 30
switchStatement      : 
term                 : 79
type                 : 38 39 40 41 42 45 64
variable             : 65 70
whileStatement       : 12

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . block
    (2) start -> . statements
    (3) block -> . BLOCK_BEGIN statements BLOCK_ENDS
    (4) statements -> . statement statements
    (5) statements -> . statement empty
    (6) statements -> . empty empty
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . returnStatement
    (11) statement -> . functionCall
    (12) statement -> . whileStatement
    (13) statement -> . forStatement
    (14) statement -> . printStatement
    (15) statement -> . functionStatement
    (16) statement -> . lastStatement
    (17) statement -> . nextStatement
    (18) statement -> . ifthen
    (19) statement -> . ifthenelse
    (7) empty -> .
    (34) assignment -> . lefthandside decList empty assignmenttype expression SEMICOLON
    (35) assignment -> . lefthandside decList CLOSE_PARANTHESIS assignmenttype expression SEMICOLON
    (43) declaration -> . lefthandside decList empty SEMICOLON
    (44) declaration -> . lefthandside decList CLOSE_PARANTHESIS SEMICOLON
    (33) returnStatement -> . RETURN expression SEMICOLON
    (47) functionCall -> . IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS
    (51) whileStatement -> . WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
    (52) forStatement -> . FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block
    (29) printStatement -> . PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON
    (30) printStatement -> . PRINT empty string1 empty SEMICOLON
    (28) functionStatement -> . SUB IDENTIFIER block
    (26) lastStatement -> . LAST SEMICOLON
    (27) nextStatement -> . NEXT SEMICOLON
    (24) ifthen -> . IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
    (25) ifthenelse -> . IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block
    (38) lefthandside -> . PRIVATE empty type
    (39) lefthandside -> . empty empty type
    (40) lefthandside -> . PRIVATE OPEN_PARANTHESIS type
    (41) lefthandside -> . LOCAL empty type
    (42) lefthandside -> . LOCAL OPEN_PARANTHESIS type

    BLOCK_BEGIN     shift and go to state 4
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    $end            reduce using rule 7 (empty -> .)
    RETURN          shift and go to state 7
    IDENTIFIER      shift and go to state 18
    WHILE           shift and go to state 5
    FOR             shift and go to state 21
    PRINT           shift and go to state 6
    SUB             shift and go to state 9
    LAST            shift and go to state 10
    NEXT            shift and go to state 13
    IF              shift and go to state 29
    PRIVATE         shift and go to state 12
    LOCAL           shift and go to state 28

    forStatement                   shift and go to state 1
    statements                     shift and go to state 2
    functionStatement              shift and go to state 3
    ifthen                         shift and go to state 8
    nextStatement                  shift and go to state 11
    start                          shift and go to state 14
    lastStatement                  shift and go to state 15
    statement                      shift and go to state 16
    printStatement                 shift and go to state 17
    empty                          shift and go to state 19
    ifthenelse                     shift and go to state 20
    assignment                     shift and go to state 22
    whileStatement                 shift and go to state 23
    lefthandside                   shift and go to state 24
    functionCall                   shift and go to state 25
    declaration                    shift and go to state 26
    returnStatement                shift and go to state 27
    block                          shift and go to state 30

state 1

    (13) statement -> forStatement .

    RETURN          reduce using rule 13 (statement -> forStatement .)
    IDENTIFIER      reduce using rule 13 (statement -> forStatement .)
    WHILE           reduce using rule 13 (statement -> forStatement .)
    FOR             reduce using rule 13 (statement -> forStatement .)
    PRINT           reduce using rule 13 (statement -> forStatement .)
    SUB             reduce using rule 13 (statement -> forStatement .)
    LAST            reduce using rule 13 (statement -> forStatement .)
    NEXT            reduce using rule 13 (statement -> forStatement .)
    IF              reduce using rule 13 (statement -> forStatement .)
    PRIVATE         reduce using rule 13 (statement -> forStatement .)
    LOCAL           reduce using rule 13 (statement -> forStatement .)
    ARRAY           reduce using rule 13 (statement -> forStatement .)
    HASH            reduce using rule 13 (statement -> forStatement .)
    VARIABLE        reduce using rule 13 (statement -> forStatement .)
    BLOCK_ENDS      reduce using rule 13 (statement -> forStatement .)
    $end            reduce using rule 13 (statement -> forStatement .)


state 2

    (2) start -> statements .

    $end            reduce using rule 2 (start -> statements .)


state 3

    (15) statement -> functionStatement .

    RETURN          reduce using rule 15 (statement -> functionStatement .)
    IDENTIFIER      reduce using rule 15 (statement -> functionStatement .)
    WHILE           reduce using rule 15 (statement -> functionStatement .)
    FOR             reduce using rule 15 (statement -> functionStatement .)
    PRINT           reduce using rule 15 (statement -> functionStatement .)
    SUB             reduce using rule 15 (statement -> functionStatement .)
    LAST            reduce using rule 15 (statement -> functionStatement .)
    NEXT            reduce using rule 15 (statement -> functionStatement .)
    IF              reduce using rule 15 (statement -> functionStatement .)
    PRIVATE         reduce using rule 15 (statement -> functionStatement .)
    LOCAL           reduce using rule 15 (statement -> functionStatement .)
    ARRAY           reduce using rule 15 (statement -> functionStatement .)
    HASH            reduce using rule 15 (statement -> functionStatement .)
    VARIABLE        reduce using rule 15 (statement -> functionStatement .)
    BLOCK_ENDS      reduce using rule 15 (statement -> functionStatement .)
    $end            reduce using rule 15 (statement -> functionStatement .)


state 4

    (3) block -> BLOCK_BEGIN . statements BLOCK_ENDS
    (4) statements -> . statement statements
    (5) statements -> . statement empty
    (6) statements -> . empty empty
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . returnStatement
    (11) statement -> . functionCall
    (12) statement -> . whileStatement
    (13) statement -> . forStatement
    (14) statement -> . printStatement
    (15) statement -> . functionStatement
    (16) statement -> . lastStatement
    (17) statement -> . nextStatement
    (18) statement -> . ifthen
    (19) statement -> . ifthenelse
    (7) empty -> .
    (34) assignment -> . lefthandside decList empty assignmenttype expression SEMICOLON
    (35) assignment -> . lefthandside decList CLOSE_PARANTHESIS assignmenttype expression SEMICOLON
    (43) declaration -> . lefthandside decList empty SEMICOLON
    (44) declaration -> . lefthandside decList CLOSE_PARANTHESIS SEMICOLON
    (33) returnStatement -> . RETURN expression SEMICOLON
    (47) functionCall -> . IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS
    (51) whileStatement -> . WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
    (52) forStatement -> . FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block
    (29) printStatement -> . PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON
    (30) printStatement -> . PRINT empty string1 empty SEMICOLON
    (28) functionStatement -> . SUB IDENTIFIER block
    (26) lastStatement -> . LAST SEMICOLON
    (27) nextStatement -> . NEXT SEMICOLON
    (24) ifthen -> . IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
    (25) ifthenelse -> . IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block
    (38) lefthandside -> . PRIVATE empty type
    (39) lefthandside -> . empty empty type
    (40) lefthandside -> . PRIVATE OPEN_PARANTHESIS type
    (41) lefthandside -> . LOCAL empty type
    (42) lefthandside -> . LOCAL OPEN_PARANTHESIS type

    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    BLOCK_ENDS      reduce using rule 7 (empty -> .)
    RETURN          shift and go to state 7
    IDENTIFIER      shift and go to state 18
    WHILE           shift and go to state 5
    FOR             shift and go to state 21
    PRINT           shift and go to state 6
    SUB             shift and go to state 9
    LAST            shift and go to state 10
    NEXT            shift and go to state 13
    IF              shift and go to state 29
    PRIVATE         shift and go to state 12
    LOCAL           shift and go to state 28

    forStatement                   shift and go to state 1
    statements                     shift and go to state 31
    functionStatement              shift and go to state 3
    ifthen                         shift and go to state 8
    nextStatement                  shift and go to state 11
    lastStatement                  shift and go to state 15
    statement                      shift and go to state 16
    printStatement                 shift and go to state 17
    empty                          shift and go to state 19
    ifthenelse                     shift and go to state 20
    assignment                     shift and go to state 22
    whileStatement                 shift and go to state 23
    lefthandside                   shift and go to state 24
    functionCall                   shift and go to state 25
    declaration                    shift and go to state 26
    returnStatement                shift and go to state 27

state 5

    (51) whileStatement -> WHILE . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block

    OPEN_PARANTHESIS shift and go to state 32


state 6

    (29) printStatement -> PRINT . OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON
    (30) printStatement -> PRINT . empty string1 empty SEMICOLON
    (7) empty -> .

    OPEN_PARANTHESIS shift and go to state 33
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    empty                          shift and go to state 34

state 7

    (33) returnStatement -> RETURN . expression SEMICOLON
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 44
    empty                          shift and go to state 39

state 8

    (18) statement -> ifthen .

    RETURN          reduce using rule 18 (statement -> ifthen .)
    IDENTIFIER      reduce using rule 18 (statement -> ifthen .)
    WHILE           reduce using rule 18 (statement -> ifthen .)
    FOR             reduce using rule 18 (statement -> ifthen .)
    PRINT           reduce using rule 18 (statement -> ifthen .)
    SUB             reduce using rule 18 (statement -> ifthen .)
    LAST            reduce using rule 18 (statement -> ifthen .)
    NEXT            reduce using rule 18 (statement -> ifthen .)
    IF              reduce using rule 18 (statement -> ifthen .)
    PRIVATE         reduce using rule 18 (statement -> ifthen .)
    LOCAL           reduce using rule 18 (statement -> ifthen .)
    ARRAY           reduce using rule 18 (statement -> ifthen .)
    HASH            reduce using rule 18 (statement -> ifthen .)
    VARIABLE        reduce using rule 18 (statement -> ifthen .)
    BLOCK_ENDS      reduce using rule 18 (statement -> ifthen .)
    $end            reduce using rule 18 (statement -> ifthen .)


state 9

    (28) functionStatement -> SUB . IDENTIFIER block

    IDENTIFIER      shift and go to state 45


state 10

    (26) lastStatement -> LAST . SEMICOLON

    SEMICOLON       shift and go to state 46


state 11

    (17) statement -> nextStatement .

    RETURN          reduce using rule 17 (statement -> nextStatement .)
    IDENTIFIER      reduce using rule 17 (statement -> nextStatement .)
    WHILE           reduce using rule 17 (statement -> nextStatement .)
    FOR             reduce using rule 17 (statement -> nextStatement .)
    PRINT           reduce using rule 17 (statement -> nextStatement .)
    SUB             reduce using rule 17 (statement -> nextStatement .)
    LAST            reduce using rule 17 (statement -> nextStatement .)
    NEXT            reduce using rule 17 (statement -> nextStatement .)
    IF              reduce using rule 17 (statement -> nextStatement .)
    PRIVATE         reduce using rule 17 (statement -> nextStatement .)
    LOCAL           reduce using rule 17 (statement -> nextStatement .)
    ARRAY           reduce using rule 17 (statement -> nextStatement .)
    HASH            reduce using rule 17 (statement -> nextStatement .)
    VARIABLE        reduce using rule 17 (statement -> nextStatement .)
    BLOCK_ENDS      reduce using rule 17 (statement -> nextStatement .)
    $end            reduce using rule 17 (statement -> nextStatement .)


state 12

    (38) lefthandside -> PRIVATE . empty type
    (40) lefthandside -> PRIVATE . OPEN_PARANTHESIS type
    (7) empty -> .

    OPEN_PARANTHESIS shift and go to state 48
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)

    empty                          shift and go to state 47

state 13

    (27) nextStatement -> NEXT . SEMICOLON

    SEMICOLON       shift and go to state 49


state 14

    (0) S' -> start .



state 15

    (16) statement -> lastStatement .

    RETURN          reduce using rule 16 (statement -> lastStatement .)
    IDENTIFIER      reduce using rule 16 (statement -> lastStatement .)
    WHILE           reduce using rule 16 (statement -> lastStatement .)
    FOR             reduce using rule 16 (statement -> lastStatement .)
    PRINT           reduce using rule 16 (statement -> lastStatement .)
    SUB             reduce using rule 16 (statement -> lastStatement .)
    LAST            reduce using rule 16 (statement -> lastStatement .)
    NEXT            reduce using rule 16 (statement -> lastStatement .)
    IF              reduce using rule 16 (statement -> lastStatement .)
    PRIVATE         reduce using rule 16 (statement -> lastStatement .)
    LOCAL           reduce using rule 16 (statement -> lastStatement .)
    ARRAY           reduce using rule 16 (statement -> lastStatement .)
    HASH            reduce using rule 16 (statement -> lastStatement .)
    VARIABLE        reduce using rule 16 (statement -> lastStatement .)
    BLOCK_ENDS      reduce using rule 16 (statement -> lastStatement .)
    $end            reduce using rule 16 (statement -> lastStatement .)


state 16

    (4) statements -> statement . statements
    (5) statements -> statement . empty
    (4) statements -> . statement statements
    (5) statements -> . statement empty
    (6) statements -> . empty empty
    (7) empty -> .
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . returnStatement
    (11) statement -> . functionCall
    (12) statement -> . whileStatement
    (13) statement -> . forStatement
    (14) statement -> . printStatement
    (15) statement -> . functionStatement
    (16) statement -> . lastStatement
    (17) statement -> . nextStatement
    (18) statement -> . ifthen
    (19) statement -> . ifthenelse
    (34) assignment -> . lefthandside decList empty assignmenttype expression SEMICOLON
    (35) assignment -> . lefthandside decList CLOSE_PARANTHESIS assignmenttype expression SEMICOLON
    (43) declaration -> . lefthandside decList empty SEMICOLON
    (44) declaration -> . lefthandside decList CLOSE_PARANTHESIS SEMICOLON
    (33) returnStatement -> . RETURN expression SEMICOLON
    (47) functionCall -> . IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS
    (51) whileStatement -> . WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
    (52) forStatement -> . FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block
    (29) printStatement -> . PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON
    (30) printStatement -> . PRINT empty string1 empty SEMICOLON
    (28) functionStatement -> . SUB IDENTIFIER block
    (26) lastStatement -> . LAST SEMICOLON
    (27) nextStatement -> . NEXT SEMICOLON
    (24) ifthen -> . IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
    (25) ifthenelse -> . IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block
    (38) lefthandside -> . PRIVATE empty type
    (39) lefthandside -> . empty empty type
    (40) lefthandside -> . PRIVATE OPEN_PARANTHESIS type
    (41) lefthandside -> . LOCAL empty type
    (42) lefthandside -> . LOCAL OPEN_PARANTHESIS type

    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    $end            reduce using rule 7 (empty -> .)
    BLOCK_ENDS      reduce using rule 7 (empty -> .)
    RETURN          shift and go to state 7
    IDENTIFIER      shift and go to state 18
    WHILE           shift and go to state 5
    FOR             shift and go to state 21
    PRINT           shift and go to state 6
    SUB             shift and go to state 9
    LAST            shift and go to state 10
    NEXT            shift and go to state 13
    IF              shift and go to state 29
    PRIVATE         shift and go to state 12
    LOCAL           shift and go to state 28

    forStatement                   shift and go to state 1
    statements                     shift and go to state 50
    functionStatement              shift and go to state 3
    ifthen                         shift and go to state 8
    nextStatement                  shift and go to state 11
    lastStatement                  shift and go to state 15
    statement                      shift and go to state 16
    printStatement                 shift and go to state 17
    empty                          shift and go to state 51
    ifthenelse                     shift and go to state 20
    assignment                     shift and go to state 22
    whileStatement                 shift and go to state 23
    lefthandside                   shift and go to state 24
    functionCall                   shift and go to state 25
    declaration                    shift and go to state 26
    returnStatement                shift and go to state 27

state 17

    (14) statement -> printStatement .

    RETURN          reduce using rule 14 (statement -> printStatement .)
    IDENTIFIER      reduce using rule 14 (statement -> printStatement .)
    WHILE           reduce using rule 14 (statement -> printStatement .)
    FOR             reduce using rule 14 (statement -> printStatement .)
    PRINT           reduce using rule 14 (statement -> printStatement .)
    SUB             reduce using rule 14 (statement -> printStatement .)
    LAST            reduce using rule 14 (statement -> printStatement .)
    NEXT            reduce using rule 14 (statement -> printStatement .)
    IF              reduce using rule 14 (statement -> printStatement .)
    PRIVATE         reduce using rule 14 (statement -> printStatement .)
    LOCAL           reduce using rule 14 (statement -> printStatement .)
    ARRAY           reduce using rule 14 (statement -> printStatement .)
    HASH            reduce using rule 14 (statement -> printStatement .)
    VARIABLE        reduce using rule 14 (statement -> printStatement .)
    BLOCK_ENDS      reduce using rule 14 (statement -> printStatement .)
    $end            reduce using rule 14 (statement -> printStatement .)


state 18

    (47) functionCall -> IDENTIFIER . OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS

    OPEN_PARANTHESIS shift and go to state 52


state 19

    (6) statements -> empty . empty
    (39) lefthandside -> empty . empty type
    (7) empty -> .

    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    $end            reduce using rule 7 (empty -> .)
    BLOCK_ENDS      reduce using rule 7 (empty -> .)

    empty                          shift and go to state 53

state 20

    (19) statement -> ifthenelse .

    RETURN          reduce using rule 19 (statement -> ifthenelse .)
    IDENTIFIER      reduce using rule 19 (statement -> ifthenelse .)
    WHILE           reduce using rule 19 (statement -> ifthenelse .)
    FOR             reduce using rule 19 (statement -> ifthenelse .)
    PRINT           reduce using rule 19 (statement -> ifthenelse .)
    SUB             reduce using rule 19 (statement -> ifthenelse .)
    LAST            reduce using rule 19 (statement -> ifthenelse .)
    NEXT            reduce using rule 19 (statement -> ifthenelse .)
    IF              reduce using rule 19 (statement -> ifthenelse .)
    PRIVATE         reduce using rule 19 (statement -> ifthenelse .)
    LOCAL           reduce using rule 19 (statement -> ifthenelse .)
    ARRAY           reduce using rule 19 (statement -> ifthenelse .)
    HASH            reduce using rule 19 (statement -> ifthenelse .)
    VARIABLE        reduce using rule 19 (statement -> ifthenelse .)
    BLOCK_ENDS      reduce using rule 19 (statement -> ifthenelse .)
    $end            reduce using rule 19 (statement -> ifthenelse .)


state 21

    (52) forStatement -> FOR . OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block

    OPEN_PARANTHESIS shift and go to state 54


state 22

    (8) statement -> assignment .

    RETURN          reduce using rule 8 (statement -> assignment .)
    IDENTIFIER      reduce using rule 8 (statement -> assignment .)
    WHILE           reduce using rule 8 (statement -> assignment .)
    FOR             reduce using rule 8 (statement -> assignment .)
    PRINT           reduce using rule 8 (statement -> assignment .)
    SUB             reduce using rule 8 (statement -> assignment .)
    LAST            reduce using rule 8 (statement -> assignment .)
    NEXT            reduce using rule 8 (statement -> assignment .)
    IF              reduce using rule 8 (statement -> assignment .)
    PRIVATE         reduce using rule 8 (statement -> assignment .)
    LOCAL           reduce using rule 8 (statement -> assignment .)
    ARRAY           reduce using rule 8 (statement -> assignment .)
    HASH            reduce using rule 8 (statement -> assignment .)
    VARIABLE        reduce using rule 8 (statement -> assignment .)
    BLOCK_ENDS      reduce using rule 8 (statement -> assignment .)
    $end            reduce using rule 8 (statement -> assignment .)


state 23

    (12) statement -> whileStatement .

    RETURN          reduce using rule 12 (statement -> whileStatement .)
    IDENTIFIER      reduce using rule 12 (statement -> whileStatement .)
    WHILE           reduce using rule 12 (statement -> whileStatement .)
    FOR             reduce using rule 12 (statement -> whileStatement .)
    PRINT           reduce using rule 12 (statement -> whileStatement .)
    SUB             reduce using rule 12 (statement -> whileStatement .)
    LAST            reduce using rule 12 (statement -> whileStatement .)
    NEXT            reduce using rule 12 (statement -> whileStatement .)
    IF              reduce using rule 12 (statement -> whileStatement .)
    PRIVATE         reduce using rule 12 (statement -> whileStatement .)
    LOCAL           reduce using rule 12 (statement -> whileStatement .)
    ARRAY           reduce using rule 12 (statement -> whileStatement .)
    HASH            reduce using rule 12 (statement -> whileStatement .)
    VARIABLE        reduce using rule 12 (statement -> whileStatement .)
    BLOCK_ENDS      reduce using rule 12 (statement -> whileStatement .)
    $end            reduce using rule 12 (statement -> whileStatement .)


state 24

    (34) assignment -> lefthandside . decList empty assignmenttype expression SEMICOLON
    (35) assignment -> lefthandside . decList CLOSE_PARANTHESIS assignmenttype expression SEMICOLON
    (43) declaration -> lefthandside . decList empty SEMICOLON
    (44) declaration -> lefthandside . decList CLOSE_PARANTHESIS SEMICOLON
    (45) decList -> . COMMA type decList
    (46) decList -> . empty empty empty
    (7) empty -> .

    COMMA           shift and go to state 56
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)

    decList                        shift and go to state 55
    empty                          shift and go to state 57

state 25

    (11) statement -> functionCall .

    RETURN          reduce using rule 11 (statement -> functionCall .)
    IDENTIFIER      reduce using rule 11 (statement -> functionCall .)
    WHILE           reduce using rule 11 (statement -> functionCall .)
    FOR             reduce using rule 11 (statement -> functionCall .)
    PRINT           reduce using rule 11 (statement -> functionCall .)
    SUB             reduce using rule 11 (statement -> functionCall .)
    LAST            reduce using rule 11 (statement -> functionCall .)
    NEXT            reduce using rule 11 (statement -> functionCall .)
    IF              reduce using rule 11 (statement -> functionCall .)
    PRIVATE         reduce using rule 11 (statement -> functionCall .)
    LOCAL           reduce using rule 11 (statement -> functionCall .)
    ARRAY           reduce using rule 11 (statement -> functionCall .)
    HASH            reduce using rule 11 (statement -> functionCall .)
    VARIABLE        reduce using rule 11 (statement -> functionCall .)
    BLOCK_ENDS      reduce using rule 11 (statement -> functionCall .)
    $end            reduce using rule 11 (statement -> functionCall .)


state 26

    (9) statement -> declaration .

    RETURN          reduce using rule 9 (statement -> declaration .)
    IDENTIFIER      reduce using rule 9 (statement -> declaration .)
    WHILE           reduce using rule 9 (statement -> declaration .)
    FOR             reduce using rule 9 (statement -> declaration .)
    PRINT           reduce using rule 9 (statement -> declaration .)
    SUB             reduce using rule 9 (statement -> declaration .)
    LAST            reduce using rule 9 (statement -> declaration .)
    NEXT            reduce using rule 9 (statement -> declaration .)
    IF              reduce using rule 9 (statement -> declaration .)
    PRIVATE         reduce using rule 9 (statement -> declaration .)
    LOCAL           reduce using rule 9 (statement -> declaration .)
    ARRAY           reduce using rule 9 (statement -> declaration .)
    HASH            reduce using rule 9 (statement -> declaration .)
    VARIABLE        reduce using rule 9 (statement -> declaration .)
    BLOCK_ENDS      reduce using rule 9 (statement -> declaration .)
    $end            reduce using rule 9 (statement -> declaration .)


state 27

    (10) statement -> returnStatement .

    RETURN          reduce using rule 10 (statement -> returnStatement .)
    IDENTIFIER      reduce using rule 10 (statement -> returnStatement .)
    WHILE           reduce using rule 10 (statement -> returnStatement .)
    FOR             reduce using rule 10 (statement -> returnStatement .)
    PRINT           reduce using rule 10 (statement -> returnStatement .)
    SUB             reduce using rule 10 (statement -> returnStatement .)
    LAST            reduce using rule 10 (statement -> returnStatement .)
    NEXT            reduce using rule 10 (statement -> returnStatement .)
    IF              reduce using rule 10 (statement -> returnStatement .)
    PRIVATE         reduce using rule 10 (statement -> returnStatement .)
    LOCAL           reduce using rule 10 (statement -> returnStatement .)
    ARRAY           reduce using rule 10 (statement -> returnStatement .)
    HASH            reduce using rule 10 (statement -> returnStatement .)
    VARIABLE        reduce using rule 10 (statement -> returnStatement .)
    BLOCK_ENDS      reduce using rule 10 (statement -> returnStatement .)
    $end            reduce using rule 10 (statement -> returnStatement .)


state 28

    (41) lefthandside -> LOCAL . empty type
    (42) lefthandside -> LOCAL . OPEN_PARANTHESIS type
    (7) empty -> .

    OPEN_PARANTHESIS shift and go to state 58
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)

    empty                          shift and go to state 59

state 29

    (24) ifthen -> IF . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block
    (25) ifthenelse -> IF . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block

    OPEN_PARANTHESIS shift and go to state 60


state 30

    (1) start -> block .

    $end            reduce using rule 1 (start -> block .)


state 31

    (3) block -> BLOCK_BEGIN statements . BLOCK_ENDS

    BLOCK_ENDS      shift and go to state 61


state 32

    (51) whileStatement -> WHILE OPEN_PARANTHESIS . expression CLOSE_PARANTHESIS block
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 62
    empty                          shift and go to state 39

state 33

    (29) printStatement -> PRINT OPEN_PARANTHESIS . string1 CLOSE_PARANTHESIS SEMICOLON
    (31) string1 -> . STRING
    (32) string1 -> . RES_STRING

    STRING          shift and go to state 63
    RES_STRING      shift and go to state 64

    string1                        shift and go to state 65

state 34

    (30) printStatement -> PRINT empty . string1 empty SEMICOLON
    (31) string1 -> . STRING
    (32) string1 -> . RES_STRING

    STRING          shift and go to state 63
    RES_STRING      shift and go to state 64

    string1                        shift and go to state 66

state 35

    (67) term -> OPEN_PARANTHESIS . expression CLOSE_PARANTHESIS
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 67
    empty                          shift and go to state 39

state 36

    (72) expression -> MINUS_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 68
    empty                          shift and go to state 39

state 37

    (74) expression -> NOT_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 69
    empty                          shift and go to state 39

state 38

    (73) expression -> BIT_FLIP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 70
    empty                          shift and go to state 39

state 39

    (63) term -> empty . number empty
    (64) term -> empty . type empty
    (65) term -> empty . variable empty
    (66) term -> empty . string empty
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE empty empty empty
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    NUMBER          shift and go to state 75
    SCI_NOT         shift and go to state 76
    FLOAT           shift and go to state 74
    HEXADECIMAL     shift and go to state 82
    OCTAL           shift and go to state 79
    ARRAY           shift and go to state 84
    HASH            shift and go to state 71
    VARIABLE        shift and go to state 78
    STRING          shift and go to state 80
    RES_STRING      shift and go to state 73

    variable                       shift and go to state 81
    type                           shift and go to state 83
    number                         shift and go to state 77
    string                         shift and go to state 72

state 40

    (76) expression -> DECREMENT_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 85
    empty                          shift and go to state 39

state 41

    (79) expression -> term .

    CLOSE_PARANTHESIS reduce using rule 79 (expression -> term .)
    INCREMENT_OP    reduce using rule 79 (expression -> term .)
    DECREMENT_OP    reduce using rule 79 (expression -> term .)
    OR_STR_OP       reduce using rule 79 (expression -> term .)
    XOR_STR_OP      reduce using rule 79 (expression -> term .)
    AND_STR_OP      reduce using rule 79 (expression -> term .)
    NOT_STR_OP      reduce using rule 79 (expression -> term .)
    COMMA           reduce using rule 79 (expression -> term .)
    ASSOCIATE_OP    reduce using rule 79 (expression -> term .)
    ADV_ASSIGNMENT_OP reduce using rule 79 (expression -> term .)
    ASSIGNMENT_OP   reduce using rule 79 (expression -> term .)
    RANGE_OP        reduce using rule 79 (expression -> term .)
    OR_OP           reduce using rule 79 (expression -> term .)
    AND_OP          reduce using rule 79 (expression -> term .)
    BIT_OR          reduce using rule 79 (expression -> term .)
    BIT_XOR         reduce using rule 79 (expression -> term .)
    BIT_AND         reduce using rule 79 (expression -> term .)
    EQUALS_OP       reduce using rule 79 (expression -> term .)
    NOT_EQUALS_OP   reduce using rule 79 (expression -> term .)
    COMPARE_OP      reduce using rule 79 (expression -> term .)
    GREATER_OP      reduce using rule 79 (expression -> term .)
    LESS_OP         reduce using rule 79 (expression -> term .)
    GREATER_EQUAL_OP reduce using rule 79 (expression -> term .)
    LESS_EQUAL_OP   reduce using rule 79 (expression -> term .)
    BIT_RIGHT_SHIFT reduce using rule 79 (expression -> term .)
    BIT_LEFT_SHIFT  reduce using rule 79 (expression -> term .)
    PLUS_OP         reduce using rule 79 (expression -> term .)
    MINUS_OP        reduce using rule 79 (expression -> term .)
    CONCATENATE     reduce using rule 79 (expression -> term .)
    MULTIPLICATION_OP reduce using rule 79 (expression -> term .)
    DIVISION_OP     reduce using rule 79 (expression -> term .)
    MODULUS_OP      reduce using rule 79 (expression -> term .)
    REP_OP          reduce using rule 79 (expression -> term .)
    SEARCH_MODIFY   reduce using rule 79 (expression -> term .)
    SEARCH_MODIFY_NEG reduce using rule 79 (expression -> term .)
    EXPONENT_OP     reduce using rule 79 (expression -> term .)
    SEMICOLON       reduce using rule 79 (expression -> term .)


state 42

    (75) expression -> INCREMENT_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 86
    empty                          shift and go to state 39

state 43

    (71) expression -> PLUS_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 87
    empty                          shift and go to state 39

state 44

    (33) returnStatement -> RETURN expression . SEMICOLON
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    SEMICOLON       shift and go to state 99
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    OR_STR_OP       shift and go to state 112
    XOR_STR_OP      shift and go to state 107
    AND_STR_OP      shift and go to state 100
    NOT_STR_OP      shift and go to state 94
    COMMA           shift and go to state 103
    ASSOCIATE_OP    shift and go to state 111
    ADV_ASSIGNMENT_OP shift and go to state 119
    ASSIGNMENT_OP   shift and go to state 105
    RANGE_OP        shift and go to state 96
    OR_OP           shift and go to state 101
    AND_OP          shift and go to state 113
    BIT_OR          shift and go to state 120
    BIT_XOR         shift and go to state 97
    BIT_AND         shift and go to state 108
    EQUALS_OP       shift and go to state 90
    NOT_EQUALS_OP   shift and go to state 92
    COMPARE_OP      shift and go to state 91
    GREATER_OP      shift and go to state 123
    LESS_OP         shift and go to state 102
    GREATER_EQUAL_OP shift and go to state 106
    LESS_EQUAL_OP   shift and go to state 89
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93


state 45

    (28) functionStatement -> SUB IDENTIFIER . block
    (3) block -> . BLOCK_BEGIN statements BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 4

    block                          shift and go to state 124

state 46

    (26) lastStatement -> LAST SEMICOLON .

    RETURN          reduce using rule 26 (lastStatement -> LAST SEMICOLON .)
    IDENTIFIER      reduce using rule 26 (lastStatement -> LAST SEMICOLON .)
    WHILE           reduce using rule 26 (lastStatement -> LAST SEMICOLON .)
    FOR             reduce using rule 26 (lastStatement -> LAST SEMICOLON .)
    PRINT           reduce using rule 26 (lastStatement -> LAST SEMICOLON .)
    SUB             reduce using rule 26 (lastStatement -> LAST SEMICOLON .)
    LAST            reduce using rule 26 (lastStatement -> LAST SEMICOLON .)
    NEXT            reduce using rule 26 (lastStatement -> LAST SEMICOLON .)
    IF              reduce using rule 26 (lastStatement -> LAST SEMICOLON .)
    PRIVATE         reduce using rule 26 (lastStatement -> LAST SEMICOLON .)
    LOCAL           reduce using rule 26 (lastStatement -> LAST SEMICOLON .)
    ARRAY           reduce using rule 26 (lastStatement -> LAST SEMICOLON .)
    HASH            reduce using rule 26 (lastStatement -> LAST SEMICOLON .)
    VARIABLE        reduce using rule 26 (lastStatement -> LAST SEMICOLON .)
    $end            reduce using rule 26 (lastStatement -> LAST SEMICOLON .)
    BLOCK_ENDS      reduce using rule 26 (lastStatement -> LAST SEMICOLON .)


state 47

    (38) lefthandside -> PRIVATE empty . type
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE empty empty empty
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    ARRAY           shift and go to state 84
    HASH            shift and go to state 71
    VARIABLE        shift and go to state 78

    variable                       shift and go to state 125
    type                           shift and go to state 126

state 48

    (40) lefthandside -> PRIVATE OPEN_PARANTHESIS . type
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE empty empty empty
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    ARRAY           shift and go to state 84
    HASH            shift and go to state 71
    VARIABLE        shift and go to state 78

    variable                       shift and go to state 125
    type                           shift and go to state 127

state 49

    (27) nextStatement -> NEXT SEMICOLON .

    RETURN          reduce using rule 27 (nextStatement -> NEXT SEMICOLON .)
    IDENTIFIER      reduce using rule 27 (nextStatement -> NEXT SEMICOLON .)
    WHILE           reduce using rule 27 (nextStatement -> NEXT SEMICOLON .)
    FOR             reduce using rule 27 (nextStatement -> NEXT SEMICOLON .)
    PRINT           reduce using rule 27 (nextStatement -> NEXT SEMICOLON .)
    SUB             reduce using rule 27 (nextStatement -> NEXT SEMICOLON .)
    LAST            reduce using rule 27 (nextStatement -> NEXT SEMICOLON .)
    NEXT            reduce using rule 27 (nextStatement -> NEXT SEMICOLON .)
    IF              reduce using rule 27 (nextStatement -> NEXT SEMICOLON .)
    PRIVATE         reduce using rule 27 (nextStatement -> NEXT SEMICOLON .)
    LOCAL           reduce using rule 27 (nextStatement -> NEXT SEMICOLON .)
    ARRAY           reduce using rule 27 (nextStatement -> NEXT SEMICOLON .)
    HASH            reduce using rule 27 (nextStatement -> NEXT SEMICOLON .)
    VARIABLE        reduce using rule 27 (nextStatement -> NEXT SEMICOLON .)
    $end            reduce using rule 27 (nextStatement -> NEXT SEMICOLON .)
    BLOCK_ENDS      reduce using rule 27 (nextStatement -> NEXT SEMICOLON .)


state 50

    (4) statements -> statement statements .

    BLOCK_ENDS      reduce using rule 4 (statements -> statement statements .)
    $end            reduce using rule 4 (statements -> statement statements .)


state 51

    (5) statements -> statement empty .
    (6) statements -> empty . empty
    (39) lefthandside -> empty . empty type
    (7) empty -> .

  ! reduce/reduce conflict for $end resolved using rule 5 (statements -> statement empty .)
  ! reduce/reduce conflict for BLOCK_ENDS resolved using rule 5 (statements -> statement empty .)
    BLOCK_ENDS      reduce using rule 5 (statements -> statement empty .)
    $end            reduce using rule 5 (statements -> statement empty .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)

  ! $end            [ reduce using rule 7 (empty -> .) ]
  ! BLOCK_ENDS      [ reduce using rule 7 (empty -> .) ]

    empty                          shift and go to state 53

state 52

    (47) functionCall -> IDENTIFIER OPEN_PARANTHESIS . parameters CLOSE_PARANTHESIS
    (48) parameters -> . expression COMMA parameters
    (49) parameters -> . expression empty empty
    (50) parameters -> . empty empty empty
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 35

    term                           shift and go to state 41
    parameters                     shift and go to state 128
    expression                     shift and go to state 130
    empty                          shift and go to state 129

state 53

    (6) statements -> empty empty .
    (39) lefthandside -> empty empty . type
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE empty empty empty
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    BLOCK_ENDS      reduce using rule 6 (statements -> empty empty .)
    $end            reduce using rule 6 (statements -> empty empty .)
    ARRAY           shift and go to state 84
    HASH            shift and go to state 71
    VARIABLE        shift and go to state 78

    variable                       shift and go to state 125
    type                           shift and go to state 131

state 54

    (52) forStatement -> FOR OPEN_PARANTHESIS . expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 132
    empty                          shift and go to state 39

state 55

    (34) assignment -> lefthandside decList . empty assignmenttype expression SEMICOLON
    (35) assignment -> lefthandside decList . CLOSE_PARANTHESIS assignmenttype expression SEMICOLON
    (43) declaration -> lefthandside decList . empty SEMICOLON
    (44) declaration -> lefthandside decList . CLOSE_PARANTHESIS SEMICOLON
    (7) empty -> .

    CLOSE_PARANTHESIS shift and go to state 133
    SEMICOLON       reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)

    empty                          shift and go to state 134

state 56

    (45) decList -> COMMA . type decList
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE empty empty empty
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    ARRAY           shift and go to state 84
    HASH            shift and go to state 71
    VARIABLE        shift and go to state 78

    variable                       shift and go to state 125
    type                           shift and go to state 135

state 57

    (46) decList -> empty . empty empty
    (7) empty -> .

    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)

    empty                          shift and go to state 136

state 58

    (42) lefthandside -> LOCAL OPEN_PARANTHESIS . type
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE empty empty empty
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    ARRAY           shift and go to state 84
    HASH            shift and go to state 71
    VARIABLE        shift and go to state 78

    variable                       shift and go to state 125
    type                           shift and go to state 137

state 59

    (41) lefthandside -> LOCAL empty . type
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE empty empty empty
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS

    ARRAY           shift and go to state 84
    HASH            shift and go to state 71
    VARIABLE        shift and go to state 78

    variable                       shift and go to state 125
    type                           shift and go to state 138

state 60

    (24) ifthen -> IF OPEN_PARANTHESIS . expression CLOSE_PARANTHESIS block
    (25) ifthenelse -> IF OPEN_PARANTHESIS . expression CLOSE_PARANTHESIS block ELSE block
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 139
    empty                          shift and go to state 39

state 61

    (3) block -> BLOCK_BEGIN statements BLOCK_ENDS .

    ELSE            reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    RETURN          reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    IDENTIFIER      reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    WHILE           reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    FOR             reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    PRINT           reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    SUB             reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    LAST            reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    NEXT            reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    IF              reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    PRIVATE         reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    LOCAL           reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    ARRAY           reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    HASH            reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    VARIABLE        reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    $end            reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)
    BLOCK_ENDS      reduce using rule 3 (block -> BLOCK_BEGIN statements BLOCK_ENDS .)


state 62

    (51) whileStatement -> WHILE OPEN_PARANTHESIS expression . CLOSE_PARANTHESIS block
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS shift and go to state 140
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    OR_STR_OP       shift and go to state 112
    XOR_STR_OP      shift and go to state 107
    AND_STR_OP      shift and go to state 100
    NOT_STR_OP      shift and go to state 94
    COMMA           shift and go to state 103
    ASSOCIATE_OP    shift and go to state 111
    ADV_ASSIGNMENT_OP shift and go to state 119
    ASSIGNMENT_OP   shift and go to state 105
    RANGE_OP        shift and go to state 96
    OR_OP           shift and go to state 101
    AND_OP          shift and go to state 113
    BIT_OR          shift and go to state 120
    BIT_XOR         shift and go to state 97
    BIT_AND         shift and go to state 108
    EQUALS_OP       shift and go to state 90
    NOT_EQUALS_OP   shift and go to state 92
    COMPARE_OP      shift and go to state 91
    GREATER_OP      shift and go to state 123
    LESS_OP         shift and go to state 102
    GREATER_EQUAL_OP shift and go to state 106
    LESS_EQUAL_OP   shift and go to state 89
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93


state 63

    (31) string1 -> STRING .

    SEMICOLON       reduce using rule 31 (string1 -> STRING .)
    CLOSE_PARANTHESIS reduce using rule 31 (string1 -> STRING .)


state 64

    (32) string1 -> RES_STRING .

    SEMICOLON       reduce using rule 32 (string1 -> RES_STRING .)
    CLOSE_PARANTHESIS reduce using rule 32 (string1 -> RES_STRING .)


state 65

    (29) printStatement -> PRINT OPEN_PARANTHESIS string1 . CLOSE_PARANTHESIS SEMICOLON

    CLOSE_PARANTHESIS shift and go to state 141


state 66

    (30) printStatement -> PRINT empty string1 . empty SEMICOLON
    (7) empty -> .

    SEMICOLON       reduce using rule 7 (empty -> .)

    empty                          shift and go to state 142

state 67

    (67) term -> OPEN_PARANTHESIS expression . CLOSE_PARANTHESIS
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS shift and go to state 143
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    OR_STR_OP       shift and go to state 112
    XOR_STR_OP      shift and go to state 107
    AND_STR_OP      shift and go to state 100
    NOT_STR_OP      shift and go to state 94
    COMMA           shift and go to state 103
    ASSOCIATE_OP    shift and go to state 111
    ADV_ASSIGNMENT_OP shift and go to state 119
    ASSIGNMENT_OP   shift and go to state 105
    RANGE_OP        shift and go to state 96
    OR_OP           shift and go to state 101
    AND_OP          shift and go to state 113
    BIT_OR          shift and go to state 120
    BIT_XOR         shift and go to state 97
    BIT_AND         shift and go to state 108
    EQUALS_OP       shift and go to state 90
    NOT_EQUALS_OP   shift and go to state 92
    COMPARE_OP      shift and go to state 91
    GREATER_OP      shift and go to state 123
    LESS_OP         shift and go to state 102
    GREATER_EQUAL_OP shift and go to state 106
    LESS_EQUAL_OP   shift and go to state 89
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93


state 68

    (72) expression -> MINUS_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 72 (expression -> MINUS_OP expression .)
    OR_STR_OP       reduce using rule 72 (expression -> MINUS_OP expression .)
    XOR_STR_OP      reduce using rule 72 (expression -> MINUS_OP expression .)
    AND_STR_OP      reduce using rule 72 (expression -> MINUS_OP expression .)
    NOT_STR_OP      reduce using rule 72 (expression -> MINUS_OP expression .)
    COMMA           reduce using rule 72 (expression -> MINUS_OP expression .)
    ASSOCIATE_OP    reduce using rule 72 (expression -> MINUS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 72 (expression -> MINUS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 72 (expression -> MINUS_OP expression .)
    RANGE_OP        reduce using rule 72 (expression -> MINUS_OP expression .)
    OR_OP           reduce using rule 72 (expression -> MINUS_OP expression .)
    AND_OP          reduce using rule 72 (expression -> MINUS_OP expression .)
    BIT_OR          reduce using rule 72 (expression -> MINUS_OP expression .)
    BIT_XOR         reduce using rule 72 (expression -> MINUS_OP expression .)
    BIT_AND         reduce using rule 72 (expression -> MINUS_OP expression .)
    EQUALS_OP       reduce using rule 72 (expression -> MINUS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 72 (expression -> MINUS_OP expression .)
    COMPARE_OP      reduce using rule 72 (expression -> MINUS_OP expression .)
    GREATER_OP      reduce using rule 72 (expression -> MINUS_OP expression .)
    LESS_OP         reduce using rule 72 (expression -> MINUS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 72 (expression -> MINUS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 72 (expression -> MINUS_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 72 (expression -> MINUS_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 72 (expression -> MINUS_OP expression .)
    PLUS_OP         reduce using rule 72 (expression -> MINUS_OP expression .)
    MINUS_OP        reduce using rule 72 (expression -> MINUS_OP expression .)
    CONCATENATE     reduce using rule 72 (expression -> MINUS_OP expression .)
    MULTIPLICATION_OP reduce using rule 72 (expression -> MINUS_OP expression .)
    DIVISION_OP     reduce using rule 72 (expression -> MINUS_OP expression .)
    MODULUS_OP      reduce using rule 72 (expression -> MINUS_OP expression .)
    REP_OP          reduce using rule 72 (expression -> MINUS_OP expression .)
    SEARCH_MODIFY   reduce using rule 72 (expression -> MINUS_OP expression .)
    SEARCH_MODIFY_NEG reduce using rule 72 (expression -> MINUS_OP expression .)
    SEMICOLON       reduce using rule 72 (expression -> MINUS_OP expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 72 (expression -> MINUS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 72 (expression -> MINUS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 72 (expression -> MINUS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]
  ! BIT_OR          [ shift and go to state 120 ]
  ! BIT_XOR         [ shift and go to state 97 ]
  ! BIT_AND         [ shift and go to state 108 ]
  ! EQUALS_OP       [ shift and go to state 90 ]
  ! NOT_EQUALS_OP   [ shift and go to state 92 ]
  ! COMPARE_OP      [ shift and go to state 91 ]
  ! GREATER_OP      [ shift and go to state 123 ]
  ! LESS_OP         [ shift and go to state 102 ]
  ! GREATER_EQUAL_OP [ shift and go to state 106 ]
  ! LESS_EQUAL_OP   [ shift and go to state 89 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 118 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 114 ]
  ! PLUS_OP         [ shift and go to state 121 ]
  ! MINUS_OP        [ shift and go to state 98 ]
  ! CONCATENATE     [ shift and go to state 116 ]
  ! MULTIPLICATION_OP [ shift and go to state 109 ]
  ! DIVISION_OP     [ shift and go to state 95 ]
  ! MODULUS_OP      [ shift and go to state 104 ]
  ! REP_OP          [ shift and go to state 115 ]
  ! SEARCH_MODIFY   [ shift and go to state 88 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 122 ]


state 69

    (74) expression -> NOT_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 74 (expression -> NOT_OP expression .)
    OR_STR_OP       reduce using rule 74 (expression -> NOT_OP expression .)
    XOR_STR_OP      reduce using rule 74 (expression -> NOT_OP expression .)
    AND_STR_OP      reduce using rule 74 (expression -> NOT_OP expression .)
    NOT_STR_OP      reduce using rule 74 (expression -> NOT_OP expression .)
    COMMA           reduce using rule 74 (expression -> NOT_OP expression .)
    ASSOCIATE_OP    reduce using rule 74 (expression -> NOT_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 74 (expression -> NOT_OP expression .)
    ASSIGNMENT_OP   reduce using rule 74 (expression -> NOT_OP expression .)
    RANGE_OP        reduce using rule 74 (expression -> NOT_OP expression .)
    OR_OP           reduce using rule 74 (expression -> NOT_OP expression .)
    AND_OP          reduce using rule 74 (expression -> NOT_OP expression .)
    BIT_OR          reduce using rule 74 (expression -> NOT_OP expression .)
    BIT_XOR         reduce using rule 74 (expression -> NOT_OP expression .)
    BIT_AND         reduce using rule 74 (expression -> NOT_OP expression .)
    EQUALS_OP       reduce using rule 74 (expression -> NOT_OP expression .)
    NOT_EQUALS_OP   reduce using rule 74 (expression -> NOT_OP expression .)
    COMPARE_OP      reduce using rule 74 (expression -> NOT_OP expression .)
    GREATER_OP      reduce using rule 74 (expression -> NOT_OP expression .)
    LESS_OP         reduce using rule 74 (expression -> NOT_OP expression .)
    GREATER_EQUAL_OP reduce using rule 74 (expression -> NOT_OP expression .)
    LESS_EQUAL_OP   reduce using rule 74 (expression -> NOT_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 74 (expression -> NOT_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 74 (expression -> NOT_OP expression .)
    PLUS_OP         reduce using rule 74 (expression -> NOT_OP expression .)
    MINUS_OP        reduce using rule 74 (expression -> NOT_OP expression .)
    CONCATENATE     reduce using rule 74 (expression -> NOT_OP expression .)
    MULTIPLICATION_OP reduce using rule 74 (expression -> NOT_OP expression .)
    DIVISION_OP     reduce using rule 74 (expression -> NOT_OP expression .)
    MODULUS_OP      reduce using rule 74 (expression -> NOT_OP expression .)
    REP_OP          reduce using rule 74 (expression -> NOT_OP expression .)
    SEARCH_MODIFY   reduce using rule 74 (expression -> NOT_OP expression .)
    SEARCH_MODIFY_NEG reduce using rule 74 (expression -> NOT_OP expression .)
    SEMICOLON       reduce using rule 74 (expression -> NOT_OP expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 74 (expression -> NOT_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 74 (expression -> NOT_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 74 (expression -> NOT_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]
  ! BIT_OR          [ shift and go to state 120 ]
  ! BIT_XOR         [ shift and go to state 97 ]
  ! BIT_AND         [ shift and go to state 108 ]
  ! EQUALS_OP       [ shift and go to state 90 ]
  ! NOT_EQUALS_OP   [ shift and go to state 92 ]
  ! COMPARE_OP      [ shift and go to state 91 ]
  ! GREATER_OP      [ shift and go to state 123 ]
  ! LESS_OP         [ shift and go to state 102 ]
  ! GREATER_EQUAL_OP [ shift and go to state 106 ]
  ! LESS_EQUAL_OP   [ shift and go to state 89 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 118 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 114 ]
  ! PLUS_OP         [ shift and go to state 121 ]
  ! MINUS_OP        [ shift and go to state 98 ]
  ! CONCATENATE     [ shift and go to state 116 ]
  ! MULTIPLICATION_OP [ shift and go to state 109 ]
  ! DIVISION_OP     [ shift and go to state 95 ]
  ! MODULUS_OP      [ shift and go to state 104 ]
  ! REP_OP          [ shift and go to state 115 ]
  ! SEARCH_MODIFY   [ shift and go to state 88 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 122 ]


state 70

    (73) expression -> BIT_FLIP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 73 (expression -> BIT_FLIP expression .)
    OR_STR_OP       reduce using rule 73 (expression -> BIT_FLIP expression .)
    XOR_STR_OP      reduce using rule 73 (expression -> BIT_FLIP expression .)
    AND_STR_OP      reduce using rule 73 (expression -> BIT_FLIP expression .)
    NOT_STR_OP      reduce using rule 73 (expression -> BIT_FLIP expression .)
    COMMA           reduce using rule 73 (expression -> BIT_FLIP expression .)
    ASSOCIATE_OP    reduce using rule 73 (expression -> BIT_FLIP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 73 (expression -> BIT_FLIP expression .)
    ASSIGNMENT_OP   reduce using rule 73 (expression -> BIT_FLIP expression .)
    RANGE_OP        reduce using rule 73 (expression -> BIT_FLIP expression .)
    OR_OP           reduce using rule 73 (expression -> BIT_FLIP expression .)
    AND_OP          reduce using rule 73 (expression -> BIT_FLIP expression .)
    BIT_OR          reduce using rule 73 (expression -> BIT_FLIP expression .)
    BIT_XOR         reduce using rule 73 (expression -> BIT_FLIP expression .)
    BIT_AND         reduce using rule 73 (expression -> BIT_FLIP expression .)
    EQUALS_OP       reduce using rule 73 (expression -> BIT_FLIP expression .)
    NOT_EQUALS_OP   reduce using rule 73 (expression -> BIT_FLIP expression .)
    COMPARE_OP      reduce using rule 73 (expression -> BIT_FLIP expression .)
    GREATER_OP      reduce using rule 73 (expression -> BIT_FLIP expression .)
    LESS_OP         reduce using rule 73 (expression -> BIT_FLIP expression .)
    GREATER_EQUAL_OP reduce using rule 73 (expression -> BIT_FLIP expression .)
    LESS_EQUAL_OP   reduce using rule 73 (expression -> BIT_FLIP expression .)
    BIT_RIGHT_SHIFT reduce using rule 73 (expression -> BIT_FLIP expression .)
    BIT_LEFT_SHIFT  reduce using rule 73 (expression -> BIT_FLIP expression .)
    PLUS_OP         reduce using rule 73 (expression -> BIT_FLIP expression .)
    MINUS_OP        reduce using rule 73 (expression -> BIT_FLIP expression .)
    CONCATENATE     reduce using rule 73 (expression -> BIT_FLIP expression .)
    MULTIPLICATION_OP reduce using rule 73 (expression -> BIT_FLIP expression .)
    DIVISION_OP     reduce using rule 73 (expression -> BIT_FLIP expression .)
    MODULUS_OP      reduce using rule 73 (expression -> BIT_FLIP expression .)
    REP_OP          reduce using rule 73 (expression -> BIT_FLIP expression .)
    SEARCH_MODIFY   reduce using rule 73 (expression -> BIT_FLIP expression .)
    SEARCH_MODIFY_NEG reduce using rule 73 (expression -> BIT_FLIP expression .)
    SEMICOLON       reduce using rule 73 (expression -> BIT_FLIP expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 73 (expression -> BIT_FLIP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 73 (expression -> BIT_FLIP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 73 (expression -> BIT_FLIP expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]
  ! BIT_OR          [ shift and go to state 120 ]
  ! BIT_XOR         [ shift and go to state 97 ]
  ! BIT_AND         [ shift and go to state 108 ]
  ! EQUALS_OP       [ shift and go to state 90 ]
  ! NOT_EQUALS_OP   [ shift and go to state 92 ]
  ! COMPARE_OP      [ shift and go to state 91 ]
  ! GREATER_OP      [ shift and go to state 123 ]
  ! LESS_OP         [ shift and go to state 102 ]
  ! GREATER_EQUAL_OP [ shift and go to state 106 ]
  ! LESS_EQUAL_OP   [ shift and go to state 89 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 118 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 114 ]
  ! PLUS_OP         [ shift and go to state 121 ]
  ! MINUS_OP        [ shift and go to state 98 ]
  ! CONCATENATE     [ shift and go to state 116 ]
  ! MULTIPLICATION_OP [ shift and go to state 109 ]
  ! DIVISION_OP     [ shift and go to state 95 ]
  ! MODULUS_OP      [ shift and go to state 104 ]
  ! REP_OP          [ shift and go to state 115 ]
  ! SEARCH_MODIFY   [ shift and go to state 88 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 122 ]


state 71

    (69) type -> HASH .

    COMMA           reduce using rule 69 (type -> HASH .)
    CLOSE_PARANTHESIS reduce using rule 69 (type -> HASH .)
    SEMICOLON       reduce using rule 69 (type -> HASH .)
    ADV_ASSIGNMENT_OP reduce using rule 69 (type -> HASH .)
    ASSIGNMENT_OP   reduce using rule 69 (type -> HASH .)
    INCREMENT_OP    reduce using rule 69 (type -> HASH .)
    DECREMENT_OP    reduce using rule 69 (type -> HASH .)
    OR_STR_OP       reduce using rule 69 (type -> HASH .)
    XOR_STR_OP      reduce using rule 69 (type -> HASH .)
    AND_STR_OP      reduce using rule 69 (type -> HASH .)
    NOT_STR_OP      reduce using rule 69 (type -> HASH .)
    ASSOCIATE_OP    reduce using rule 69 (type -> HASH .)
    RANGE_OP        reduce using rule 69 (type -> HASH .)
    OR_OP           reduce using rule 69 (type -> HASH .)
    AND_OP          reduce using rule 69 (type -> HASH .)
    BIT_OR          reduce using rule 69 (type -> HASH .)
    BIT_XOR         reduce using rule 69 (type -> HASH .)
    BIT_AND         reduce using rule 69 (type -> HASH .)
    EQUALS_OP       reduce using rule 69 (type -> HASH .)
    NOT_EQUALS_OP   reduce using rule 69 (type -> HASH .)
    COMPARE_OP      reduce using rule 69 (type -> HASH .)
    GREATER_OP      reduce using rule 69 (type -> HASH .)
    LESS_OP         reduce using rule 69 (type -> HASH .)
    GREATER_EQUAL_OP reduce using rule 69 (type -> HASH .)
    LESS_EQUAL_OP   reduce using rule 69 (type -> HASH .)
    BIT_RIGHT_SHIFT reduce using rule 69 (type -> HASH .)
    BIT_LEFT_SHIFT  reduce using rule 69 (type -> HASH .)
    PLUS_OP         reduce using rule 69 (type -> HASH .)
    MINUS_OP        reduce using rule 69 (type -> HASH .)
    CONCATENATE     reduce using rule 69 (type -> HASH .)
    MULTIPLICATION_OP reduce using rule 69 (type -> HASH .)
    DIVISION_OP     reduce using rule 69 (type -> HASH .)
    MODULUS_OP      reduce using rule 69 (type -> HASH .)
    REP_OP          reduce using rule 69 (type -> HASH .)
    SEARCH_MODIFY   reduce using rule 69 (type -> HASH .)
    SEARCH_MODIFY_NEG reduce using rule 69 (type -> HASH .)
    EXPONENT_OP     reduce using rule 69 (type -> HASH .)


state 72

    (66) term -> empty string . empty
    (7) empty -> .

    SEMICOLON       reduce using rule 7 (empty -> .)
    INCREMENT_OP    reduce using rule 7 (empty -> .)
    DECREMENT_OP    reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    PLUS_OP         reduce using rule 7 (empty -> .)
    MINUS_OP        reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)

    empty                          shift and go to state 144

state 73

    (54) string -> RES_STRING .

    SEMICOLON       reduce using rule 54 (string -> RES_STRING .)
    INCREMENT_OP    reduce using rule 54 (string -> RES_STRING .)
    DECREMENT_OP    reduce using rule 54 (string -> RES_STRING .)
    OR_STR_OP       reduce using rule 54 (string -> RES_STRING .)
    XOR_STR_OP      reduce using rule 54 (string -> RES_STRING .)
    AND_STR_OP      reduce using rule 54 (string -> RES_STRING .)
    NOT_STR_OP      reduce using rule 54 (string -> RES_STRING .)
    COMMA           reduce using rule 54 (string -> RES_STRING .)
    ASSOCIATE_OP    reduce using rule 54 (string -> RES_STRING .)
    ADV_ASSIGNMENT_OP reduce using rule 54 (string -> RES_STRING .)
    ASSIGNMENT_OP   reduce using rule 54 (string -> RES_STRING .)
    RANGE_OP        reduce using rule 54 (string -> RES_STRING .)
    OR_OP           reduce using rule 54 (string -> RES_STRING .)
    AND_OP          reduce using rule 54 (string -> RES_STRING .)
    BIT_OR          reduce using rule 54 (string -> RES_STRING .)
    BIT_XOR         reduce using rule 54 (string -> RES_STRING .)
    BIT_AND         reduce using rule 54 (string -> RES_STRING .)
    EQUALS_OP       reduce using rule 54 (string -> RES_STRING .)
    NOT_EQUALS_OP   reduce using rule 54 (string -> RES_STRING .)
    COMPARE_OP      reduce using rule 54 (string -> RES_STRING .)
    GREATER_OP      reduce using rule 54 (string -> RES_STRING .)
    LESS_OP         reduce using rule 54 (string -> RES_STRING .)
    GREATER_EQUAL_OP reduce using rule 54 (string -> RES_STRING .)
    LESS_EQUAL_OP   reduce using rule 54 (string -> RES_STRING .)
    BIT_RIGHT_SHIFT reduce using rule 54 (string -> RES_STRING .)
    BIT_LEFT_SHIFT  reduce using rule 54 (string -> RES_STRING .)
    PLUS_OP         reduce using rule 54 (string -> RES_STRING .)
    MINUS_OP        reduce using rule 54 (string -> RES_STRING .)
    CONCATENATE     reduce using rule 54 (string -> RES_STRING .)
    MULTIPLICATION_OP reduce using rule 54 (string -> RES_STRING .)
    DIVISION_OP     reduce using rule 54 (string -> RES_STRING .)
    MODULUS_OP      reduce using rule 54 (string -> RES_STRING .)
    REP_OP          reduce using rule 54 (string -> RES_STRING .)
    SEARCH_MODIFY   reduce using rule 54 (string -> RES_STRING .)
    SEARCH_MODIFY_NEG reduce using rule 54 (string -> RES_STRING .)
    EXPONENT_OP     reduce using rule 54 (string -> RES_STRING .)
    CLOSE_PARANTHESIS reduce using rule 54 (string -> RES_STRING .)
    BLOCK_ENDS      reduce using rule 54 (string -> RES_STRING .)


state 74

    (57) number -> FLOAT .

    COMMA           reduce using rule 57 (number -> FLOAT .)
    INCREMENT_OP    reduce using rule 57 (number -> FLOAT .)
    DECREMENT_OP    reduce using rule 57 (number -> FLOAT .)
    OR_STR_OP       reduce using rule 57 (number -> FLOAT .)
    XOR_STR_OP      reduce using rule 57 (number -> FLOAT .)
    AND_STR_OP      reduce using rule 57 (number -> FLOAT .)
    NOT_STR_OP      reduce using rule 57 (number -> FLOAT .)
    ASSOCIATE_OP    reduce using rule 57 (number -> FLOAT .)
    ADV_ASSIGNMENT_OP reduce using rule 57 (number -> FLOAT .)
    ASSIGNMENT_OP   reduce using rule 57 (number -> FLOAT .)
    RANGE_OP        reduce using rule 57 (number -> FLOAT .)
    OR_OP           reduce using rule 57 (number -> FLOAT .)
    AND_OP          reduce using rule 57 (number -> FLOAT .)
    BIT_OR          reduce using rule 57 (number -> FLOAT .)
    BIT_XOR         reduce using rule 57 (number -> FLOAT .)
    BIT_AND         reduce using rule 57 (number -> FLOAT .)
    EQUALS_OP       reduce using rule 57 (number -> FLOAT .)
    NOT_EQUALS_OP   reduce using rule 57 (number -> FLOAT .)
    COMPARE_OP      reduce using rule 57 (number -> FLOAT .)
    GREATER_OP      reduce using rule 57 (number -> FLOAT .)
    LESS_OP         reduce using rule 57 (number -> FLOAT .)
    GREATER_EQUAL_OP reduce using rule 57 (number -> FLOAT .)
    LESS_EQUAL_OP   reduce using rule 57 (number -> FLOAT .)
    BIT_RIGHT_SHIFT reduce using rule 57 (number -> FLOAT .)
    BIT_LEFT_SHIFT  reduce using rule 57 (number -> FLOAT .)
    PLUS_OP         reduce using rule 57 (number -> FLOAT .)
    MINUS_OP        reduce using rule 57 (number -> FLOAT .)
    CONCATENATE     reduce using rule 57 (number -> FLOAT .)
    MULTIPLICATION_OP reduce using rule 57 (number -> FLOAT .)
    DIVISION_OP     reduce using rule 57 (number -> FLOAT .)
    MODULUS_OP      reduce using rule 57 (number -> FLOAT .)
    REP_OP          reduce using rule 57 (number -> FLOAT .)
    SEARCH_MODIFY   reduce using rule 57 (number -> FLOAT .)
    SEARCH_MODIFY_NEG reduce using rule 57 (number -> FLOAT .)
    EXPONENT_OP     reduce using rule 57 (number -> FLOAT .)
    CLOSE_PARANTHESIS reduce using rule 57 (number -> FLOAT .)
    SEMICOLON       reduce using rule 57 (number -> FLOAT .)


state 75

    (55) number -> NUMBER .

    COMMA           reduce using rule 55 (number -> NUMBER .)
    INCREMENT_OP    reduce using rule 55 (number -> NUMBER .)
    DECREMENT_OP    reduce using rule 55 (number -> NUMBER .)
    OR_STR_OP       reduce using rule 55 (number -> NUMBER .)
    XOR_STR_OP      reduce using rule 55 (number -> NUMBER .)
    AND_STR_OP      reduce using rule 55 (number -> NUMBER .)
    NOT_STR_OP      reduce using rule 55 (number -> NUMBER .)
    ASSOCIATE_OP    reduce using rule 55 (number -> NUMBER .)
    ADV_ASSIGNMENT_OP reduce using rule 55 (number -> NUMBER .)
    ASSIGNMENT_OP   reduce using rule 55 (number -> NUMBER .)
    RANGE_OP        reduce using rule 55 (number -> NUMBER .)
    OR_OP           reduce using rule 55 (number -> NUMBER .)
    AND_OP          reduce using rule 55 (number -> NUMBER .)
    BIT_OR          reduce using rule 55 (number -> NUMBER .)
    BIT_XOR         reduce using rule 55 (number -> NUMBER .)
    BIT_AND         reduce using rule 55 (number -> NUMBER .)
    EQUALS_OP       reduce using rule 55 (number -> NUMBER .)
    NOT_EQUALS_OP   reduce using rule 55 (number -> NUMBER .)
    COMPARE_OP      reduce using rule 55 (number -> NUMBER .)
    GREATER_OP      reduce using rule 55 (number -> NUMBER .)
    LESS_OP         reduce using rule 55 (number -> NUMBER .)
    GREATER_EQUAL_OP reduce using rule 55 (number -> NUMBER .)
    LESS_EQUAL_OP   reduce using rule 55 (number -> NUMBER .)
    BIT_RIGHT_SHIFT reduce using rule 55 (number -> NUMBER .)
    BIT_LEFT_SHIFT  reduce using rule 55 (number -> NUMBER .)
    PLUS_OP         reduce using rule 55 (number -> NUMBER .)
    MINUS_OP        reduce using rule 55 (number -> NUMBER .)
    CONCATENATE     reduce using rule 55 (number -> NUMBER .)
    MULTIPLICATION_OP reduce using rule 55 (number -> NUMBER .)
    DIVISION_OP     reduce using rule 55 (number -> NUMBER .)
    MODULUS_OP      reduce using rule 55 (number -> NUMBER .)
    REP_OP          reduce using rule 55 (number -> NUMBER .)
    SEARCH_MODIFY   reduce using rule 55 (number -> NUMBER .)
    SEARCH_MODIFY_NEG reduce using rule 55 (number -> NUMBER .)
    EXPONENT_OP     reduce using rule 55 (number -> NUMBER .)
    CLOSE_PARANTHESIS reduce using rule 55 (number -> NUMBER .)
    SEMICOLON       reduce using rule 55 (number -> NUMBER .)


state 76

    (56) number -> SCI_NOT .

    COMMA           reduce using rule 56 (number -> SCI_NOT .)
    INCREMENT_OP    reduce using rule 56 (number -> SCI_NOT .)
    DECREMENT_OP    reduce using rule 56 (number -> SCI_NOT .)
    OR_STR_OP       reduce using rule 56 (number -> SCI_NOT .)
    XOR_STR_OP      reduce using rule 56 (number -> SCI_NOT .)
    AND_STR_OP      reduce using rule 56 (number -> SCI_NOT .)
    NOT_STR_OP      reduce using rule 56 (number -> SCI_NOT .)
    ASSOCIATE_OP    reduce using rule 56 (number -> SCI_NOT .)
    ADV_ASSIGNMENT_OP reduce using rule 56 (number -> SCI_NOT .)
    ASSIGNMENT_OP   reduce using rule 56 (number -> SCI_NOT .)
    RANGE_OP        reduce using rule 56 (number -> SCI_NOT .)
    OR_OP           reduce using rule 56 (number -> SCI_NOT .)
    AND_OP          reduce using rule 56 (number -> SCI_NOT .)
    BIT_OR          reduce using rule 56 (number -> SCI_NOT .)
    BIT_XOR         reduce using rule 56 (number -> SCI_NOT .)
    BIT_AND         reduce using rule 56 (number -> SCI_NOT .)
    EQUALS_OP       reduce using rule 56 (number -> SCI_NOT .)
    NOT_EQUALS_OP   reduce using rule 56 (number -> SCI_NOT .)
    COMPARE_OP      reduce using rule 56 (number -> SCI_NOT .)
    GREATER_OP      reduce using rule 56 (number -> SCI_NOT .)
    LESS_OP         reduce using rule 56 (number -> SCI_NOT .)
    GREATER_EQUAL_OP reduce using rule 56 (number -> SCI_NOT .)
    LESS_EQUAL_OP   reduce using rule 56 (number -> SCI_NOT .)
    BIT_RIGHT_SHIFT reduce using rule 56 (number -> SCI_NOT .)
    BIT_LEFT_SHIFT  reduce using rule 56 (number -> SCI_NOT .)
    PLUS_OP         reduce using rule 56 (number -> SCI_NOT .)
    MINUS_OP        reduce using rule 56 (number -> SCI_NOT .)
    CONCATENATE     reduce using rule 56 (number -> SCI_NOT .)
    MULTIPLICATION_OP reduce using rule 56 (number -> SCI_NOT .)
    DIVISION_OP     reduce using rule 56 (number -> SCI_NOT .)
    MODULUS_OP      reduce using rule 56 (number -> SCI_NOT .)
    REP_OP          reduce using rule 56 (number -> SCI_NOT .)
    SEARCH_MODIFY   reduce using rule 56 (number -> SCI_NOT .)
    SEARCH_MODIFY_NEG reduce using rule 56 (number -> SCI_NOT .)
    EXPONENT_OP     reduce using rule 56 (number -> SCI_NOT .)
    CLOSE_PARANTHESIS reduce using rule 56 (number -> SCI_NOT .)
    SEMICOLON       reduce using rule 56 (number -> SCI_NOT .)


state 77

    (63) term -> empty number . empty
    (7) empty -> .

    SEMICOLON       reduce using rule 7 (empty -> .)
    INCREMENT_OP    reduce using rule 7 (empty -> .)
    DECREMENT_OP    reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    PLUS_OP         reduce using rule 7 (empty -> .)
    MINUS_OP        reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)

    empty                          shift and go to state 145

state 78

    (60) variable -> VARIABLE . empty empty empty
    (61) variable -> VARIABLE . OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> VARIABLE . BLOCK_BEGIN string BLOCK_ENDS
    (7) empty -> .

    OPEN_BRACKET    shift and go to state 146
    BLOCK_BEGIN     shift and go to state 147
    SEMICOLON       reduce using rule 7 (empty -> .)
    INCREMENT_OP    reduce using rule 7 (empty -> .)
    DECREMENT_OP    reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    PLUS_OP         reduce using rule 7 (empty -> .)
    MINUS_OP        reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)

    empty                          shift and go to state 148

state 79

    (59) number -> OCTAL .

    COMMA           reduce using rule 59 (number -> OCTAL .)
    INCREMENT_OP    reduce using rule 59 (number -> OCTAL .)
    DECREMENT_OP    reduce using rule 59 (number -> OCTAL .)
    OR_STR_OP       reduce using rule 59 (number -> OCTAL .)
    XOR_STR_OP      reduce using rule 59 (number -> OCTAL .)
    AND_STR_OP      reduce using rule 59 (number -> OCTAL .)
    NOT_STR_OP      reduce using rule 59 (number -> OCTAL .)
    ASSOCIATE_OP    reduce using rule 59 (number -> OCTAL .)
    ADV_ASSIGNMENT_OP reduce using rule 59 (number -> OCTAL .)
    ASSIGNMENT_OP   reduce using rule 59 (number -> OCTAL .)
    RANGE_OP        reduce using rule 59 (number -> OCTAL .)
    OR_OP           reduce using rule 59 (number -> OCTAL .)
    AND_OP          reduce using rule 59 (number -> OCTAL .)
    BIT_OR          reduce using rule 59 (number -> OCTAL .)
    BIT_XOR         reduce using rule 59 (number -> OCTAL .)
    BIT_AND         reduce using rule 59 (number -> OCTAL .)
    EQUALS_OP       reduce using rule 59 (number -> OCTAL .)
    NOT_EQUALS_OP   reduce using rule 59 (number -> OCTAL .)
    COMPARE_OP      reduce using rule 59 (number -> OCTAL .)
    GREATER_OP      reduce using rule 59 (number -> OCTAL .)
    LESS_OP         reduce using rule 59 (number -> OCTAL .)
    GREATER_EQUAL_OP reduce using rule 59 (number -> OCTAL .)
    LESS_EQUAL_OP   reduce using rule 59 (number -> OCTAL .)
    BIT_RIGHT_SHIFT reduce using rule 59 (number -> OCTAL .)
    BIT_LEFT_SHIFT  reduce using rule 59 (number -> OCTAL .)
    PLUS_OP         reduce using rule 59 (number -> OCTAL .)
    MINUS_OP        reduce using rule 59 (number -> OCTAL .)
    CONCATENATE     reduce using rule 59 (number -> OCTAL .)
    MULTIPLICATION_OP reduce using rule 59 (number -> OCTAL .)
    DIVISION_OP     reduce using rule 59 (number -> OCTAL .)
    MODULUS_OP      reduce using rule 59 (number -> OCTAL .)
    REP_OP          reduce using rule 59 (number -> OCTAL .)
    SEARCH_MODIFY   reduce using rule 59 (number -> OCTAL .)
    SEARCH_MODIFY_NEG reduce using rule 59 (number -> OCTAL .)
    EXPONENT_OP     reduce using rule 59 (number -> OCTAL .)
    CLOSE_PARANTHESIS reduce using rule 59 (number -> OCTAL .)
    SEMICOLON       reduce using rule 59 (number -> OCTAL .)


state 80

    (53) string -> STRING .

    SEMICOLON       reduce using rule 53 (string -> STRING .)
    INCREMENT_OP    reduce using rule 53 (string -> STRING .)
    DECREMENT_OP    reduce using rule 53 (string -> STRING .)
    OR_STR_OP       reduce using rule 53 (string -> STRING .)
    XOR_STR_OP      reduce using rule 53 (string -> STRING .)
    AND_STR_OP      reduce using rule 53 (string -> STRING .)
    NOT_STR_OP      reduce using rule 53 (string -> STRING .)
    COMMA           reduce using rule 53 (string -> STRING .)
    ASSOCIATE_OP    reduce using rule 53 (string -> STRING .)
    ADV_ASSIGNMENT_OP reduce using rule 53 (string -> STRING .)
    ASSIGNMENT_OP   reduce using rule 53 (string -> STRING .)
    RANGE_OP        reduce using rule 53 (string -> STRING .)
    OR_OP           reduce using rule 53 (string -> STRING .)
    AND_OP          reduce using rule 53 (string -> STRING .)
    BIT_OR          reduce using rule 53 (string -> STRING .)
    BIT_XOR         reduce using rule 53 (string -> STRING .)
    BIT_AND         reduce using rule 53 (string -> STRING .)
    EQUALS_OP       reduce using rule 53 (string -> STRING .)
    NOT_EQUALS_OP   reduce using rule 53 (string -> STRING .)
    COMPARE_OP      reduce using rule 53 (string -> STRING .)
    GREATER_OP      reduce using rule 53 (string -> STRING .)
    LESS_OP         reduce using rule 53 (string -> STRING .)
    GREATER_EQUAL_OP reduce using rule 53 (string -> STRING .)
    LESS_EQUAL_OP   reduce using rule 53 (string -> STRING .)
    BIT_RIGHT_SHIFT reduce using rule 53 (string -> STRING .)
    BIT_LEFT_SHIFT  reduce using rule 53 (string -> STRING .)
    PLUS_OP         reduce using rule 53 (string -> STRING .)
    MINUS_OP        reduce using rule 53 (string -> STRING .)
    CONCATENATE     reduce using rule 53 (string -> STRING .)
    MULTIPLICATION_OP reduce using rule 53 (string -> STRING .)
    DIVISION_OP     reduce using rule 53 (string -> STRING .)
    MODULUS_OP      reduce using rule 53 (string -> STRING .)
    REP_OP          reduce using rule 53 (string -> STRING .)
    SEARCH_MODIFY   reduce using rule 53 (string -> STRING .)
    SEARCH_MODIFY_NEG reduce using rule 53 (string -> STRING .)
    EXPONENT_OP     reduce using rule 53 (string -> STRING .)
    CLOSE_PARANTHESIS reduce using rule 53 (string -> STRING .)
    BLOCK_ENDS      reduce using rule 53 (string -> STRING .)


state 81

    (65) term -> empty variable . empty
    (70) type -> variable .
    (7) empty -> .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for INCREMENT_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for DECREMENT_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for OR_STR_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for XOR_STR_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for AND_STR_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for NOT_STR_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for COMMA resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for ASSOCIATE_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for ADV_ASSIGNMENT_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for ASSIGNMENT_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for RANGE_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for OR_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for AND_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for BIT_OR resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for BIT_XOR resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for BIT_AND resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for EQUALS_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for NOT_EQUALS_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for COMPARE_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for GREATER_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for LESS_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for GREATER_EQUAL_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for LESS_EQUAL_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for BIT_RIGHT_SHIFT resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for BIT_LEFT_SHIFT resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for PLUS_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for MINUS_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for CONCATENATE resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for MULTIPLICATION_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for DIVISION_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for MODULUS_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for REP_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for SEARCH_MODIFY resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for SEARCH_MODIFY_NEG resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for EXPONENT_OP resolved using rule 7 (empty -> .)
  ! reduce/reduce conflict for CLOSE_PARANTHESIS resolved using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    INCREMENT_OP    reduce using rule 7 (empty -> .)
    DECREMENT_OP    reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    PLUS_OP         reduce using rule 7 (empty -> .)
    MINUS_OP        reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)

  ! COMMA           [ reduce using rule 70 (type -> variable .) ]
  ! INCREMENT_OP    [ reduce using rule 70 (type -> variable .) ]
  ! DECREMENT_OP    [ reduce using rule 70 (type -> variable .) ]
  ! OR_STR_OP       [ reduce using rule 70 (type -> variable .) ]
  ! XOR_STR_OP      [ reduce using rule 70 (type -> variable .) ]
  ! AND_STR_OP      [ reduce using rule 70 (type -> variable .) ]
  ! NOT_STR_OP      [ reduce using rule 70 (type -> variable .) ]
  ! ASSOCIATE_OP    [ reduce using rule 70 (type -> variable .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 70 (type -> variable .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 70 (type -> variable .) ]
  ! RANGE_OP        [ reduce using rule 70 (type -> variable .) ]
  ! OR_OP           [ reduce using rule 70 (type -> variable .) ]
  ! AND_OP          [ reduce using rule 70 (type -> variable .) ]
  ! BIT_OR          [ reduce using rule 70 (type -> variable .) ]
  ! BIT_XOR         [ reduce using rule 70 (type -> variable .) ]
  ! BIT_AND         [ reduce using rule 70 (type -> variable .) ]
  ! EQUALS_OP       [ reduce using rule 70 (type -> variable .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 70 (type -> variable .) ]
  ! COMPARE_OP      [ reduce using rule 70 (type -> variable .) ]
  ! GREATER_OP      [ reduce using rule 70 (type -> variable .) ]
  ! LESS_OP         [ reduce using rule 70 (type -> variable .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 70 (type -> variable .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 70 (type -> variable .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 70 (type -> variable .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 70 (type -> variable .) ]
  ! PLUS_OP         [ reduce using rule 70 (type -> variable .) ]
  ! MINUS_OP        [ reduce using rule 70 (type -> variable .) ]
  ! CONCATENATE     [ reduce using rule 70 (type -> variable .) ]
  ! MULTIPLICATION_OP [ reduce using rule 70 (type -> variable .) ]
  ! DIVISION_OP     [ reduce using rule 70 (type -> variable .) ]
  ! MODULUS_OP      [ reduce using rule 70 (type -> variable .) ]
  ! REP_OP          [ reduce using rule 70 (type -> variable .) ]
  ! SEARCH_MODIFY   [ reduce using rule 70 (type -> variable .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 70 (type -> variable .) ]
  ! EXPONENT_OP     [ reduce using rule 70 (type -> variable .) ]
  ! CLOSE_PARANTHESIS [ reduce using rule 70 (type -> variable .) ]
  ! SEMICOLON       [ reduce using rule 70 (type -> variable .) ]

    empty                          shift and go to state 149

state 82

    (58) number -> HEXADECIMAL .

    COMMA           reduce using rule 58 (number -> HEXADECIMAL .)
    INCREMENT_OP    reduce using rule 58 (number -> HEXADECIMAL .)
    DECREMENT_OP    reduce using rule 58 (number -> HEXADECIMAL .)
    OR_STR_OP       reduce using rule 58 (number -> HEXADECIMAL .)
    XOR_STR_OP      reduce using rule 58 (number -> HEXADECIMAL .)
    AND_STR_OP      reduce using rule 58 (number -> HEXADECIMAL .)
    NOT_STR_OP      reduce using rule 58 (number -> HEXADECIMAL .)
    ASSOCIATE_OP    reduce using rule 58 (number -> HEXADECIMAL .)
    ADV_ASSIGNMENT_OP reduce using rule 58 (number -> HEXADECIMAL .)
    ASSIGNMENT_OP   reduce using rule 58 (number -> HEXADECIMAL .)
    RANGE_OP        reduce using rule 58 (number -> HEXADECIMAL .)
    OR_OP           reduce using rule 58 (number -> HEXADECIMAL .)
    AND_OP          reduce using rule 58 (number -> HEXADECIMAL .)
    BIT_OR          reduce using rule 58 (number -> HEXADECIMAL .)
    BIT_XOR         reduce using rule 58 (number -> HEXADECIMAL .)
    BIT_AND         reduce using rule 58 (number -> HEXADECIMAL .)
    EQUALS_OP       reduce using rule 58 (number -> HEXADECIMAL .)
    NOT_EQUALS_OP   reduce using rule 58 (number -> HEXADECIMAL .)
    COMPARE_OP      reduce using rule 58 (number -> HEXADECIMAL .)
    GREATER_OP      reduce using rule 58 (number -> HEXADECIMAL .)
    LESS_OP         reduce using rule 58 (number -> HEXADECIMAL .)
    GREATER_EQUAL_OP reduce using rule 58 (number -> HEXADECIMAL .)
    LESS_EQUAL_OP   reduce using rule 58 (number -> HEXADECIMAL .)
    BIT_RIGHT_SHIFT reduce using rule 58 (number -> HEXADECIMAL .)
    BIT_LEFT_SHIFT  reduce using rule 58 (number -> HEXADECIMAL .)
    PLUS_OP         reduce using rule 58 (number -> HEXADECIMAL .)
    MINUS_OP        reduce using rule 58 (number -> HEXADECIMAL .)
    CONCATENATE     reduce using rule 58 (number -> HEXADECIMAL .)
    MULTIPLICATION_OP reduce using rule 58 (number -> HEXADECIMAL .)
    DIVISION_OP     reduce using rule 58 (number -> HEXADECIMAL .)
    MODULUS_OP      reduce using rule 58 (number -> HEXADECIMAL .)
    REP_OP          reduce using rule 58 (number -> HEXADECIMAL .)
    SEARCH_MODIFY   reduce using rule 58 (number -> HEXADECIMAL .)
    SEARCH_MODIFY_NEG reduce using rule 58 (number -> HEXADECIMAL .)
    EXPONENT_OP     reduce using rule 58 (number -> HEXADECIMAL .)
    CLOSE_PARANTHESIS reduce using rule 58 (number -> HEXADECIMAL .)
    SEMICOLON       reduce using rule 58 (number -> HEXADECIMAL .)


state 83

    (64) term -> empty type . empty
    (7) empty -> .

    SEMICOLON       reduce using rule 7 (empty -> .)
    INCREMENT_OP    reduce using rule 7 (empty -> .)
    DECREMENT_OP    reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    PLUS_OP         reduce using rule 7 (empty -> .)
    MINUS_OP        reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)

    empty                          shift and go to state 150

state 84

    (68) type -> ARRAY .

    COMMA           reduce using rule 68 (type -> ARRAY .)
    CLOSE_PARANTHESIS reduce using rule 68 (type -> ARRAY .)
    SEMICOLON       reduce using rule 68 (type -> ARRAY .)
    ADV_ASSIGNMENT_OP reduce using rule 68 (type -> ARRAY .)
    ASSIGNMENT_OP   reduce using rule 68 (type -> ARRAY .)
    INCREMENT_OP    reduce using rule 68 (type -> ARRAY .)
    DECREMENT_OP    reduce using rule 68 (type -> ARRAY .)
    OR_STR_OP       reduce using rule 68 (type -> ARRAY .)
    XOR_STR_OP      reduce using rule 68 (type -> ARRAY .)
    AND_STR_OP      reduce using rule 68 (type -> ARRAY .)
    NOT_STR_OP      reduce using rule 68 (type -> ARRAY .)
    ASSOCIATE_OP    reduce using rule 68 (type -> ARRAY .)
    RANGE_OP        reduce using rule 68 (type -> ARRAY .)
    OR_OP           reduce using rule 68 (type -> ARRAY .)
    AND_OP          reduce using rule 68 (type -> ARRAY .)
    BIT_OR          reduce using rule 68 (type -> ARRAY .)
    BIT_XOR         reduce using rule 68 (type -> ARRAY .)
    BIT_AND         reduce using rule 68 (type -> ARRAY .)
    EQUALS_OP       reduce using rule 68 (type -> ARRAY .)
    NOT_EQUALS_OP   reduce using rule 68 (type -> ARRAY .)
    COMPARE_OP      reduce using rule 68 (type -> ARRAY .)
    GREATER_OP      reduce using rule 68 (type -> ARRAY .)
    LESS_OP         reduce using rule 68 (type -> ARRAY .)
    GREATER_EQUAL_OP reduce using rule 68 (type -> ARRAY .)
    LESS_EQUAL_OP   reduce using rule 68 (type -> ARRAY .)
    BIT_RIGHT_SHIFT reduce using rule 68 (type -> ARRAY .)
    BIT_LEFT_SHIFT  reduce using rule 68 (type -> ARRAY .)
    PLUS_OP         reduce using rule 68 (type -> ARRAY .)
    MINUS_OP        reduce using rule 68 (type -> ARRAY .)
    CONCATENATE     reduce using rule 68 (type -> ARRAY .)
    MULTIPLICATION_OP reduce using rule 68 (type -> ARRAY .)
    DIVISION_OP     reduce using rule 68 (type -> ARRAY .)
    MODULUS_OP      reduce using rule 68 (type -> ARRAY .)
    REP_OP          reduce using rule 68 (type -> ARRAY .)
    SEARCH_MODIFY   reduce using rule 68 (type -> ARRAY .)
    SEARCH_MODIFY_NEG reduce using rule 68 (type -> ARRAY .)
    EXPONENT_OP     reduce using rule 68 (type -> ARRAY .)


state 85

    (76) expression -> DECREMENT_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 76 (expression -> DECREMENT_OP expression .)
    INCREMENT_OP    reduce using rule 76 (expression -> DECREMENT_OP expression .)
    DECREMENT_OP    reduce using rule 76 (expression -> DECREMENT_OP expression .)
    OR_STR_OP       reduce using rule 76 (expression -> DECREMENT_OP expression .)
    XOR_STR_OP      reduce using rule 76 (expression -> DECREMENT_OP expression .)
    AND_STR_OP      reduce using rule 76 (expression -> DECREMENT_OP expression .)
    NOT_STR_OP      reduce using rule 76 (expression -> DECREMENT_OP expression .)
    COMMA           reduce using rule 76 (expression -> DECREMENT_OP expression .)
    ASSOCIATE_OP    reduce using rule 76 (expression -> DECREMENT_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 76 (expression -> DECREMENT_OP expression .)
    ASSIGNMENT_OP   reduce using rule 76 (expression -> DECREMENT_OP expression .)
    RANGE_OP        reduce using rule 76 (expression -> DECREMENT_OP expression .)
    OR_OP           reduce using rule 76 (expression -> DECREMENT_OP expression .)
    AND_OP          reduce using rule 76 (expression -> DECREMENT_OP expression .)
    BIT_OR          reduce using rule 76 (expression -> DECREMENT_OP expression .)
    BIT_XOR         reduce using rule 76 (expression -> DECREMENT_OP expression .)
    BIT_AND         reduce using rule 76 (expression -> DECREMENT_OP expression .)
    EQUALS_OP       reduce using rule 76 (expression -> DECREMENT_OP expression .)
    NOT_EQUALS_OP   reduce using rule 76 (expression -> DECREMENT_OP expression .)
    COMPARE_OP      reduce using rule 76 (expression -> DECREMENT_OP expression .)
    GREATER_OP      reduce using rule 76 (expression -> DECREMENT_OP expression .)
    LESS_OP         reduce using rule 76 (expression -> DECREMENT_OP expression .)
    GREATER_EQUAL_OP reduce using rule 76 (expression -> DECREMENT_OP expression .)
    LESS_EQUAL_OP   reduce using rule 76 (expression -> DECREMENT_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 76 (expression -> DECREMENT_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 76 (expression -> DECREMENT_OP expression .)
    PLUS_OP         reduce using rule 76 (expression -> DECREMENT_OP expression .)
    MINUS_OP        reduce using rule 76 (expression -> DECREMENT_OP expression .)
    CONCATENATE     reduce using rule 76 (expression -> DECREMENT_OP expression .)
    MULTIPLICATION_OP reduce using rule 76 (expression -> DECREMENT_OP expression .)
    DIVISION_OP     reduce using rule 76 (expression -> DECREMENT_OP expression .)
    MODULUS_OP      reduce using rule 76 (expression -> DECREMENT_OP expression .)
    REP_OP          reduce using rule 76 (expression -> DECREMENT_OP expression .)
    SEARCH_MODIFY   reduce using rule 76 (expression -> DECREMENT_OP expression .)
    SEARCH_MODIFY_NEG reduce using rule 76 (expression -> DECREMENT_OP expression .)
    EXPONENT_OP     reduce using rule 76 (expression -> DECREMENT_OP expression .)
    SEMICOLON       reduce using rule 76 (expression -> DECREMENT_OP expression .)

  ! INCREMENT_OP    [ shift and go to state 117 ]
  ! DECREMENT_OP    [ shift and go to state 110 ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]
  ! BIT_OR          [ shift and go to state 120 ]
  ! BIT_XOR         [ shift and go to state 97 ]
  ! BIT_AND         [ shift and go to state 108 ]
  ! EQUALS_OP       [ shift and go to state 90 ]
  ! NOT_EQUALS_OP   [ shift and go to state 92 ]
  ! COMPARE_OP      [ shift and go to state 91 ]
  ! GREATER_OP      [ shift and go to state 123 ]
  ! LESS_OP         [ shift and go to state 102 ]
  ! GREATER_EQUAL_OP [ shift and go to state 106 ]
  ! LESS_EQUAL_OP   [ shift and go to state 89 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 118 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 114 ]
  ! PLUS_OP         [ shift and go to state 121 ]
  ! MINUS_OP        [ shift and go to state 98 ]
  ! CONCATENATE     [ shift and go to state 116 ]
  ! MULTIPLICATION_OP [ shift and go to state 109 ]
  ! DIVISION_OP     [ shift and go to state 95 ]
  ! MODULUS_OP      [ shift and go to state 104 ]
  ! REP_OP          [ shift and go to state 115 ]
  ! SEARCH_MODIFY   [ shift and go to state 88 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 122 ]
  ! EXPONENT_OP     [ shift and go to state 93 ]


state 86

    (75) expression -> INCREMENT_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 75 (expression -> INCREMENT_OP expression .)
    INCREMENT_OP    reduce using rule 75 (expression -> INCREMENT_OP expression .)
    DECREMENT_OP    reduce using rule 75 (expression -> INCREMENT_OP expression .)
    OR_STR_OP       reduce using rule 75 (expression -> INCREMENT_OP expression .)
    XOR_STR_OP      reduce using rule 75 (expression -> INCREMENT_OP expression .)
    AND_STR_OP      reduce using rule 75 (expression -> INCREMENT_OP expression .)
    NOT_STR_OP      reduce using rule 75 (expression -> INCREMENT_OP expression .)
    COMMA           reduce using rule 75 (expression -> INCREMENT_OP expression .)
    ASSOCIATE_OP    reduce using rule 75 (expression -> INCREMENT_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 75 (expression -> INCREMENT_OP expression .)
    ASSIGNMENT_OP   reduce using rule 75 (expression -> INCREMENT_OP expression .)
    RANGE_OP        reduce using rule 75 (expression -> INCREMENT_OP expression .)
    OR_OP           reduce using rule 75 (expression -> INCREMENT_OP expression .)
    AND_OP          reduce using rule 75 (expression -> INCREMENT_OP expression .)
    BIT_OR          reduce using rule 75 (expression -> INCREMENT_OP expression .)
    BIT_XOR         reduce using rule 75 (expression -> INCREMENT_OP expression .)
    BIT_AND         reduce using rule 75 (expression -> INCREMENT_OP expression .)
    EQUALS_OP       reduce using rule 75 (expression -> INCREMENT_OP expression .)
    NOT_EQUALS_OP   reduce using rule 75 (expression -> INCREMENT_OP expression .)
    COMPARE_OP      reduce using rule 75 (expression -> INCREMENT_OP expression .)
    GREATER_OP      reduce using rule 75 (expression -> INCREMENT_OP expression .)
    LESS_OP         reduce using rule 75 (expression -> INCREMENT_OP expression .)
    GREATER_EQUAL_OP reduce using rule 75 (expression -> INCREMENT_OP expression .)
    LESS_EQUAL_OP   reduce using rule 75 (expression -> INCREMENT_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 75 (expression -> INCREMENT_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 75 (expression -> INCREMENT_OP expression .)
    PLUS_OP         reduce using rule 75 (expression -> INCREMENT_OP expression .)
    MINUS_OP        reduce using rule 75 (expression -> INCREMENT_OP expression .)
    CONCATENATE     reduce using rule 75 (expression -> INCREMENT_OP expression .)
    MULTIPLICATION_OP reduce using rule 75 (expression -> INCREMENT_OP expression .)
    DIVISION_OP     reduce using rule 75 (expression -> INCREMENT_OP expression .)
    MODULUS_OP      reduce using rule 75 (expression -> INCREMENT_OP expression .)
    REP_OP          reduce using rule 75 (expression -> INCREMENT_OP expression .)
    SEARCH_MODIFY   reduce using rule 75 (expression -> INCREMENT_OP expression .)
    SEARCH_MODIFY_NEG reduce using rule 75 (expression -> INCREMENT_OP expression .)
    EXPONENT_OP     reduce using rule 75 (expression -> INCREMENT_OP expression .)
    SEMICOLON       reduce using rule 75 (expression -> INCREMENT_OP expression .)

  ! INCREMENT_OP    [ shift and go to state 117 ]
  ! DECREMENT_OP    [ shift and go to state 110 ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]
  ! BIT_OR          [ shift and go to state 120 ]
  ! BIT_XOR         [ shift and go to state 97 ]
  ! BIT_AND         [ shift and go to state 108 ]
  ! EQUALS_OP       [ shift and go to state 90 ]
  ! NOT_EQUALS_OP   [ shift and go to state 92 ]
  ! COMPARE_OP      [ shift and go to state 91 ]
  ! GREATER_OP      [ shift and go to state 123 ]
  ! LESS_OP         [ shift and go to state 102 ]
  ! GREATER_EQUAL_OP [ shift and go to state 106 ]
  ! LESS_EQUAL_OP   [ shift and go to state 89 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 118 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 114 ]
  ! PLUS_OP         [ shift and go to state 121 ]
  ! MINUS_OP        [ shift and go to state 98 ]
  ! CONCATENATE     [ shift and go to state 116 ]
  ! MULTIPLICATION_OP [ shift and go to state 109 ]
  ! DIVISION_OP     [ shift and go to state 95 ]
  ! MODULUS_OP      [ shift and go to state 104 ]
  ! REP_OP          [ shift and go to state 115 ]
  ! SEARCH_MODIFY   [ shift and go to state 88 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 122 ]
  ! EXPONENT_OP     [ shift and go to state 93 ]


state 87

    (71) expression -> PLUS_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 71 (expression -> PLUS_OP expression .)
    OR_STR_OP       reduce using rule 71 (expression -> PLUS_OP expression .)
    XOR_STR_OP      reduce using rule 71 (expression -> PLUS_OP expression .)
    AND_STR_OP      reduce using rule 71 (expression -> PLUS_OP expression .)
    NOT_STR_OP      reduce using rule 71 (expression -> PLUS_OP expression .)
    COMMA           reduce using rule 71 (expression -> PLUS_OP expression .)
    ASSOCIATE_OP    reduce using rule 71 (expression -> PLUS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 71 (expression -> PLUS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 71 (expression -> PLUS_OP expression .)
    RANGE_OP        reduce using rule 71 (expression -> PLUS_OP expression .)
    OR_OP           reduce using rule 71 (expression -> PLUS_OP expression .)
    AND_OP          reduce using rule 71 (expression -> PLUS_OP expression .)
    BIT_OR          reduce using rule 71 (expression -> PLUS_OP expression .)
    BIT_XOR         reduce using rule 71 (expression -> PLUS_OP expression .)
    BIT_AND         reduce using rule 71 (expression -> PLUS_OP expression .)
    EQUALS_OP       reduce using rule 71 (expression -> PLUS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 71 (expression -> PLUS_OP expression .)
    COMPARE_OP      reduce using rule 71 (expression -> PLUS_OP expression .)
    GREATER_OP      reduce using rule 71 (expression -> PLUS_OP expression .)
    LESS_OP         reduce using rule 71 (expression -> PLUS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 71 (expression -> PLUS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 71 (expression -> PLUS_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 71 (expression -> PLUS_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 71 (expression -> PLUS_OP expression .)
    PLUS_OP         reduce using rule 71 (expression -> PLUS_OP expression .)
    MINUS_OP        reduce using rule 71 (expression -> PLUS_OP expression .)
    CONCATENATE     reduce using rule 71 (expression -> PLUS_OP expression .)
    MULTIPLICATION_OP reduce using rule 71 (expression -> PLUS_OP expression .)
    DIVISION_OP     reduce using rule 71 (expression -> PLUS_OP expression .)
    MODULUS_OP      reduce using rule 71 (expression -> PLUS_OP expression .)
    REP_OP          reduce using rule 71 (expression -> PLUS_OP expression .)
    SEARCH_MODIFY   reduce using rule 71 (expression -> PLUS_OP expression .)
    SEARCH_MODIFY_NEG reduce using rule 71 (expression -> PLUS_OP expression .)
    SEMICOLON       reduce using rule 71 (expression -> PLUS_OP expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 71 (expression -> PLUS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 71 (expression -> PLUS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 71 (expression -> PLUS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]
  ! BIT_OR          [ shift and go to state 120 ]
  ! BIT_XOR         [ shift and go to state 97 ]
  ! BIT_AND         [ shift and go to state 108 ]
  ! EQUALS_OP       [ shift and go to state 90 ]
  ! NOT_EQUALS_OP   [ shift and go to state 92 ]
  ! COMPARE_OP      [ shift and go to state 91 ]
  ! GREATER_OP      [ shift and go to state 123 ]
  ! LESS_OP         [ shift and go to state 102 ]
  ! GREATER_EQUAL_OP [ shift and go to state 106 ]
  ! LESS_EQUAL_OP   [ shift and go to state 89 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 118 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 114 ]
  ! PLUS_OP         [ shift and go to state 121 ]
  ! MINUS_OP        [ shift and go to state 98 ]
  ! CONCATENATE     [ shift and go to state 116 ]
  ! MULTIPLICATION_OP [ shift and go to state 109 ]
  ! DIVISION_OP     [ shift and go to state 95 ]
  ! MODULUS_OP      [ shift and go to state 104 ]
  ! REP_OP          [ shift and go to state 115 ]
  ! SEARCH_MODIFY   [ shift and go to state 88 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 122 ]


state 88

    (110) expression -> expression SEARCH_MODIFY . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 151
    empty                          shift and go to state 39

state 89

    (100) expression -> expression LESS_EQUAL_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 152
    empty                          shift and go to state 39

state 90

    (94) expression -> expression EQUALS_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 153
    empty                          shift and go to state 39

state 91

    (96) expression -> expression COMPARE_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 154
    empty                          shift and go to state 39

state 92

    (95) expression -> expression NOT_EQUALS_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 155
    empty                          shift and go to state 39

state 93

    (112) expression -> expression EXPONENT_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 156
    empty                          shift and go to state 39

state 94

    (83) expression -> expression NOT_STR_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 157
    empty                          shift and go to state 39

state 95

    (107) expression -> expression DIVISION_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 158
    empty                          shift and go to state 39

state 96

    (88) expression -> expression RANGE_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 159
    empty                          shift and go to state 39

state 97

    (92) expression -> expression BIT_XOR . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 160
    empty                          shift and go to state 39

state 98

    (104) expression -> expression MINUS_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 161
    empty                          shift and go to state 39

state 99

    (33) returnStatement -> RETURN expression SEMICOLON .

    RETURN          reduce using rule 33 (returnStatement -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 33 (returnStatement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 33 (returnStatement -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 33 (returnStatement -> RETURN expression SEMICOLON .)
    PRINT           reduce using rule 33 (returnStatement -> RETURN expression SEMICOLON .)
    SUB             reduce using rule 33 (returnStatement -> RETURN expression SEMICOLON .)
    LAST            reduce using rule 33 (returnStatement -> RETURN expression SEMICOLON .)
    NEXT            reduce using rule 33 (returnStatement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 33 (returnStatement -> RETURN expression SEMICOLON .)
    PRIVATE         reduce using rule 33 (returnStatement -> RETURN expression SEMICOLON .)
    LOCAL           reduce using rule 33 (returnStatement -> RETURN expression SEMICOLON .)
    ARRAY           reduce using rule 33 (returnStatement -> RETURN expression SEMICOLON .)
    HASH            reduce using rule 33 (returnStatement -> RETURN expression SEMICOLON .)
    VARIABLE        reduce using rule 33 (returnStatement -> RETURN expression SEMICOLON .)
    $end            reduce using rule 33 (returnStatement -> RETURN expression SEMICOLON .)
    BLOCK_ENDS      reduce using rule 33 (returnStatement -> RETURN expression SEMICOLON .)


state 100

    (82) expression -> expression AND_STR_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 162
    empty                          shift and go to state 39

state 101

    (89) expression -> expression OR_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 163
    empty                          shift and go to state 39

state 102

    (98) expression -> expression LESS_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 164
    empty                          shift and go to state 39

state 103

    (84) expression -> expression COMMA . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 165
    empty                          shift and go to state 39

state 104

    (108) expression -> expression MODULUS_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 166
    empty                          shift and go to state 39

state 105

    (87) expression -> expression ASSIGNMENT_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 167
    empty                          shift and go to state 39

state 106

    (99) expression -> expression GREATER_EQUAL_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 168
    empty                          shift and go to state 39

state 107

    (81) expression -> expression XOR_STR_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 169
    empty                          shift and go to state 39

state 108

    (93) expression -> expression BIT_AND . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 170
    empty                          shift and go to state 39

state 109

    (106) expression -> expression MULTIPLICATION_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 171
    empty                          shift and go to state 39

state 110

    (78) expression -> expression DECREMENT_OP .

    CLOSE_PARANTHESIS reduce using rule 78 (expression -> expression DECREMENT_OP .)
    INCREMENT_OP    reduce using rule 78 (expression -> expression DECREMENT_OP .)
    DECREMENT_OP    reduce using rule 78 (expression -> expression DECREMENT_OP .)
    OR_STR_OP       reduce using rule 78 (expression -> expression DECREMENT_OP .)
    XOR_STR_OP      reduce using rule 78 (expression -> expression DECREMENT_OP .)
    AND_STR_OP      reduce using rule 78 (expression -> expression DECREMENT_OP .)
    NOT_STR_OP      reduce using rule 78 (expression -> expression DECREMENT_OP .)
    COMMA           reduce using rule 78 (expression -> expression DECREMENT_OP .)
    ASSOCIATE_OP    reduce using rule 78 (expression -> expression DECREMENT_OP .)
    ADV_ASSIGNMENT_OP reduce using rule 78 (expression -> expression DECREMENT_OP .)
    ASSIGNMENT_OP   reduce using rule 78 (expression -> expression DECREMENT_OP .)
    RANGE_OP        reduce using rule 78 (expression -> expression DECREMENT_OP .)
    OR_OP           reduce using rule 78 (expression -> expression DECREMENT_OP .)
    AND_OP          reduce using rule 78 (expression -> expression DECREMENT_OP .)
    BIT_OR          reduce using rule 78 (expression -> expression DECREMENT_OP .)
    BIT_XOR         reduce using rule 78 (expression -> expression DECREMENT_OP .)
    BIT_AND         reduce using rule 78 (expression -> expression DECREMENT_OP .)
    EQUALS_OP       reduce using rule 78 (expression -> expression DECREMENT_OP .)
    NOT_EQUALS_OP   reduce using rule 78 (expression -> expression DECREMENT_OP .)
    COMPARE_OP      reduce using rule 78 (expression -> expression DECREMENT_OP .)
    GREATER_OP      reduce using rule 78 (expression -> expression DECREMENT_OP .)
    LESS_OP         reduce using rule 78 (expression -> expression DECREMENT_OP .)
    GREATER_EQUAL_OP reduce using rule 78 (expression -> expression DECREMENT_OP .)
    LESS_EQUAL_OP   reduce using rule 78 (expression -> expression DECREMENT_OP .)
    BIT_RIGHT_SHIFT reduce using rule 78 (expression -> expression DECREMENT_OP .)
    BIT_LEFT_SHIFT  reduce using rule 78 (expression -> expression DECREMENT_OP .)
    PLUS_OP         reduce using rule 78 (expression -> expression DECREMENT_OP .)
    MINUS_OP        reduce using rule 78 (expression -> expression DECREMENT_OP .)
    CONCATENATE     reduce using rule 78 (expression -> expression DECREMENT_OP .)
    MULTIPLICATION_OP reduce using rule 78 (expression -> expression DECREMENT_OP .)
    DIVISION_OP     reduce using rule 78 (expression -> expression DECREMENT_OP .)
    MODULUS_OP      reduce using rule 78 (expression -> expression DECREMENT_OP .)
    REP_OP          reduce using rule 78 (expression -> expression DECREMENT_OP .)
    SEARCH_MODIFY   reduce using rule 78 (expression -> expression DECREMENT_OP .)
    SEARCH_MODIFY_NEG reduce using rule 78 (expression -> expression DECREMENT_OP .)
    EXPONENT_OP     reduce using rule 78 (expression -> expression DECREMENT_OP .)
    SEMICOLON       reduce using rule 78 (expression -> expression DECREMENT_OP .)


state 111

    (85) expression -> expression ASSOCIATE_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 172
    empty                          shift and go to state 39

state 112

    (80) expression -> expression OR_STR_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 173
    empty                          shift and go to state 39

state 113

    (90) expression -> expression AND_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 174
    empty                          shift and go to state 39

state 114

    (102) expression -> expression BIT_LEFT_SHIFT . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 175
    empty                          shift and go to state 39

state 115

    (109) expression -> expression REP_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 176
    empty                          shift and go to state 39

state 116

    (105) expression -> expression CONCATENATE . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 177
    empty                          shift and go to state 39

state 117

    (77) expression -> expression INCREMENT_OP .

    CLOSE_PARANTHESIS reduce using rule 77 (expression -> expression INCREMENT_OP .)
    INCREMENT_OP    reduce using rule 77 (expression -> expression INCREMENT_OP .)
    DECREMENT_OP    reduce using rule 77 (expression -> expression INCREMENT_OP .)
    OR_STR_OP       reduce using rule 77 (expression -> expression INCREMENT_OP .)
    XOR_STR_OP      reduce using rule 77 (expression -> expression INCREMENT_OP .)
    AND_STR_OP      reduce using rule 77 (expression -> expression INCREMENT_OP .)
    NOT_STR_OP      reduce using rule 77 (expression -> expression INCREMENT_OP .)
    COMMA           reduce using rule 77 (expression -> expression INCREMENT_OP .)
    ASSOCIATE_OP    reduce using rule 77 (expression -> expression INCREMENT_OP .)
    ADV_ASSIGNMENT_OP reduce using rule 77 (expression -> expression INCREMENT_OP .)
    ASSIGNMENT_OP   reduce using rule 77 (expression -> expression INCREMENT_OP .)
    RANGE_OP        reduce using rule 77 (expression -> expression INCREMENT_OP .)
    OR_OP           reduce using rule 77 (expression -> expression INCREMENT_OP .)
    AND_OP          reduce using rule 77 (expression -> expression INCREMENT_OP .)
    BIT_OR          reduce using rule 77 (expression -> expression INCREMENT_OP .)
    BIT_XOR         reduce using rule 77 (expression -> expression INCREMENT_OP .)
    BIT_AND         reduce using rule 77 (expression -> expression INCREMENT_OP .)
    EQUALS_OP       reduce using rule 77 (expression -> expression INCREMENT_OP .)
    NOT_EQUALS_OP   reduce using rule 77 (expression -> expression INCREMENT_OP .)
    COMPARE_OP      reduce using rule 77 (expression -> expression INCREMENT_OP .)
    GREATER_OP      reduce using rule 77 (expression -> expression INCREMENT_OP .)
    LESS_OP         reduce using rule 77 (expression -> expression INCREMENT_OP .)
    GREATER_EQUAL_OP reduce using rule 77 (expression -> expression INCREMENT_OP .)
    LESS_EQUAL_OP   reduce using rule 77 (expression -> expression INCREMENT_OP .)
    BIT_RIGHT_SHIFT reduce using rule 77 (expression -> expression INCREMENT_OP .)
    BIT_LEFT_SHIFT  reduce using rule 77 (expression -> expression INCREMENT_OP .)
    PLUS_OP         reduce using rule 77 (expression -> expression INCREMENT_OP .)
    MINUS_OP        reduce using rule 77 (expression -> expression INCREMENT_OP .)
    CONCATENATE     reduce using rule 77 (expression -> expression INCREMENT_OP .)
    MULTIPLICATION_OP reduce using rule 77 (expression -> expression INCREMENT_OP .)
    DIVISION_OP     reduce using rule 77 (expression -> expression INCREMENT_OP .)
    MODULUS_OP      reduce using rule 77 (expression -> expression INCREMENT_OP .)
    REP_OP          reduce using rule 77 (expression -> expression INCREMENT_OP .)
    SEARCH_MODIFY   reduce using rule 77 (expression -> expression INCREMENT_OP .)
    SEARCH_MODIFY_NEG reduce using rule 77 (expression -> expression INCREMENT_OP .)
    EXPONENT_OP     reduce using rule 77 (expression -> expression INCREMENT_OP .)
    SEMICOLON       reduce using rule 77 (expression -> expression INCREMENT_OP .)


state 118

    (101) expression -> expression BIT_RIGHT_SHIFT . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 178
    empty                          shift and go to state 39

state 119

    (86) expression -> expression ADV_ASSIGNMENT_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 179
    empty                          shift and go to state 39

state 120

    (91) expression -> expression BIT_OR . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 180
    empty                          shift and go to state 39

state 121

    (103) expression -> expression PLUS_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 181
    empty                          shift and go to state 39

state 122

    (111) expression -> expression SEARCH_MODIFY_NEG . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 182
    empty                          shift and go to state 39

state 123

    (97) expression -> expression GREATER_OP . expression
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 183
    empty                          shift and go to state 39

state 124

    (28) functionStatement -> SUB IDENTIFIER block .

    RETURN          reduce using rule 28 (functionStatement -> SUB IDENTIFIER block .)
    IDENTIFIER      reduce using rule 28 (functionStatement -> SUB IDENTIFIER block .)
    WHILE           reduce using rule 28 (functionStatement -> SUB IDENTIFIER block .)
    FOR             reduce using rule 28 (functionStatement -> SUB IDENTIFIER block .)
    PRINT           reduce using rule 28 (functionStatement -> SUB IDENTIFIER block .)
    SUB             reduce using rule 28 (functionStatement -> SUB IDENTIFIER block .)
    LAST            reduce using rule 28 (functionStatement -> SUB IDENTIFIER block .)
    NEXT            reduce using rule 28 (functionStatement -> SUB IDENTIFIER block .)
    IF              reduce using rule 28 (functionStatement -> SUB IDENTIFIER block .)
    PRIVATE         reduce using rule 28 (functionStatement -> SUB IDENTIFIER block .)
    LOCAL           reduce using rule 28 (functionStatement -> SUB IDENTIFIER block .)
    ARRAY           reduce using rule 28 (functionStatement -> SUB IDENTIFIER block .)
    HASH            reduce using rule 28 (functionStatement -> SUB IDENTIFIER block .)
    VARIABLE        reduce using rule 28 (functionStatement -> SUB IDENTIFIER block .)
    BLOCK_ENDS      reduce using rule 28 (functionStatement -> SUB IDENTIFIER block .)
    $end            reduce using rule 28 (functionStatement -> SUB IDENTIFIER block .)


state 125

    (70) type -> variable .

    COMMA           reduce using rule 70 (type -> variable .)
    CLOSE_PARANTHESIS reduce using rule 70 (type -> variable .)
    SEMICOLON       reduce using rule 70 (type -> variable .)
    ADV_ASSIGNMENT_OP reduce using rule 70 (type -> variable .)
    ASSIGNMENT_OP   reduce using rule 70 (type -> variable .)


state 126

    (38) lefthandside -> PRIVATE empty type .

    COMMA           reduce using rule 38 (lefthandside -> PRIVATE empty type .)
    CLOSE_PARANTHESIS reduce using rule 38 (lefthandside -> PRIVATE empty type .)
    SEMICOLON       reduce using rule 38 (lefthandside -> PRIVATE empty type .)
    ADV_ASSIGNMENT_OP reduce using rule 38 (lefthandside -> PRIVATE empty type .)
    ASSIGNMENT_OP   reduce using rule 38 (lefthandside -> PRIVATE empty type .)


state 127

    (40) lefthandside -> PRIVATE OPEN_PARANTHESIS type .

    COMMA           reduce using rule 40 (lefthandside -> PRIVATE OPEN_PARANTHESIS type .)
    CLOSE_PARANTHESIS reduce using rule 40 (lefthandside -> PRIVATE OPEN_PARANTHESIS type .)
    SEMICOLON       reduce using rule 40 (lefthandside -> PRIVATE OPEN_PARANTHESIS type .)
    ADV_ASSIGNMENT_OP reduce using rule 40 (lefthandside -> PRIVATE OPEN_PARANTHESIS type .)
    ASSIGNMENT_OP   reduce using rule 40 (lefthandside -> PRIVATE OPEN_PARANTHESIS type .)


state 128

    (47) functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters . CLOSE_PARANTHESIS

    CLOSE_PARANTHESIS shift and go to state 184


state 129

    (50) parameters -> empty . empty empty
    (63) term -> empty . number empty
    (64) term -> empty . type empty
    (65) term -> empty . variable empty
    (66) term -> empty . string empty
    (7) empty -> .
    (55) number -> . NUMBER
    (56) number -> . SCI_NOT
    (57) number -> . FLOAT
    (58) number -> . HEXADECIMAL
    (59) number -> . OCTAL
    (68) type -> . ARRAY
    (69) type -> . HASH
    (70) type -> . variable
    (60) variable -> . VARIABLE empty empty empty
    (61) variable -> . VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET
    (62) variable -> . VARIABLE BLOCK_BEGIN string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    NUMBER          shift and go to state 75
    SCI_NOT         shift and go to state 76
    FLOAT           shift and go to state 74
    HEXADECIMAL     shift and go to state 82
    OCTAL           shift and go to state 79
    ARRAY           shift and go to state 84
    HASH            shift and go to state 71
    VARIABLE        shift and go to state 78
    STRING          shift and go to state 80
    RES_STRING      shift and go to state 73

    variable                       shift and go to state 81
    type                           shift and go to state 83
    number                         shift and go to state 77
    empty                          shift and go to state 185
    string                         shift and go to state 72

state 130

    (48) parameters -> expression . COMMA parameters
    (49) parameters -> expression . empty empty
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression
    (7) empty -> .

    COMMA           shift and go to state 186
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    OR_STR_OP       shift and go to state 112
    XOR_STR_OP      shift and go to state 107
    AND_STR_OP      shift and go to state 100
    NOT_STR_OP      shift and go to state 94
    ASSOCIATE_OP    shift and go to state 111
    ADV_ASSIGNMENT_OP shift and go to state 119
    ASSIGNMENT_OP   shift and go to state 105
    RANGE_OP        shift and go to state 96
    OR_OP           shift and go to state 101
    AND_OP          shift and go to state 113
    BIT_OR          shift and go to state 120
    BIT_XOR         shift and go to state 97
    BIT_AND         shift and go to state 108
    EQUALS_OP       shift and go to state 90
    NOT_EQUALS_OP   shift and go to state 92
    COMPARE_OP      shift and go to state 91
    GREATER_OP      shift and go to state 123
    LESS_OP         shift and go to state 102
    GREATER_EQUAL_OP shift and go to state 106
    LESS_EQUAL_OP   shift and go to state 89
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)

    empty                          shift and go to state 187

state 131

    (39) lefthandside -> empty empty type .

    COMMA           reduce using rule 39 (lefthandside -> empty empty type .)
    CLOSE_PARANTHESIS reduce using rule 39 (lefthandside -> empty empty type .)
    SEMICOLON       reduce using rule 39 (lefthandside -> empty empty type .)
    ADV_ASSIGNMENT_OP reduce using rule 39 (lefthandside -> empty empty type .)
    ASSIGNMENT_OP   reduce using rule 39 (lefthandside -> empty empty type .)


state 132

    (52) forStatement -> FOR OPEN_PARANTHESIS expression . SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    SEMICOLON       shift and go to state 188
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    OR_STR_OP       shift and go to state 112
    XOR_STR_OP      shift and go to state 107
    AND_STR_OP      shift and go to state 100
    NOT_STR_OP      shift and go to state 94
    COMMA           shift and go to state 103
    ASSOCIATE_OP    shift and go to state 111
    ADV_ASSIGNMENT_OP shift and go to state 119
    ASSIGNMENT_OP   shift and go to state 105
    RANGE_OP        shift and go to state 96
    OR_OP           shift and go to state 101
    AND_OP          shift and go to state 113
    BIT_OR          shift and go to state 120
    BIT_XOR         shift and go to state 97
    BIT_AND         shift and go to state 108
    EQUALS_OP       shift and go to state 90
    NOT_EQUALS_OP   shift and go to state 92
    COMPARE_OP      shift and go to state 91
    GREATER_OP      shift and go to state 123
    LESS_OP         shift and go to state 102
    GREATER_EQUAL_OP shift and go to state 106
    LESS_EQUAL_OP   shift and go to state 89
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93


state 133

    (35) assignment -> lefthandside decList CLOSE_PARANTHESIS . assignmenttype expression SEMICOLON
    (44) declaration -> lefthandside decList CLOSE_PARANTHESIS . SEMICOLON
    (36) assignmenttype -> . ADV_ASSIGNMENT_OP
    (37) assignmenttype -> . ASSIGNMENT_OP

    SEMICOLON       shift and go to state 190
    ADV_ASSIGNMENT_OP shift and go to state 191
    ASSIGNMENT_OP   shift and go to state 192

    assignmenttype                 shift and go to state 189

state 134

    (34) assignment -> lefthandside decList empty . assignmenttype expression SEMICOLON
    (43) declaration -> lefthandside decList empty . SEMICOLON
    (36) assignmenttype -> . ADV_ASSIGNMENT_OP
    (37) assignmenttype -> . ASSIGNMENT_OP

    SEMICOLON       shift and go to state 194
    ADV_ASSIGNMENT_OP shift and go to state 191
    ASSIGNMENT_OP   shift and go to state 192

    assignmenttype                 shift and go to state 193

state 135

    (45) decList -> COMMA type . decList
    (45) decList -> . COMMA type decList
    (46) decList -> . empty empty empty
    (7) empty -> .

    COMMA           shift and go to state 56
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)

    empty                          shift and go to state 57
    decList                        shift and go to state 195

state 136

    (46) decList -> empty empty . empty
    (7) empty -> .

    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    SEMICOLON       reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)

    empty                          shift and go to state 196

state 137

    (42) lefthandside -> LOCAL OPEN_PARANTHESIS type .

    COMMA           reduce using rule 42 (lefthandside -> LOCAL OPEN_PARANTHESIS type .)
    CLOSE_PARANTHESIS reduce using rule 42 (lefthandside -> LOCAL OPEN_PARANTHESIS type .)
    SEMICOLON       reduce using rule 42 (lefthandside -> LOCAL OPEN_PARANTHESIS type .)
    ADV_ASSIGNMENT_OP reduce using rule 42 (lefthandside -> LOCAL OPEN_PARANTHESIS type .)
    ASSIGNMENT_OP   reduce using rule 42 (lefthandside -> LOCAL OPEN_PARANTHESIS type .)


state 138

    (41) lefthandside -> LOCAL empty type .

    COMMA           reduce using rule 41 (lefthandside -> LOCAL empty type .)
    CLOSE_PARANTHESIS reduce using rule 41 (lefthandside -> LOCAL empty type .)
    SEMICOLON       reduce using rule 41 (lefthandside -> LOCAL empty type .)
    ADV_ASSIGNMENT_OP reduce using rule 41 (lefthandside -> LOCAL empty type .)
    ASSIGNMENT_OP   reduce using rule 41 (lefthandside -> LOCAL empty type .)


state 139

    (24) ifthen -> IF OPEN_PARANTHESIS expression . CLOSE_PARANTHESIS block
    (25) ifthenelse -> IF OPEN_PARANTHESIS expression . CLOSE_PARANTHESIS block ELSE block
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS shift and go to state 197
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    OR_STR_OP       shift and go to state 112
    XOR_STR_OP      shift and go to state 107
    AND_STR_OP      shift and go to state 100
    NOT_STR_OP      shift and go to state 94
    COMMA           shift and go to state 103
    ASSOCIATE_OP    shift and go to state 111
    ADV_ASSIGNMENT_OP shift and go to state 119
    ASSIGNMENT_OP   shift and go to state 105
    RANGE_OP        shift and go to state 96
    OR_OP           shift and go to state 101
    AND_OP          shift and go to state 113
    BIT_OR          shift and go to state 120
    BIT_XOR         shift and go to state 97
    BIT_AND         shift and go to state 108
    EQUALS_OP       shift and go to state 90
    NOT_EQUALS_OP   shift and go to state 92
    COMPARE_OP      shift and go to state 91
    GREATER_OP      shift and go to state 123
    LESS_OP         shift and go to state 102
    GREATER_EQUAL_OP shift and go to state 106
    LESS_EQUAL_OP   shift and go to state 89
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93


state 140

    (51) whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS . block
    (3) block -> . BLOCK_BEGIN statements BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 4

    block                          shift and go to state 198

state 141

    (29) printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 199


state 142

    (30) printStatement -> PRINT empty string1 empty . SEMICOLON

    SEMICOLON       shift and go to state 200


state 143

    (67) term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .

    INCREMENT_OP    reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    DECREMENT_OP    reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    OR_STR_OP       reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    XOR_STR_OP      reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    AND_STR_OP      reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    NOT_STR_OP      reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    COMMA           reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    ASSOCIATE_OP    reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    ADV_ASSIGNMENT_OP reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    ASSIGNMENT_OP   reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    RANGE_OP        reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    OR_OP           reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    AND_OP          reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    BIT_OR          reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    BIT_XOR         reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    BIT_AND         reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    EQUALS_OP       reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    NOT_EQUALS_OP   reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    COMPARE_OP      reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    GREATER_OP      reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    LESS_OP         reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    GREATER_EQUAL_OP reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    LESS_EQUAL_OP   reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    BIT_RIGHT_SHIFT reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    BIT_LEFT_SHIFT  reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    PLUS_OP         reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    MINUS_OP        reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    CONCATENATE     reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    MULTIPLICATION_OP reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    DIVISION_OP     reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    MODULUS_OP      reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    REP_OP          reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    SEARCH_MODIFY   reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    SEARCH_MODIFY_NEG reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    EXPONENT_OP     reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    SEMICOLON       reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)
    CLOSE_PARANTHESIS reduce using rule 67 (term -> OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .)


state 144

    (66) term -> empty string empty .

    INCREMENT_OP    reduce using rule 66 (term -> empty string empty .)
    DECREMENT_OP    reduce using rule 66 (term -> empty string empty .)
    OR_STR_OP       reduce using rule 66 (term -> empty string empty .)
    XOR_STR_OP      reduce using rule 66 (term -> empty string empty .)
    AND_STR_OP      reduce using rule 66 (term -> empty string empty .)
    NOT_STR_OP      reduce using rule 66 (term -> empty string empty .)
    COMMA           reduce using rule 66 (term -> empty string empty .)
    ASSOCIATE_OP    reduce using rule 66 (term -> empty string empty .)
    ADV_ASSIGNMENT_OP reduce using rule 66 (term -> empty string empty .)
    ASSIGNMENT_OP   reduce using rule 66 (term -> empty string empty .)
    RANGE_OP        reduce using rule 66 (term -> empty string empty .)
    OR_OP           reduce using rule 66 (term -> empty string empty .)
    AND_OP          reduce using rule 66 (term -> empty string empty .)
    BIT_OR          reduce using rule 66 (term -> empty string empty .)
    BIT_XOR         reduce using rule 66 (term -> empty string empty .)
    BIT_AND         reduce using rule 66 (term -> empty string empty .)
    EQUALS_OP       reduce using rule 66 (term -> empty string empty .)
    NOT_EQUALS_OP   reduce using rule 66 (term -> empty string empty .)
    COMPARE_OP      reduce using rule 66 (term -> empty string empty .)
    GREATER_OP      reduce using rule 66 (term -> empty string empty .)
    LESS_OP         reduce using rule 66 (term -> empty string empty .)
    GREATER_EQUAL_OP reduce using rule 66 (term -> empty string empty .)
    LESS_EQUAL_OP   reduce using rule 66 (term -> empty string empty .)
    BIT_RIGHT_SHIFT reduce using rule 66 (term -> empty string empty .)
    BIT_LEFT_SHIFT  reduce using rule 66 (term -> empty string empty .)
    PLUS_OP         reduce using rule 66 (term -> empty string empty .)
    MINUS_OP        reduce using rule 66 (term -> empty string empty .)
    CONCATENATE     reduce using rule 66 (term -> empty string empty .)
    MULTIPLICATION_OP reduce using rule 66 (term -> empty string empty .)
    DIVISION_OP     reduce using rule 66 (term -> empty string empty .)
    MODULUS_OP      reduce using rule 66 (term -> empty string empty .)
    REP_OP          reduce using rule 66 (term -> empty string empty .)
    SEARCH_MODIFY   reduce using rule 66 (term -> empty string empty .)
    SEARCH_MODIFY_NEG reduce using rule 66 (term -> empty string empty .)
    EXPONENT_OP     reduce using rule 66 (term -> empty string empty .)
    SEMICOLON       reduce using rule 66 (term -> empty string empty .)
    CLOSE_PARANTHESIS reduce using rule 66 (term -> empty string empty .)


state 145

    (63) term -> empty number empty .

    INCREMENT_OP    reduce using rule 63 (term -> empty number empty .)
    DECREMENT_OP    reduce using rule 63 (term -> empty number empty .)
    OR_STR_OP       reduce using rule 63 (term -> empty number empty .)
    XOR_STR_OP      reduce using rule 63 (term -> empty number empty .)
    AND_STR_OP      reduce using rule 63 (term -> empty number empty .)
    NOT_STR_OP      reduce using rule 63 (term -> empty number empty .)
    COMMA           reduce using rule 63 (term -> empty number empty .)
    ASSOCIATE_OP    reduce using rule 63 (term -> empty number empty .)
    ADV_ASSIGNMENT_OP reduce using rule 63 (term -> empty number empty .)
    ASSIGNMENT_OP   reduce using rule 63 (term -> empty number empty .)
    RANGE_OP        reduce using rule 63 (term -> empty number empty .)
    OR_OP           reduce using rule 63 (term -> empty number empty .)
    AND_OP          reduce using rule 63 (term -> empty number empty .)
    BIT_OR          reduce using rule 63 (term -> empty number empty .)
    BIT_XOR         reduce using rule 63 (term -> empty number empty .)
    BIT_AND         reduce using rule 63 (term -> empty number empty .)
    EQUALS_OP       reduce using rule 63 (term -> empty number empty .)
    NOT_EQUALS_OP   reduce using rule 63 (term -> empty number empty .)
    COMPARE_OP      reduce using rule 63 (term -> empty number empty .)
    GREATER_OP      reduce using rule 63 (term -> empty number empty .)
    LESS_OP         reduce using rule 63 (term -> empty number empty .)
    GREATER_EQUAL_OP reduce using rule 63 (term -> empty number empty .)
    LESS_EQUAL_OP   reduce using rule 63 (term -> empty number empty .)
    BIT_RIGHT_SHIFT reduce using rule 63 (term -> empty number empty .)
    BIT_LEFT_SHIFT  reduce using rule 63 (term -> empty number empty .)
    PLUS_OP         reduce using rule 63 (term -> empty number empty .)
    MINUS_OP        reduce using rule 63 (term -> empty number empty .)
    CONCATENATE     reduce using rule 63 (term -> empty number empty .)
    MULTIPLICATION_OP reduce using rule 63 (term -> empty number empty .)
    DIVISION_OP     reduce using rule 63 (term -> empty number empty .)
    MODULUS_OP      reduce using rule 63 (term -> empty number empty .)
    REP_OP          reduce using rule 63 (term -> empty number empty .)
    SEARCH_MODIFY   reduce using rule 63 (term -> empty number empty .)
    SEARCH_MODIFY_NEG reduce using rule 63 (term -> empty number empty .)
    EXPONENT_OP     reduce using rule 63 (term -> empty number empty .)
    SEMICOLON       reduce using rule 63 (term -> empty number empty .)
    CLOSE_PARANTHESIS reduce using rule 63 (term -> empty number empty .)


state 146

    (61) variable -> VARIABLE OPEN_BRACKET . NUMBER CLOSE_BRACKET

    NUMBER          shift and go to state 201


state 147

    (62) variable -> VARIABLE BLOCK_BEGIN . string BLOCK_ENDS
    (53) string -> . STRING
    (54) string -> . RES_STRING

    STRING          shift and go to state 80
    RES_STRING      shift and go to state 73

    string                         shift and go to state 202

state 148

    (60) variable -> VARIABLE empty . empty empty
    (7) empty -> .

    SEMICOLON       reduce using rule 7 (empty -> .)
    INCREMENT_OP    reduce using rule 7 (empty -> .)
    DECREMENT_OP    reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    PLUS_OP         reduce using rule 7 (empty -> .)
    MINUS_OP        reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)

    empty                          shift and go to state 203

state 149

    (65) term -> empty variable empty .

    INCREMENT_OP    reduce using rule 65 (term -> empty variable empty .)
    DECREMENT_OP    reduce using rule 65 (term -> empty variable empty .)
    OR_STR_OP       reduce using rule 65 (term -> empty variable empty .)
    XOR_STR_OP      reduce using rule 65 (term -> empty variable empty .)
    AND_STR_OP      reduce using rule 65 (term -> empty variable empty .)
    NOT_STR_OP      reduce using rule 65 (term -> empty variable empty .)
    COMMA           reduce using rule 65 (term -> empty variable empty .)
    ASSOCIATE_OP    reduce using rule 65 (term -> empty variable empty .)
    ADV_ASSIGNMENT_OP reduce using rule 65 (term -> empty variable empty .)
    ASSIGNMENT_OP   reduce using rule 65 (term -> empty variable empty .)
    RANGE_OP        reduce using rule 65 (term -> empty variable empty .)
    OR_OP           reduce using rule 65 (term -> empty variable empty .)
    AND_OP          reduce using rule 65 (term -> empty variable empty .)
    BIT_OR          reduce using rule 65 (term -> empty variable empty .)
    BIT_XOR         reduce using rule 65 (term -> empty variable empty .)
    BIT_AND         reduce using rule 65 (term -> empty variable empty .)
    EQUALS_OP       reduce using rule 65 (term -> empty variable empty .)
    NOT_EQUALS_OP   reduce using rule 65 (term -> empty variable empty .)
    COMPARE_OP      reduce using rule 65 (term -> empty variable empty .)
    GREATER_OP      reduce using rule 65 (term -> empty variable empty .)
    LESS_OP         reduce using rule 65 (term -> empty variable empty .)
    GREATER_EQUAL_OP reduce using rule 65 (term -> empty variable empty .)
    LESS_EQUAL_OP   reduce using rule 65 (term -> empty variable empty .)
    BIT_RIGHT_SHIFT reduce using rule 65 (term -> empty variable empty .)
    BIT_LEFT_SHIFT  reduce using rule 65 (term -> empty variable empty .)
    PLUS_OP         reduce using rule 65 (term -> empty variable empty .)
    MINUS_OP        reduce using rule 65 (term -> empty variable empty .)
    CONCATENATE     reduce using rule 65 (term -> empty variable empty .)
    MULTIPLICATION_OP reduce using rule 65 (term -> empty variable empty .)
    DIVISION_OP     reduce using rule 65 (term -> empty variable empty .)
    MODULUS_OP      reduce using rule 65 (term -> empty variable empty .)
    REP_OP          reduce using rule 65 (term -> empty variable empty .)
    SEARCH_MODIFY   reduce using rule 65 (term -> empty variable empty .)
    SEARCH_MODIFY_NEG reduce using rule 65 (term -> empty variable empty .)
    EXPONENT_OP     reduce using rule 65 (term -> empty variable empty .)
    SEMICOLON       reduce using rule 65 (term -> empty variable empty .)
    CLOSE_PARANTHESIS reduce using rule 65 (term -> empty variable empty .)


state 150

    (64) term -> empty type empty .

    INCREMENT_OP    reduce using rule 64 (term -> empty type empty .)
    DECREMENT_OP    reduce using rule 64 (term -> empty type empty .)
    OR_STR_OP       reduce using rule 64 (term -> empty type empty .)
    XOR_STR_OP      reduce using rule 64 (term -> empty type empty .)
    AND_STR_OP      reduce using rule 64 (term -> empty type empty .)
    NOT_STR_OP      reduce using rule 64 (term -> empty type empty .)
    COMMA           reduce using rule 64 (term -> empty type empty .)
    ASSOCIATE_OP    reduce using rule 64 (term -> empty type empty .)
    ADV_ASSIGNMENT_OP reduce using rule 64 (term -> empty type empty .)
    ASSIGNMENT_OP   reduce using rule 64 (term -> empty type empty .)
    RANGE_OP        reduce using rule 64 (term -> empty type empty .)
    OR_OP           reduce using rule 64 (term -> empty type empty .)
    AND_OP          reduce using rule 64 (term -> empty type empty .)
    BIT_OR          reduce using rule 64 (term -> empty type empty .)
    BIT_XOR         reduce using rule 64 (term -> empty type empty .)
    BIT_AND         reduce using rule 64 (term -> empty type empty .)
    EQUALS_OP       reduce using rule 64 (term -> empty type empty .)
    NOT_EQUALS_OP   reduce using rule 64 (term -> empty type empty .)
    COMPARE_OP      reduce using rule 64 (term -> empty type empty .)
    GREATER_OP      reduce using rule 64 (term -> empty type empty .)
    LESS_OP         reduce using rule 64 (term -> empty type empty .)
    GREATER_EQUAL_OP reduce using rule 64 (term -> empty type empty .)
    LESS_EQUAL_OP   reduce using rule 64 (term -> empty type empty .)
    BIT_RIGHT_SHIFT reduce using rule 64 (term -> empty type empty .)
    BIT_LEFT_SHIFT  reduce using rule 64 (term -> empty type empty .)
    PLUS_OP         reduce using rule 64 (term -> empty type empty .)
    MINUS_OP        reduce using rule 64 (term -> empty type empty .)
    CONCATENATE     reduce using rule 64 (term -> empty type empty .)
    MULTIPLICATION_OP reduce using rule 64 (term -> empty type empty .)
    DIVISION_OP     reduce using rule 64 (term -> empty type empty .)
    MODULUS_OP      reduce using rule 64 (term -> empty type empty .)
    REP_OP          reduce using rule 64 (term -> empty type empty .)
    SEARCH_MODIFY   reduce using rule 64 (term -> empty type empty .)
    SEARCH_MODIFY_NEG reduce using rule 64 (term -> empty type empty .)
    EXPONENT_OP     reduce using rule 64 (term -> empty type empty .)
    SEMICOLON       reduce using rule 64 (term -> empty type empty .)
    CLOSE_PARANTHESIS reduce using rule 64 (term -> empty type empty .)


state 151

    (110) expression -> expression SEARCH_MODIFY expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    OR_STR_OP       reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    XOR_STR_OP      reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    AND_STR_OP      reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    NOT_STR_OP      reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    COMMA           reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    ASSOCIATE_OP    reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    ADV_ASSIGNMENT_OP reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    ASSIGNMENT_OP   reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    RANGE_OP        reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    OR_OP           reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    AND_OP          reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    BIT_OR          reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    BIT_XOR         reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    BIT_AND         reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    EQUALS_OP       reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    NOT_EQUALS_OP   reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    COMPARE_OP      reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    GREATER_OP      reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    LESS_OP         reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    GREATER_EQUAL_OP reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    LESS_EQUAL_OP   reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    BIT_RIGHT_SHIFT reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    BIT_LEFT_SHIFT  reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    PLUS_OP         reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    MINUS_OP        reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    CONCATENATE     reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    MULTIPLICATION_OP reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    DIVISION_OP     reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    MODULUS_OP      reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    REP_OP          reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    SEARCH_MODIFY   reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    SEARCH_MODIFY_NEG reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    SEMICOLON       reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .) ]
  ! DECREMENT_OP    [ reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .) ]
  ! EXPONENT_OP     [ reduce using rule 110 (expression -> expression SEARCH_MODIFY expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]
  ! BIT_OR          [ shift and go to state 120 ]
  ! BIT_XOR         [ shift and go to state 97 ]
  ! BIT_AND         [ shift and go to state 108 ]
  ! EQUALS_OP       [ shift and go to state 90 ]
  ! NOT_EQUALS_OP   [ shift and go to state 92 ]
  ! COMPARE_OP      [ shift and go to state 91 ]
  ! GREATER_OP      [ shift and go to state 123 ]
  ! LESS_OP         [ shift and go to state 102 ]
  ! GREATER_EQUAL_OP [ shift and go to state 106 ]
  ! LESS_EQUAL_OP   [ shift and go to state 89 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 118 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 114 ]
  ! PLUS_OP         [ shift and go to state 121 ]
  ! MINUS_OP        [ shift and go to state 98 ]
  ! CONCATENATE     [ shift and go to state 116 ]
  ! MULTIPLICATION_OP [ shift and go to state 109 ]
  ! DIVISION_OP     [ shift and go to state 95 ]
  ! MODULUS_OP      [ shift and go to state 104 ]
  ! REP_OP          [ shift and go to state 115 ]
  ! SEARCH_MODIFY   [ shift and go to state 88 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 122 ]


state 152

    (100) expression -> expression LESS_EQUAL_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .)
    OR_STR_OP       reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .)
    XOR_STR_OP      reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .)
    AND_STR_OP      reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .)
    NOT_STR_OP      reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .)
    COMMA           reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .)
    ASSOCIATE_OP    reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .)
    ASSIGNMENT_OP   reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .)
    RANGE_OP        reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .)
    OR_OP           reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .)
    AND_OP          reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .)
    BIT_OR          reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .)
    BIT_XOR         reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .)
    BIT_AND         reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .)
    EQUALS_OP       reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .)
    NOT_EQUALS_OP   reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .)
    COMPARE_OP      reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .)
    GREATER_OP      reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .)
    LESS_OP         reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .)
    GREATER_EQUAL_OP reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .)
    LESS_EQUAL_OP   reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .)
    SEMICOLON       reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! REP_OP          [ reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 100 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]
  ! BIT_OR          [ shift and go to state 120 ]
  ! BIT_XOR         [ shift and go to state 97 ]
  ! BIT_AND         [ shift and go to state 108 ]
  ! EQUALS_OP       [ shift and go to state 90 ]
  ! NOT_EQUALS_OP   [ shift and go to state 92 ]
  ! COMPARE_OP      [ shift and go to state 91 ]
  ! GREATER_OP      [ shift and go to state 123 ]
  ! LESS_OP         [ shift and go to state 102 ]
  ! GREATER_EQUAL_OP [ shift and go to state 106 ]
  ! LESS_EQUAL_OP   [ shift and go to state 89 ]


state 153

    (94) expression -> expression EQUALS_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 94 (expression -> expression EQUALS_OP expression .)
    OR_STR_OP       reduce using rule 94 (expression -> expression EQUALS_OP expression .)
    XOR_STR_OP      reduce using rule 94 (expression -> expression EQUALS_OP expression .)
    AND_STR_OP      reduce using rule 94 (expression -> expression EQUALS_OP expression .)
    NOT_STR_OP      reduce using rule 94 (expression -> expression EQUALS_OP expression .)
    COMMA           reduce using rule 94 (expression -> expression EQUALS_OP expression .)
    ASSOCIATE_OP    reduce using rule 94 (expression -> expression EQUALS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 94 (expression -> expression EQUALS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 94 (expression -> expression EQUALS_OP expression .)
    RANGE_OP        reduce using rule 94 (expression -> expression EQUALS_OP expression .)
    OR_OP           reduce using rule 94 (expression -> expression EQUALS_OP expression .)
    AND_OP          reduce using rule 94 (expression -> expression EQUALS_OP expression .)
    BIT_OR          reduce using rule 94 (expression -> expression EQUALS_OP expression .)
    BIT_XOR         reduce using rule 94 (expression -> expression EQUALS_OP expression .)
    BIT_AND         reduce using rule 94 (expression -> expression EQUALS_OP expression .)
    EQUALS_OP       reduce using rule 94 (expression -> expression EQUALS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 94 (expression -> expression EQUALS_OP expression .)
    COMPARE_OP      reduce using rule 94 (expression -> expression EQUALS_OP expression .)
    SEMICOLON       reduce using rule 94 (expression -> expression EQUALS_OP expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    GREATER_OP      shift and go to state 123
    LESS_OP         shift and go to state 102
    GREATER_EQUAL_OP shift and go to state 106
    LESS_EQUAL_OP   shift and go to state 89
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 94 (expression -> expression EQUALS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 94 (expression -> expression EQUALS_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 94 (expression -> expression EQUALS_OP expression .) ]
  ! LESS_OP         [ reduce using rule 94 (expression -> expression EQUALS_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 94 (expression -> expression EQUALS_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 94 (expression -> expression EQUALS_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 94 (expression -> expression EQUALS_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 94 (expression -> expression EQUALS_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 94 (expression -> expression EQUALS_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 94 (expression -> expression EQUALS_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 94 (expression -> expression EQUALS_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 94 (expression -> expression EQUALS_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 94 (expression -> expression EQUALS_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 94 (expression -> expression EQUALS_OP expression .) ]
  ! REP_OP          [ reduce using rule 94 (expression -> expression EQUALS_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 94 (expression -> expression EQUALS_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 94 (expression -> expression EQUALS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 94 (expression -> expression EQUALS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]
  ! BIT_OR          [ shift and go to state 120 ]
  ! BIT_XOR         [ shift and go to state 97 ]
  ! BIT_AND         [ shift and go to state 108 ]
  ! EQUALS_OP       [ shift and go to state 90 ]
  ! NOT_EQUALS_OP   [ shift and go to state 92 ]
  ! COMPARE_OP      [ shift and go to state 91 ]


state 154

    (96) expression -> expression COMPARE_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 96 (expression -> expression COMPARE_OP expression .)
    OR_STR_OP       reduce using rule 96 (expression -> expression COMPARE_OP expression .)
    XOR_STR_OP      reduce using rule 96 (expression -> expression COMPARE_OP expression .)
    AND_STR_OP      reduce using rule 96 (expression -> expression COMPARE_OP expression .)
    NOT_STR_OP      reduce using rule 96 (expression -> expression COMPARE_OP expression .)
    COMMA           reduce using rule 96 (expression -> expression COMPARE_OP expression .)
    ASSOCIATE_OP    reduce using rule 96 (expression -> expression COMPARE_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 96 (expression -> expression COMPARE_OP expression .)
    ASSIGNMENT_OP   reduce using rule 96 (expression -> expression COMPARE_OP expression .)
    RANGE_OP        reduce using rule 96 (expression -> expression COMPARE_OP expression .)
    OR_OP           reduce using rule 96 (expression -> expression COMPARE_OP expression .)
    AND_OP          reduce using rule 96 (expression -> expression COMPARE_OP expression .)
    BIT_OR          reduce using rule 96 (expression -> expression COMPARE_OP expression .)
    BIT_XOR         reduce using rule 96 (expression -> expression COMPARE_OP expression .)
    BIT_AND         reduce using rule 96 (expression -> expression COMPARE_OP expression .)
    EQUALS_OP       reduce using rule 96 (expression -> expression COMPARE_OP expression .)
    NOT_EQUALS_OP   reduce using rule 96 (expression -> expression COMPARE_OP expression .)
    COMPARE_OP      reduce using rule 96 (expression -> expression COMPARE_OP expression .)
    SEMICOLON       reduce using rule 96 (expression -> expression COMPARE_OP expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    GREATER_OP      shift and go to state 123
    LESS_OP         shift and go to state 102
    GREATER_EQUAL_OP shift and go to state 106
    LESS_EQUAL_OP   shift and go to state 89
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 96 (expression -> expression COMPARE_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 96 (expression -> expression COMPARE_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 96 (expression -> expression COMPARE_OP expression .) ]
  ! LESS_OP         [ reduce using rule 96 (expression -> expression COMPARE_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 96 (expression -> expression COMPARE_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 96 (expression -> expression COMPARE_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 96 (expression -> expression COMPARE_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 96 (expression -> expression COMPARE_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 96 (expression -> expression COMPARE_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 96 (expression -> expression COMPARE_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 96 (expression -> expression COMPARE_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 96 (expression -> expression COMPARE_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 96 (expression -> expression COMPARE_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 96 (expression -> expression COMPARE_OP expression .) ]
  ! REP_OP          [ reduce using rule 96 (expression -> expression COMPARE_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 96 (expression -> expression COMPARE_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 96 (expression -> expression COMPARE_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 96 (expression -> expression COMPARE_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]
  ! BIT_OR          [ shift and go to state 120 ]
  ! BIT_XOR         [ shift and go to state 97 ]
  ! BIT_AND         [ shift and go to state 108 ]
  ! EQUALS_OP       [ shift and go to state 90 ]
  ! NOT_EQUALS_OP   [ shift and go to state 92 ]
  ! COMPARE_OP      [ shift and go to state 91 ]


state 155

    (95) expression -> expression NOT_EQUALS_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .)
    OR_STR_OP       reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .)
    XOR_STR_OP      reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .)
    AND_STR_OP      reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .)
    NOT_STR_OP      reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .)
    COMMA           reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .)
    ASSOCIATE_OP    reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .)
    RANGE_OP        reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .)
    OR_OP           reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .)
    AND_OP          reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .)
    BIT_OR          reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .)
    BIT_XOR         reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .)
    BIT_AND         reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .)
    EQUALS_OP       reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .)
    COMPARE_OP      reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .)
    SEMICOLON       reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    GREATER_OP      shift and go to state 123
    LESS_OP         shift and go to state 102
    GREATER_EQUAL_OP shift and go to state 106
    LESS_EQUAL_OP   shift and go to state 89
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! LESS_OP         [ reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! REP_OP          [ reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 95 (expression -> expression NOT_EQUALS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]
  ! BIT_OR          [ shift and go to state 120 ]
  ! BIT_XOR         [ shift and go to state 97 ]
  ! BIT_AND         [ shift and go to state 108 ]
  ! EQUALS_OP       [ shift and go to state 90 ]
  ! NOT_EQUALS_OP   [ shift and go to state 92 ]
  ! COMPARE_OP      [ shift and go to state 91 ]


state 156

    (112) expression -> expression EXPONENT_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    OR_STR_OP       reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    XOR_STR_OP      reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    AND_STR_OP      reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    NOT_STR_OP      reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    COMMA           reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    ASSOCIATE_OP    reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    ASSIGNMENT_OP   reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    RANGE_OP        reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    OR_OP           reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    AND_OP          reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    BIT_OR          reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    BIT_XOR         reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    BIT_AND         reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    EQUALS_OP       reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    NOT_EQUALS_OP   reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    COMPARE_OP      reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    GREATER_OP      reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    LESS_OP         reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    GREATER_EQUAL_OP reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    LESS_EQUAL_OP   reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    PLUS_OP         reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    MINUS_OP        reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    CONCATENATE     reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    MULTIPLICATION_OP reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    DIVISION_OP     reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    MODULUS_OP      reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    REP_OP          reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    SEARCH_MODIFY   reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    SEARCH_MODIFY_NEG reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    SEMICOLON       reduce using rule 112 (expression -> expression EXPONENT_OP expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 112 (expression -> expression EXPONENT_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 112 (expression -> expression EXPONENT_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 112 (expression -> expression EXPONENT_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]
  ! BIT_OR          [ shift and go to state 120 ]
  ! BIT_XOR         [ shift and go to state 97 ]
  ! BIT_AND         [ shift and go to state 108 ]
  ! EQUALS_OP       [ shift and go to state 90 ]
  ! NOT_EQUALS_OP   [ shift and go to state 92 ]
  ! COMPARE_OP      [ shift and go to state 91 ]
  ! GREATER_OP      [ shift and go to state 123 ]
  ! LESS_OP         [ shift and go to state 102 ]
  ! GREATER_EQUAL_OP [ shift and go to state 106 ]
  ! LESS_EQUAL_OP   [ shift and go to state 89 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 118 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 114 ]
  ! PLUS_OP         [ shift and go to state 121 ]
  ! MINUS_OP        [ shift and go to state 98 ]
  ! CONCATENATE     [ shift and go to state 116 ]
  ! MULTIPLICATION_OP [ shift and go to state 109 ]
  ! DIVISION_OP     [ shift and go to state 95 ]
  ! MODULUS_OP      [ shift and go to state 104 ]
  ! REP_OP          [ shift and go to state 115 ]
  ! SEARCH_MODIFY   [ shift and go to state 88 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 122 ]


state 157

    (83) expression -> expression NOT_STR_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 83 (expression -> expression NOT_STR_OP expression .)
    OR_STR_OP       reduce using rule 83 (expression -> expression NOT_STR_OP expression .)
    XOR_STR_OP      reduce using rule 83 (expression -> expression NOT_STR_OP expression .)
    AND_STR_OP      reduce using rule 83 (expression -> expression NOT_STR_OP expression .)
    SEMICOLON       reduce using rule 83 (expression -> expression NOT_STR_OP expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    NOT_STR_OP      shift and go to state 94
    COMMA           shift and go to state 103
    ASSOCIATE_OP    shift and go to state 111
    ADV_ASSIGNMENT_OP shift and go to state 119
    ASSIGNMENT_OP   shift and go to state 105
    RANGE_OP        shift and go to state 96
    OR_OP           shift and go to state 101
    AND_OP          shift and go to state 113
    BIT_OR          shift and go to state 120
    BIT_XOR         shift and go to state 97
    BIT_AND         shift and go to state 108
    EQUALS_OP       shift and go to state 90
    NOT_EQUALS_OP   shift and go to state 92
    COMPARE_OP      shift and go to state 91
    GREATER_OP      shift and go to state 123
    LESS_OP         shift and go to state 102
    GREATER_EQUAL_OP shift and go to state 106
    LESS_EQUAL_OP   shift and go to state 89
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! NOT_STR_OP      [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! COMMA           [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! ASSOCIATE_OP    [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! RANGE_OP        [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! OR_OP           [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! AND_OP          [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! BIT_OR          [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! BIT_AND         [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! LESS_OP         [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! REP_OP          [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 83 (expression -> expression NOT_STR_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]


state 158

    (107) expression -> expression DIVISION_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    OR_STR_OP       reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    XOR_STR_OP      reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    AND_STR_OP      reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    NOT_STR_OP      reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    COMMA           reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    ASSOCIATE_OP    reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    ASSIGNMENT_OP   reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    RANGE_OP        reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    OR_OP           reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    AND_OP          reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    BIT_OR          reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    BIT_XOR         reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    BIT_AND         reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    EQUALS_OP       reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    NOT_EQUALS_OP   reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    COMPARE_OP      reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    GREATER_OP      reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    LESS_OP         reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    GREATER_EQUAL_OP reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    LESS_EQUAL_OP   reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    PLUS_OP         reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    MINUS_OP        reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    CONCATENATE     reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    MULTIPLICATION_OP reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    DIVISION_OP     reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    MODULUS_OP      reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    REP_OP          reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    SEMICOLON       reduce using rule 107 (expression -> expression DIVISION_OP expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 107 (expression -> expression DIVISION_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 107 (expression -> expression DIVISION_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 107 (expression -> expression DIVISION_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 107 (expression -> expression DIVISION_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 107 (expression -> expression DIVISION_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]
  ! BIT_OR          [ shift and go to state 120 ]
  ! BIT_XOR         [ shift and go to state 97 ]
  ! BIT_AND         [ shift and go to state 108 ]
  ! EQUALS_OP       [ shift and go to state 90 ]
  ! NOT_EQUALS_OP   [ shift and go to state 92 ]
  ! COMPARE_OP      [ shift and go to state 91 ]
  ! GREATER_OP      [ shift and go to state 123 ]
  ! LESS_OP         [ shift and go to state 102 ]
  ! GREATER_EQUAL_OP [ shift and go to state 106 ]
  ! LESS_EQUAL_OP   [ shift and go to state 89 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 118 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 114 ]
  ! PLUS_OP         [ shift and go to state 121 ]
  ! MINUS_OP        [ shift and go to state 98 ]
  ! CONCATENATE     [ shift and go to state 116 ]
  ! MULTIPLICATION_OP [ shift and go to state 109 ]
  ! DIVISION_OP     [ shift and go to state 95 ]
  ! MODULUS_OP      [ shift and go to state 104 ]
  ! REP_OP          [ shift and go to state 115 ]


state 159

    (88) expression -> expression RANGE_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 88 (expression -> expression RANGE_OP expression .)
    OR_STR_OP       reduce using rule 88 (expression -> expression RANGE_OP expression .)
    XOR_STR_OP      reduce using rule 88 (expression -> expression RANGE_OP expression .)
    AND_STR_OP      reduce using rule 88 (expression -> expression RANGE_OP expression .)
    NOT_STR_OP      reduce using rule 88 (expression -> expression RANGE_OP expression .)
    COMMA           reduce using rule 88 (expression -> expression RANGE_OP expression .)
    ASSOCIATE_OP    reduce using rule 88 (expression -> expression RANGE_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 88 (expression -> expression RANGE_OP expression .)
    ASSIGNMENT_OP   reduce using rule 88 (expression -> expression RANGE_OP expression .)
    RANGE_OP        reduce using rule 88 (expression -> expression RANGE_OP expression .)
    SEMICOLON       reduce using rule 88 (expression -> expression RANGE_OP expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    OR_OP           shift and go to state 101
    AND_OP          shift and go to state 113
    BIT_OR          shift and go to state 120
    BIT_XOR         shift and go to state 97
    BIT_AND         shift and go to state 108
    EQUALS_OP       shift and go to state 90
    NOT_EQUALS_OP   shift and go to state 92
    COMPARE_OP      shift and go to state 91
    GREATER_OP      shift and go to state 123
    LESS_OP         shift and go to state 102
    GREATER_EQUAL_OP shift and go to state 106
    LESS_EQUAL_OP   shift and go to state 89
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 88 (expression -> expression RANGE_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 88 (expression -> expression RANGE_OP expression .) ]
  ! OR_OP           [ reduce using rule 88 (expression -> expression RANGE_OP expression .) ]
  ! AND_OP          [ reduce using rule 88 (expression -> expression RANGE_OP expression .) ]
  ! BIT_OR          [ reduce using rule 88 (expression -> expression RANGE_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 88 (expression -> expression RANGE_OP expression .) ]
  ! BIT_AND         [ reduce using rule 88 (expression -> expression RANGE_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 88 (expression -> expression RANGE_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 88 (expression -> expression RANGE_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 88 (expression -> expression RANGE_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 88 (expression -> expression RANGE_OP expression .) ]
  ! LESS_OP         [ reduce using rule 88 (expression -> expression RANGE_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 88 (expression -> expression RANGE_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 88 (expression -> expression RANGE_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 88 (expression -> expression RANGE_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 88 (expression -> expression RANGE_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 88 (expression -> expression RANGE_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 88 (expression -> expression RANGE_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 88 (expression -> expression RANGE_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 88 (expression -> expression RANGE_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 88 (expression -> expression RANGE_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 88 (expression -> expression RANGE_OP expression .) ]
  ! REP_OP          [ reduce using rule 88 (expression -> expression RANGE_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 88 (expression -> expression RANGE_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 88 (expression -> expression RANGE_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 88 (expression -> expression RANGE_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]


state 160

    (92) expression -> expression BIT_XOR expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 92 (expression -> expression BIT_XOR expression .)
    OR_STR_OP       reduce using rule 92 (expression -> expression BIT_XOR expression .)
    XOR_STR_OP      reduce using rule 92 (expression -> expression BIT_XOR expression .)
    AND_STR_OP      reduce using rule 92 (expression -> expression BIT_XOR expression .)
    NOT_STR_OP      reduce using rule 92 (expression -> expression BIT_XOR expression .)
    COMMA           reduce using rule 92 (expression -> expression BIT_XOR expression .)
    ASSOCIATE_OP    reduce using rule 92 (expression -> expression BIT_XOR expression .)
    ADV_ASSIGNMENT_OP reduce using rule 92 (expression -> expression BIT_XOR expression .)
    ASSIGNMENT_OP   reduce using rule 92 (expression -> expression BIT_XOR expression .)
    RANGE_OP        reduce using rule 92 (expression -> expression BIT_XOR expression .)
    OR_OP           reduce using rule 92 (expression -> expression BIT_XOR expression .)
    AND_OP          reduce using rule 92 (expression -> expression BIT_XOR expression .)
    BIT_OR          reduce using rule 92 (expression -> expression BIT_XOR expression .)
    BIT_XOR         reduce using rule 92 (expression -> expression BIT_XOR expression .)
    SEMICOLON       reduce using rule 92 (expression -> expression BIT_XOR expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    BIT_AND         shift and go to state 108
    EQUALS_OP       shift and go to state 90
    NOT_EQUALS_OP   shift and go to state 92
    COMPARE_OP      shift and go to state 91
    GREATER_OP      shift and go to state 123
    LESS_OP         shift and go to state 102
    GREATER_EQUAL_OP shift and go to state 106
    LESS_EQUAL_OP   shift and go to state 89
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 92 (expression -> expression BIT_XOR expression .) ]
  ! DECREMENT_OP    [ reduce using rule 92 (expression -> expression BIT_XOR expression .) ]
  ! BIT_AND         [ reduce using rule 92 (expression -> expression BIT_XOR expression .) ]
  ! EQUALS_OP       [ reduce using rule 92 (expression -> expression BIT_XOR expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 92 (expression -> expression BIT_XOR expression .) ]
  ! COMPARE_OP      [ reduce using rule 92 (expression -> expression BIT_XOR expression .) ]
  ! GREATER_OP      [ reduce using rule 92 (expression -> expression BIT_XOR expression .) ]
  ! LESS_OP         [ reduce using rule 92 (expression -> expression BIT_XOR expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 92 (expression -> expression BIT_XOR expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 92 (expression -> expression BIT_XOR expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 92 (expression -> expression BIT_XOR expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 92 (expression -> expression BIT_XOR expression .) ]
  ! PLUS_OP         [ reduce using rule 92 (expression -> expression BIT_XOR expression .) ]
  ! MINUS_OP        [ reduce using rule 92 (expression -> expression BIT_XOR expression .) ]
  ! CONCATENATE     [ reduce using rule 92 (expression -> expression BIT_XOR expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 92 (expression -> expression BIT_XOR expression .) ]
  ! DIVISION_OP     [ reduce using rule 92 (expression -> expression BIT_XOR expression .) ]
  ! MODULUS_OP      [ reduce using rule 92 (expression -> expression BIT_XOR expression .) ]
  ! REP_OP          [ reduce using rule 92 (expression -> expression BIT_XOR expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 92 (expression -> expression BIT_XOR expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 92 (expression -> expression BIT_XOR expression .) ]
  ! EXPONENT_OP     [ reduce using rule 92 (expression -> expression BIT_XOR expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]
  ! BIT_OR          [ shift and go to state 120 ]
  ! BIT_XOR         [ shift and go to state 97 ]


state 161

    (104) expression -> expression MINUS_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 104 (expression -> expression MINUS_OP expression .)
    OR_STR_OP       reduce using rule 104 (expression -> expression MINUS_OP expression .)
    XOR_STR_OP      reduce using rule 104 (expression -> expression MINUS_OP expression .)
    AND_STR_OP      reduce using rule 104 (expression -> expression MINUS_OP expression .)
    NOT_STR_OP      reduce using rule 104 (expression -> expression MINUS_OP expression .)
    COMMA           reduce using rule 104 (expression -> expression MINUS_OP expression .)
    ASSOCIATE_OP    reduce using rule 104 (expression -> expression MINUS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 104 (expression -> expression MINUS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 104 (expression -> expression MINUS_OP expression .)
    RANGE_OP        reduce using rule 104 (expression -> expression MINUS_OP expression .)
    OR_OP           reduce using rule 104 (expression -> expression MINUS_OP expression .)
    AND_OP          reduce using rule 104 (expression -> expression MINUS_OP expression .)
    BIT_OR          reduce using rule 104 (expression -> expression MINUS_OP expression .)
    BIT_XOR         reduce using rule 104 (expression -> expression MINUS_OP expression .)
    BIT_AND         reduce using rule 104 (expression -> expression MINUS_OP expression .)
    EQUALS_OP       reduce using rule 104 (expression -> expression MINUS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 104 (expression -> expression MINUS_OP expression .)
    COMPARE_OP      reduce using rule 104 (expression -> expression MINUS_OP expression .)
    GREATER_OP      reduce using rule 104 (expression -> expression MINUS_OP expression .)
    LESS_OP         reduce using rule 104 (expression -> expression MINUS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 104 (expression -> expression MINUS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 104 (expression -> expression MINUS_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 104 (expression -> expression MINUS_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 104 (expression -> expression MINUS_OP expression .)
    PLUS_OP         reduce using rule 104 (expression -> expression MINUS_OP expression .)
    MINUS_OP        reduce using rule 104 (expression -> expression MINUS_OP expression .)
    CONCATENATE     reduce using rule 104 (expression -> expression MINUS_OP expression .)
    SEMICOLON       reduce using rule 104 (expression -> expression MINUS_OP expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 104 (expression -> expression MINUS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 104 (expression -> expression MINUS_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 104 (expression -> expression MINUS_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 104 (expression -> expression MINUS_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 104 (expression -> expression MINUS_OP expression .) ]
  ! REP_OP          [ reduce using rule 104 (expression -> expression MINUS_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 104 (expression -> expression MINUS_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 104 (expression -> expression MINUS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 104 (expression -> expression MINUS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]
  ! BIT_OR          [ shift and go to state 120 ]
  ! BIT_XOR         [ shift and go to state 97 ]
  ! BIT_AND         [ shift and go to state 108 ]
  ! EQUALS_OP       [ shift and go to state 90 ]
  ! NOT_EQUALS_OP   [ shift and go to state 92 ]
  ! COMPARE_OP      [ shift and go to state 91 ]
  ! GREATER_OP      [ shift and go to state 123 ]
  ! LESS_OP         [ shift and go to state 102 ]
  ! GREATER_EQUAL_OP [ shift and go to state 106 ]
  ! LESS_EQUAL_OP   [ shift and go to state 89 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 118 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 114 ]
  ! PLUS_OP         [ shift and go to state 121 ]
  ! MINUS_OP        [ shift and go to state 98 ]
  ! CONCATENATE     [ shift and go to state 116 ]


state 162

    (82) expression -> expression AND_STR_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 82 (expression -> expression AND_STR_OP expression .)
    OR_STR_OP       reduce using rule 82 (expression -> expression AND_STR_OP expression .)
    XOR_STR_OP      reduce using rule 82 (expression -> expression AND_STR_OP expression .)
    AND_STR_OP      reduce using rule 82 (expression -> expression AND_STR_OP expression .)
    SEMICOLON       reduce using rule 82 (expression -> expression AND_STR_OP expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    NOT_STR_OP      shift and go to state 94
    COMMA           shift and go to state 103
    ASSOCIATE_OP    shift and go to state 111
    ADV_ASSIGNMENT_OP shift and go to state 119
    ASSIGNMENT_OP   shift and go to state 105
    RANGE_OP        shift and go to state 96
    OR_OP           shift and go to state 101
    AND_OP          shift and go to state 113
    BIT_OR          shift and go to state 120
    BIT_XOR         shift and go to state 97
    BIT_AND         shift and go to state 108
    EQUALS_OP       shift and go to state 90
    NOT_EQUALS_OP   shift and go to state 92
    COMPARE_OP      shift and go to state 91
    GREATER_OP      shift and go to state 123
    LESS_OP         shift and go to state 102
    GREATER_EQUAL_OP shift and go to state 106
    LESS_EQUAL_OP   shift and go to state 89
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! NOT_STR_OP      [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! COMMA           [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! ASSOCIATE_OP    [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! RANGE_OP        [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! OR_OP           [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! AND_OP          [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! BIT_OR          [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! BIT_AND         [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! LESS_OP         [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! REP_OP          [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 82 (expression -> expression AND_STR_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]


state 163

    (89) expression -> expression OR_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 89 (expression -> expression OR_OP expression .)
    OR_STR_OP       reduce using rule 89 (expression -> expression OR_OP expression .)
    XOR_STR_OP      reduce using rule 89 (expression -> expression OR_OP expression .)
    AND_STR_OP      reduce using rule 89 (expression -> expression OR_OP expression .)
    NOT_STR_OP      reduce using rule 89 (expression -> expression OR_OP expression .)
    COMMA           reduce using rule 89 (expression -> expression OR_OP expression .)
    ASSOCIATE_OP    reduce using rule 89 (expression -> expression OR_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 89 (expression -> expression OR_OP expression .)
    ASSIGNMENT_OP   reduce using rule 89 (expression -> expression OR_OP expression .)
    RANGE_OP        reduce using rule 89 (expression -> expression OR_OP expression .)
    OR_OP           reduce using rule 89 (expression -> expression OR_OP expression .)
    SEMICOLON       reduce using rule 89 (expression -> expression OR_OP expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    AND_OP          shift and go to state 113
    BIT_OR          shift and go to state 120
    BIT_XOR         shift and go to state 97
    BIT_AND         shift and go to state 108
    EQUALS_OP       shift and go to state 90
    NOT_EQUALS_OP   shift and go to state 92
    COMPARE_OP      shift and go to state 91
    GREATER_OP      shift and go to state 123
    LESS_OP         shift and go to state 102
    GREATER_EQUAL_OP shift and go to state 106
    LESS_EQUAL_OP   shift and go to state 89
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 89 (expression -> expression OR_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 89 (expression -> expression OR_OP expression .) ]
  ! AND_OP          [ reduce using rule 89 (expression -> expression OR_OP expression .) ]
  ! BIT_OR          [ reduce using rule 89 (expression -> expression OR_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 89 (expression -> expression OR_OP expression .) ]
  ! BIT_AND         [ reduce using rule 89 (expression -> expression OR_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 89 (expression -> expression OR_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 89 (expression -> expression OR_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 89 (expression -> expression OR_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 89 (expression -> expression OR_OP expression .) ]
  ! LESS_OP         [ reduce using rule 89 (expression -> expression OR_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 89 (expression -> expression OR_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 89 (expression -> expression OR_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 89 (expression -> expression OR_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 89 (expression -> expression OR_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 89 (expression -> expression OR_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 89 (expression -> expression OR_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 89 (expression -> expression OR_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 89 (expression -> expression OR_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 89 (expression -> expression OR_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 89 (expression -> expression OR_OP expression .) ]
  ! REP_OP          [ reduce using rule 89 (expression -> expression OR_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 89 (expression -> expression OR_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 89 (expression -> expression OR_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 89 (expression -> expression OR_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]


state 164

    (98) expression -> expression LESS_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 98 (expression -> expression LESS_OP expression .)
    OR_STR_OP       reduce using rule 98 (expression -> expression LESS_OP expression .)
    XOR_STR_OP      reduce using rule 98 (expression -> expression LESS_OP expression .)
    AND_STR_OP      reduce using rule 98 (expression -> expression LESS_OP expression .)
    NOT_STR_OP      reduce using rule 98 (expression -> expression LESS_OP expression .)
    COMMA           reduce using rule 98 (expression -> expression LESS_OP expression .)
    ASSOCIATE_OP    reduce using rule 98 (expression -> expression LESS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 98 (expression -> expression LESS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 98 (expression -> expression LESS_OP expression .)
    RANGE_OP        reduce using rule 98 (expression -> expression LESS_OP expression .)
    OR_OP           reduce using rule 98 (expression -> expression LESS_OP expression .)
    AND_OP          reduce using rule 98 (expression -> expression LESS_OP expression .)
    BIT_OR          reduce using rule 98 (expression -> expression LESS_OP expression .)
    BIT_XOR         reduce using rule 98 (expression -> expression LESS_OP expression .)
    BIT_AND         reduce using rule 98 (expression -> expression LESS_OP expression .)
    EQUALS_OP       reduce using rule 98 (expression -> expression LESS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 98 (expression -> expression LESS_OP expression .)
    COMPARE_OP      reduce using rule 98 (expression -> expression LESS_OP expression .)
    GREATER_OP      reduce using rule 98 (expression -> expression LESS_OP expression .)
    LESS_OP         reduce using rule 98 (expression -> expression LESS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 98 (expression -> expression LESS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 98 (expression -> expression LESS_OP expression .)
    SEMICOLON       reduce using rule 98 (expression -> expression LESS_OP expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 98 (expression -> expression LESS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 98 (expression -> expression LESS_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 98 (expression -> expression LESS_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 98 (expression -> expression LESS_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 98 (expression -> expression LESS_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 98 (expression -> expression LESS_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 98 (expression -> expression LESS_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 98 (expression -> expression LESS_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 98 (expression -> expression LESS_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 98 (expression -> expression LESS_OP expression .) ]
  ! REP_OP          [ reduce using rule 98 (expression -> expression LESS_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 98 (expression -> expression LESS_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 98 (expression -> expression LESS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 98 (expression -> expression LESS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]
  ! BIT_OR          [ shift and go to state 120 ]
  ! BIT_XOR         [ shift and go to state 97 ]
  ! BIT_AND         [ shift and go to state 108 ]
  ! EQUALS_OP       [ shift and go to state 90 ]
  ! NOT_EQUALS_OP   [ shift and go to state 92 ]
  ! COMPARE_OP      [ shift and go to state 91 ]
  ! GREATER_OP      [ shift and go to state 123 ]
  ! LESS_OP         [ shift and go to state 102 ]
  ! GREATER_EQUAL_OP [ shift and go to state 106 ]
  ! LESS_EQUAL_OP   [ shift and go to state 89 ]


state 165

    (84) expression -> expression COMMA expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 84 (expression -> expression COMMA expression .)
    OR_STR_OP       reduce using rule 84 (expression -> expression COMMA expression .)
    XOR_STR_OP      reduce using rule 84 (expression -> expression COMMA expression .)
    AND_STR_OP      reduce using rule 84 (expression -> expression COMMA expression .)
    NOT_STR_OP      reduce using rule 84 (expression -> expression COMMA expression .)
    COMMA           reduce using rule 84 (expression -> expression COMMA expression .)
    ASSOCIATE_OP    reduce using rule 84 (expression -> expression COMMA expression .)
    SEMICOLON       reduce using rule 84 (expression -> expression COMMA expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    ADV_ASSIGNMENT_OP shift and go to state 119
    ASSIGNMENT_OP   shift and go to state 105
    RANGE_OP        shift and go to state 96
    OR_OP           shift and go to state 101
    AND_OP          shift and go to state 113
    BIT_OR          shift and go to state 120
    BIT_XOR         shift and go to state 97
    BIT_AND         shift and go to state 108
    EQUALS_OP       shift and go to state 90
    NOT_EQUALS_OP   shift and go to state 92
    COMPARE_OP      shift and go to state 91
    GREATER_OP      shift and go to state 123
    LESS_OP         shift and go to state 102
    GREATER_EQUAL_OP shift and go to state 106
    LESS_EQUAL_OP   shift and go to state 89
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! DECREMENT_OP    [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! RANGE_OP        [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! OR_OP           [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! AND_OP          [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! BIT_OR          [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! BIT_XOR         [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! BIT_AND         [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! EQUALS_OP       [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! COMPARE_OP      [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! GREATER_OP      [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! LESS_OP         [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! PLUS_OP         [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! MINUS_OP        [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! CONCATENATE     [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! DIVISION_OP     [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! MODULUS_OP      [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! REP_OP          [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! EXPONENT_OP     [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]


state 166

    (108) expression -> expression MODULUS_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    OR_STR_OP       reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    XOR_STR_OP      reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    AND_STR_OP      reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    NOT_STR_OP      reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    COMMA           reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    ASSOCIATE_OP    reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    RANGE_OP        reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    OR_OP           reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    AND_OP          reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    BIT_OR          reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    BIT_XOR         reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    BIT_AND         reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    EQUALS_OP       reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    COMPARE_OP      reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    GREATER_OP      reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    LESS_OP         reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    PLUS_OP         reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    MINUS_OP        reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    CONCATENATE     reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    MULTIPLICATION_OP reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    DIVISION_OP     reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    MODULUS_OP      reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    REP_OP          reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    SEMICOLON       reduce using rule 108 (expression -> expression MODULUS_OP expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 108 (expression -> expression MODULUS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 108 (expression -> expression MODULUS_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 108 (expression -> expression MODULUS_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 108 (expression -> expression MODULUS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 108 (expression -> expression MODULUS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]
  ! BIT_OR          [ shift and go to state 120 ]
  ! BIT_XOR         [ shift and go to state 97 ]
  ! BIT_AND         [ shift and go to state 108 ]
  ! EQUALS_OP       [ shift and go to state 90 ]
  ! NOT_EQUALS_OP   [ shift and go to state 92 ]
  ! COMPARE_OP      [ shift and go to state 91 ]
  ! GREATER_OP      [ shift and go to state 123 ]
  ! LESS_OP         [ shift and go to state 102 ]
  ! GREATER_EQUAL_OP [ shift and go to state 106 ]
  ! LESS_EQUAL_OP   [ shift and go to state 89 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 118 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 114 ]
  ! PLUS_OP         [ shift and go to state 121 ]
  ! MINUS_OP        [ shift and go to state 98 ]
  ! CONCATENATE     [ shift and go to state 116 ]
  ! MULTIPLICATION_OP [ shift and go to state 109 ]
  ! DIVISION_OP     [ shift and go to state 95 ]
  ! MODULUS_OP      [ shift and go to state 104 ]
  ! REP_OP          [ shift and go to state 115 ]


state 167

    (87) expression -> expression ASSIGNMENT_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .)
    OR_STR_OP       reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .)
    XOR_STR_OP      reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .)
    AND_STR_OP      reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .)
    NOT_STR_OP      reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .)
    COMMA           reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .)
    ASSOCIATE_OP    reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .)
    SEMICOLON       reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    ADV_ASSIGNMENT_OP shift and go to state 119
    ASSIGNMENT_OP   shift and go to state 105
    RANGE_OP        shift and go to state 96
    OR_OP           shift and go to state 101
    AND_OP          shift and go to state 113
    BIT_OR          shift and go to state 120
    BIT_XOR         shift and go to state 97
    BIT_AND         shift and go to state 108
    EQUALS_OP       shift and go to state 90
    NOT_EQUALS_OP   shift and go to state 92
    COMPARE_OP      shift and go to state 91
    GREATER_OP      shift and go to state 123
    LESS_OP         shift and go to state 102
    GREATER_EQUAL_OP shift and go to state 106
    LESS_EQUAL_OP   shift and go to state 89
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! RANGE_OP        [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! OR_OP           [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! AND_OP          [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! BIT_OR          [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! BIT_AND         [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! LESS_OP         [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! REP_OP          [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 87 (expression -> expression ASSIGNMENT_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]


state 168

    (99) expression -> expression GREATER_EQUAL_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .)
    OR_STR_OP       reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .)
    XOR_STR_OP      reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .)
    AND_STR_OP      reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .)
    NOT_STR_OP      reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .)
    COMMA           reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .)
    ASSOCIATE_OP    reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .)
    ASSIGNMENT_OP   reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .)
    RANGE_OP        reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .)
    OR_OP           reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .)
    AND_OP          reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .)
    BIT_OR          reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .)
    BIT_XOR         reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .)
    BIT_AND         reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .)
    EQUALS_OP       reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .)
    NOT_EQUALS_OP   reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .)
    COMPARE_OP      reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .)
    GREATER_OP      reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .)
    LESS_OP         reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .)
    GREATER_EQUAL_OP reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .)
    LESS_EQUAL_OP   reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .)
    SEMICOLON       reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! REP_OP          [ reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 99 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]
  ! BIT_OR          [ shift and go to state 120 ]
  ! BIT_XOR         [ shift and go to state 97 ]
  ! BIT_AND         [ shift and go to state 108 ]
  ! EQUALS_OP       [ shift and go to state 90 ]
  ! NOT_EQUALS_OP   [ shift and go to state 92 ]
  ! COMPARE_OP      [ shift and go to state 91 ]
  ! GREATER_OP      [ shift and go to state 123 ]
  ! LESS_OP         [ shift and go to state 102 ]
  ! GREATER_EQUAL_OP [ shift and go to state 106 ]
  ! LESS_EQUAL_OP   [ shift and go to state 89 ]


state 169

    (81) expression -> expression XOR_STR_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 81 (expression -> expression XOR_STR_OP expression .)
    OR_STR_OP       reduce using rule 81 (expression -> expression XOR_STR_OP expression .)
    XOR_STR_OP      reduce using rule 81 (expression -> expression XOR_STR_OP expression .)
    SEMICOLON       reduce using rule 81 (expression -> expression XOR_STR_OP expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    AND_STR_OP      shift and go to state 100
    NOT_STR_OP      shift and go to state 94
    COMMA           shift and go to state 103
    ASSOCIATE_OP    shift and go to state 111
    ADV_ASSIGNMENT_OP shift and go to state 119
    ASSIGNMENT_OP   shift and go to state 105
    RANGE_OP        shift and go to state 96
    OR_OP           shift and go to state 101
    AND_OP          shift and go to state 113
    BIT_OR          shift and go to state 120
    BIT_XOR         shift and go to state 97
    BIT_AND         shift and go to state 108
    EQUALS_OP       shift and go to state 90
    NOT_EQUALS_OP   shift and go to state 92
    COMPARE_OP      shift and go to state 91
    GREATER_OP      shift and go to state 123
    LESS_OP         shift and go to state 102
    GREATER_EQUAL_OP shift and go to state 106
    LESS_EQUAL_OP   shift and go to state 89
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! AND_STR_OP      [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! NOT_STR_OP      [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! COMMA           [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! ASSOCIATE_OP    [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! RANGE_OP        [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! OR_OP           [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! AND_OP          [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! BIT_OR          [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! BIT_AND         [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! LESS_OP         [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! REP_OP          [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 81 (expression -> expression XOR_STR_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]


state 170

    (93) expression -> expression BIT_AND expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 93 (expression -> expression BIT_AND expression .)
    OR_STR_OP       reduce using rule 93 (expression -> expression BIT_AND expression .)
    XOR_STR_OP      reduce using rule 93 (expression -> expression BIT_AND expression .)
    AND_STR_OP      reduce using rule 93 (expression -> expression BIT_AND expression .)
    NOT_STR_OP      reduce using rule 93 (expression -> expression BIT_AND expression .)
    COMMA           reduce using rule 93 (expression -> expression BIT_AND expression .)
    ASSOCIATE_OP    reduce using rule 93 (expression -> expression BIT_AND expression .)
    ADV_ASSIGNMENT_OP reduce using rule 93 (expression -> expression BIT_AND expression .)
    ASSIGNMENT_OP   reduce using rule 93 (expression -> expression BIT_AND expression .)
    RANGE_OP        reduce using rule 93 (expression -> expression BIT_AND expression .)
    OR_OP           reduce using rule 93 (expression -> expression BIT_AND expression .)
    AND_OP          reduce using rule 93 (expression -> expression BIT_AND expression .)
    BIT_OR          reduce using rule 93 (expression -> expression BIT_AND expression .)
    BIT_XOR         reduce using rule 93 (expression -> expression BIT_AND expression .)
    BIT_AND         reduce using rule 93 (expression -> expression BIT_AND expression .)
    SEMICOLON       reduce using rule 93 (expression -> expression BIT_AND expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    EQUALS_OP       shift and go to state 90
    NOT_EQUALS_OP   shift and go to state 92
    COMPARE_OP      shift and go to state 91
    GREATER_OP      shift and go to state 123
    LESS_OP         shift and go to state 102
    GREATER_EQUAL_OP shift and go to state 106
    LESS_EQUAL_OP   shift and go to state 89
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 93 (expression -> expression BIT_AND expression .) ]
  ! DECREMENT_OP    [ reduce using rule 93 (expression -> expression BIT_AND expression .) ]
  ! EQUALS_OP       [ reduce using rule 93 (expression -> expression BIT_AND expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 93 (expression -> expression BIT_AND expression .) ]
  ! COMPARE_OP      [ reduce using rule 93 (expression -> expression BIT_AND expression .) ]
  ! GREATER_OP      [ reduce using rule 93 (expression -> expression BIT_AND expression .) ]
  ! LESS_OP         [ reduce using rule 93 (expression -> expression BIT_AND expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 93 (expression -> expression BIT_AND expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 93 (expression -> expression BIT_AND expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 93 (expression -> expression BIT_AND expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 93 (expression -> expression BIT_AND expression .) ]
  ! PLUS_OP         [ reduce using rule 93 (expression -> expression BIT_AND expression .) ]
  ! MINUS_OP        [ reduce using rule 93 (expression -> expression BIT_AND expression .) ]
  ! CONCATENATE     [ reduce using rule 93 (expression -> expression BIT_AND expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 93 (expression -> expression BIT_AND expression .) ]
  ! DIVISION_OP     [ reduce using rule 93 (expression -> expression BIT_AND expression .) ]
  ! MODULUS_OP      [ reduce using rule 93 (expression -> expression BIT_AND expression .) ]
  ! REP_OP          [ reduce using rule 93 (expression -> expression BIT_AND expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 93 (expression -> expression BIT_AND expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 93 (expression -> expression BIT_AND expression .) ]
  ! EXPONENT_OP     [ reduce using rule 93 (expression -> expression BIT_AND expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]
  ! BIT_OR          [ shift and go to state 120 ]
  ! BIT_XOR         [ shift and go to state 97 ]
  ! BIT_AND         [ shift and go to state 108 ]


state 171

    (106) expression -> expression MULTIPLICATION_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    OR_STR_OP       reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    XOR_STR_OP      reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    AND_STR_OP      reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    NOT_STR_OP      reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    COMMA           reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    ASSOCIATE_OP    reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    ASSIGNMENT_OP   reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    RANGE_OP        reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    OR_OP           reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    AND_OP          reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    BIT_OR          reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    BIT_XOR         reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    BIT_AND         reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    EQUALS_OP       reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    NOT_EQUALS_OP   reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    COMPARE_OP      reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    GREATER_OP      reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    LESS_OP         reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    GREATER_EQUAL_OP reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    LESS_EQUAL_OP   reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    PLUS_OP         reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    MINUS_OP        reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    CONCATENATE     reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    MULTIPLICATION_OP reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    DIVISION_OP     reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    MODULUS_OP      reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    REP_OP          reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    SEMICOLON       reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 106 (expression -> expression MULTIPLICATION_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]
  ! BIT_OR          [ shift and go to state 120 ]
  ! BIT_XOR         [ shift and go to state 97 ]
  ! BIT_AND         [ shift and go to state 108 ]
  ! EQUALS_OP       [ shift and go to state 90 ]
  ! NOT_EQUALS_OP   [ shift and go to state 92 ]
  ! COMPARE_OP      [ shift and go to state 91 ]
  ! GREATER_OP      [ shift and go to state 123 ]
  ! LESS_OP         [ shift and go to state 102 ]
  ! GREATER_EQUAL_OP [ shift and go to state 106 ]
  ! LESS_EQUAL_OP   [ shift and go to state 89 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 118 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 114 ]
  ! PLUS_OP         [ shift and go to state 121 ]
  ! MINUS_OP        [ shift and go to state 98 ]
  ! CONCATENATE     [ shift and go to state 116 ]
  ! MULTIPLICATION_OP [ shift and go to state 109 ]
  ! DIVISION_OP     [ shift and go to state 95 ]
  ! MODULUS_OP      [ shift and go to state 104 ]
  ! REP_OP          [ shift and go to state 115 ]


state 172

    (85) expression -> expression ASSOCIATE_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .)
    OR_STR_OP       reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .)
    XOR_STR_OP      reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .)
    AND_STR_OP      reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .)
    NOT_STR_OP      reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .)
    COMMA           reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .)
    ASSOCIATE_OP    reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .)
    SEMICOLON       reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    ADV_ASSIGNMENT_OP shift and go to state 119
    ASSIGNMENT_OP   shift and go to state 105
    RANGE_OP        shift and go to state 96
    OR_OP           shift and go to state 101
    AND_OP          shift and go to state 113
    BIT_OR          shift and go to state 120
    BIT_XOR         shift and go to state 97
    BIT_AND         shift and go to state 108
    EQUALS_OP       shift and go to state 90
    NOT_EQUALS_OP   shift and go to state 92
    COMPARE_OP      shift and go to state 91
    GREATER_OP      shift and go to state 123
    LESS_OP         shift and go to state 102
    GREATER_EQUAL_OP shift and go to state 106
    LESS_EQUAL_OP   shift and go to state 89
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! RANGE_OP        [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! OR_OP           [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! AND_OP          [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! BIT_OR          [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! BIT_AND         [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! LESS_OP         [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! REP_OP          [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 85 (expression -> expression ASSOCIATE_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]


state 173

    (80) expression -> expression OR_STR_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 80 (expression -> expression OR_STR_OP expression .)
    OR_STR_OP       reduce using rule 80 (expression -> expression OR_STR_OP expression .)
    XOR_STR_OP      reduce using rule 80 (expression -> expression OR_STR_OP expression .)
    SEMICOLON       reduce using rule 80 (expression -> expression OR_STR_OP expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    AND_STR_OP      shift and go to state 100
    NOT_STR_OP      shift and go to state 94
    COMMA           shift and go to state 103
    ASSOCIATE_OP    shift and go to state 111
    ADV_ASSIGNMENT_OP shift and go to state 119
    ASSIGNMENT_OP   shift and go to state 105
    RANGE_OP        shift and go to state 96
    OR_OP           shift and go to state 101
    AND_OP          shift and go to state 113
    BIT_OR          shift and go to state 120
    BIT_XOR         shift and go to state 97
    BIT_AND         shift and go to state 108
    EQUALS_OP       shift and go to state 90
    NOT_EQUALS_OP   shift and go to state 92
    COMPARE_OP      shift and go to state 91
    GREATER_OP      shift and go to state 123
    LESS_OP         shift and go to state 102
    GREATER_EQUAL_OP shift and go to state 106
    LESS_EQUAL_OP   shift and go to state 89
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! AND_STR_OP      [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! NOT_STR_OP      [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! COMMA           [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! ASSOCIATE_OP    [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! RANGE_OP        [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! OR_OP           [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! AND_OP          [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! BIT_OR          [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! BIT_AND         [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! LESS_OP         [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! REP_OP          [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 80 (expression -> expression OR_STR_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]


state 174

    (90) expression -> expression AND_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 90 (expression -> expression AND_OP expression .)
    OR_STR_OP       reduce using rule 90 (expression -> expression AND_OP expression .)
    XOR_STR_OP      reduce using rule 90 (expression -> expression AND_OP expression .)
    AND_STR_OP      reduce using rule 90 (expression -> expression AND_OP expression .)
    NOT_STR_OP      reduce using rule 90 (expression -> expression AND_OP expression .)
    COMMA           reduce using rule 90 (expression -> expression AND_OP expression .)
    ASSOCIATE_OP    reduce using rule 90 (expression -> expression AND_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 90 (expression -> expression AND_OP expression .)
    ASSIGNMENT_OP   reduce using rule 90 (expression -> expression AND_OP expression .)
    RANGE_OP        reduce using rule 90 (expression -> expression AND_OP expression .)
    OR_OP           reduce using rule 90 (expression -> expression AND_OP expression .)
    AND_OP          reduce using rule 90 (expression -> expression AND_OP expression .)
    SEMICOLON       reduce using rule 90 (expression -> expression AND_OP expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    BIT_OR          shift and go to state 120
    BIT_XOR         shift and go to state 97
    BIT_AND         shift and go to state 108
    EQUALS_OP       shift and go to state 90
    NOT_EQUALS_OP   shift and go to state 92
    COMPARE_OP      shift and go to state 91
    GREATER_OP      shift and go to state 123
    LESS_OP         shift and go to state 102
    GREATER_EQUAL_OP shift and go to state 106
    LESS_EQUAL_OP   shift and go to state 89
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 90 (expression -> expression AND_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 90 (expression -> expression AND_OP expression .) ]
  ! BIT_OR          [ reduce using rule 90 (expression -> expression AND_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 90 (expression -> expression AND_OP expression .) ]
  ! BIT_AND         [ reduce using rule 90 (expression -> expression AND_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 90 (expression -> expression AND_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 90 (expression -> expression AND_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 90 (expression -> expression AND_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 90 (expression -> expression AND_OP expression .) ]
  ! LESS_OP         [ reduce using rule 90 (expression -> expression AND_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 90 (expression -> expression AND_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 90 (expression -> expression AND_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 90 (expression -> expression AND_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 90 (expression -> expression AND_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 90 (expression -> expression AND_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 90 (expression -> expression AND_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 90 (expression -> expression AND_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 90 (expression -> expression AND_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 90 (expression -> expression AND_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 90 (expression -> expression AND_OP expression .) ]
  ! REP_OP          [ reduce using rule 90 (expression -> expression AND_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 90 (expression -> expression AND_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 90 (expression -> expression AND_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 90 (expression -> expression AND_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]


state 175

    (102) expression -> expression BIT_LEFT_SHIFT expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .)
    OR_STR_OP       reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .)
    XOR_STR_OP      reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .)
    AND_STR_OP      reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .)
    NOT_STR_OP      reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .)
    COMMA           reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .)
    ASSOCIATE_OP    reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .)
    ADV_ASSIGNMENT_OP reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .)
    ASSIGNMENT_OP   reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .)
    RANGE_OP        reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .)
    OR_OP           reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .)
    AND_OP          reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .)
    BIT_OR          reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .)
    BIT_XOR         reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .)
    BIT_AND         reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .)
    EQUALS_OP       reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .)
    NOT_EQUALS_OP   reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .)
    COMPARE_OP      reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .)
    GREATER_OP      reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .)
    LESS_OP         reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .)
    GREATER_EQUAL_OP reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .)
    LESS_EQUAL_OP   reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .)
    BIT_RIGHT_SHIFT reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .)
    BIT_LEFT_SHIFT  reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .)
    SEMICOLON       reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! DECREMENT_OP    [ reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! PLUS_OP         [ reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! MINUS_OP        [ reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! CONCATENATE     [ reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! DIVISION_OP     [ reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! MODULUS_OP      [ reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! REP_OP          [ reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! EXPONENT_OP     [ reduce using rule 102 (expression -> expression BIT_LEFT_SHIFT expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]
  ! BIT_OR          [ shift and go to state 120 ]
  ! BIT_XOR         [ shift and go to state 97 ]
  ! BIT_AND         [ shift and go to state 108 ]
  ! EQUALS_OP       [ shift and go to state 90 ]
  ! NOT_EQUALS_OP   [ shift and go to state 92 ]
  ! COMPARE_OP      [ shift and go to state 91 ]
  ! GREATER_OP      [ shift and go to state 123 ]
  ! LESS_OP         [ shift and go to state 102 ]
  ! GREATER_EQUAL_OP [ shift and go to state 106 ]
  ! LESS_EQUAL_OP   [ shift and go to state 89 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 118 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 114 ]


state 176

    (109) expression -> expression REP_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 109 (expression -> expression REP_OP expression .)
    OR_STR_OP       reduce using rule 109 (expression -> expression REP_OP expression .)
    XOR_STR_OP      reduce using rule 109 (expression -> expression REP_OP expression .)
    AND_STR_OP      reduce using rule 109 (expression -> expression REP_OP expression .)
    NOT_STR_OP      reduce using rule 109 (expression -> expression REP_OP expression .)
    COMMA           reduce using rule 109 (expression -> expression REP_OP expression .)
    ASSOCIATE_OP    reduce using rule 109 (expression -> expression REP_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 109 (expression -> expression REP_OP expression .)
    ASSIGNMENT_OP   reduce using rule 109 (expression -> expression REP_OP expression .)
    RANGE_OP        reduce using rule 109 (expression -> expression REP_OP expression .)
    OR_OP           reduce using rule 109 (expression -> expression REP_OP expression .)
    AND_OP          reduce using rule 109 (expression -> expression REP_OP expression .)
    BIT_OR          reduce using rule 109 (expression -> expression REP_OP expression .)
    BIT_XOR         reduce using rule 109 (expression -> expression REP_OP expression .)
    BIT_AND         reduce using rule 109 (expression -> expression REP_OP expression .)
    EQUALS_OP       reduce using rule 109 (expression -> expression REP_OP expression .)
    NOT_EQUALS_OP   reduce using rule 109 (expression -> expression REP_OP expression .)
    COMPARE_OP      reduce using rule 109 (expression -> expression REP_OP expression .)
    GREATER_OP      reduce using rule 109 (expression -> expression REP_OP expression .)
    LESS_OP         reduce using rule 109 (expression -> expression REP_OP expression .)
    GREATER_EQUAL_OP reduce using rule 109 (expression -> expression REP_OP expression .)
    LESS_EQUAL_OP   reduce using rule 109 (expression -> expression REP_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 109 (expression -> expression REP_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 109 (expression -> expression REP_OP expression .)
    PLUS_OP         reduce using rule 109 (expression -> expression REP_OP expression .)
    MINUS_OP        reduce using rule 109 (expression -> expression REP_OP expression .)
    CONCATENATE     reduce using rule 109 (expression -> expression REP_OP expression .)
    MULTIPLICATION_OP reduce using rule 109 (expression -> expression REP_OP expression .)
    DIVISION_OP     reduce using rule 109 (expression -> expression REP_OP expression .)
    MODULUS_OP      reduce using rule 109 (expression -> expression REP_OP expression .)
    REP_OP          reduce using rule 109 (expression -> expression REP_OP expression .)
    SEMICOLON       reduce using rule 109 (expression -> expression REP_OP expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 109 (expression -> expression REP_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 109 (expression -> expression REP_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 109 (expression -> expression REP_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 109 (expression -> expression REP_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 109 (expression -> expression REP_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]
  ! BIT_OR          [ shift and go to state 120 ]
  ! BIT_XOR         [ shift and go to state 97 ]
  ! BIT_AND         [ shift and go to state 108 ]
  ! EQUALS_OP       [ shift and go to state 90 ]
  ! NOT_EQUALS_OP   [ shift and go to state 92 ]
  ! COMPARE_OP      [ shift and go to state 91 ]
  ! GREATER_OP      [ shift and go to state 123 ]
  ! LESS_OP         [ shift and go to state 102 ]
  ! GREATER_EQUAL_OP [ shift and go to state 106 ]
  ! LESS_EQUAL_OP   [ shift and go to state 89 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 118 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 114 ]
  ! PLUS_OP         [ shift and go to state 121 ]
  ! MINUS_OP        [ shift and go to state 98 ]
  ! CONCATENATE     [ shift and go to state 116 ]
  ! MULTIPLICATION_OP [ shift and go to state 109 ]
  ! DIVISION_OP     [ shift and go to state 95 ]
  ! MODULUS_OP      [ shift and go to state 104 ]
  ! REP_OP          [ shift and go to state 115 ]


state 177

    (105) expression -> expression CONCATENATE expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 105 (expression -> expression CONCATENATE expression .)
    OR_STR_OP       reduce using rule 105 (expression -> expression CONCATENATE expression .)
    XOR_STR_OP      reduce using rule 105 (expression -> expression CONCATENATE expression .)
    AND_STR_OP      reduce using rule 105 (expression -> expression CONCATENATE expression .)
    NOT_STR_OP      reduce using rule 105 (expression -> expression CONCATENATE expression .)
    COMMA           reduce using rule 105 (expression -> expression CONCATENATE expression .)
    ASSOCIATE_OP    reduce using rule 105 (expression -> expression CONCATENATE expression .)
    ADV_ASSIGNMENT_OP reduce using rule 105 (expression -> expression CONCATENATE expression .)
    ASSIGNMENT_OP   reduce using rule 105 (expression -> expression CONCATENATE expression .)
    RANGE_OP        reduce using rule 105 (expression -> expression CONCATENATE expression .)
    OR_OP           reduce using rule 105 (expression -> expression CONCATENATE expression .)
    AND_OP          reduce using rule 105 (expression -> expression CONCATENATE expression .)
    BIT_OR          reduce using rule 105 (expression -> expression CONCATENATE expression .)
    BIT_XOR         reduce using rule 105 (expression -> expression CONCATENATE expression .)
    BIT_AND         reduce using rule 105 (expression -> expression CONCATENATE expression .)
    EQUALS_OP       reduce using rule 105 (expression -> expression CONCATENATE expression .)
    NOT_EQUALS_OP   reduce using rule 105 (expression -> expression CONCATENATE expression .)
    COMPARE_OP      reduce using rule 105 (expression -> expression CONCATENATE expression .)
    GREATER_OP      reduce using rule 105 (expression -> expression CONCATENATE expression .)
    LESS_OP         reduce using rule 105 (expression -> expression CONCATENATE expression .)
    GREATER_EQUAL_OP reduce using rule 105 (expression -> expression CONCATENATE expression .)
    LESS_EQUAL_OP   reduce using rule 105 (expression -> expression CONCATENATE expression .)
    BIT_RIGHT_SHIFT reduce using rule 105 (expression -> expression CONCATENATE expression .)
    BIT_LEFT_SHIFT  reduce using rule 105 (expression -> expression CONCATENATE expression .)
    PLUS_OP         reduce using rule 105 (expression -> expression CONCATENATE expression .)
    MINUS_OP        reduce using rule 105 (expression -> expression CONCATENATE expression .)
    CONCATENATE     reduce using rule 105 (expression -> expression CONCATENATE expression .)
    SEMICOLON       reduce using rule 105 (expression -> expression CONCATENATE expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 105 (expression -> expression CONCATENATE expression .) ]
  ! DECREMENT_OP    [ reduce using rule 105 (expression -> expression CONCATENATE expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 105 (expression -> expression CONCATENATE expression .) ]
  ! DIVISION_OP     [ reduce using rule 105 (expression -> expression CONCATENATE expression .) ]
  ! MODULUS_OP      [ reduce using rule 105 (expression -> expression CONCATENATE expression .) ]
  ! REP_OP          [ reduce using rule 105 (expression -> expression CONCATENATE expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 105 (expression -> expression CONCATENATE expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 105 (expression -> expression CONCATENATE expression .) ]
  ! EXPONENT_OP     [ reduce using rule 105 (expression -> expression CONCATENATE expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]
  ! BIT_OR          [ shift and go to state 120 ]
  ! BIT_XOR         [ shift and go to state 97 ]
  ! BIT_AND         [ shift and go to state 108 ]
  ! EQUALS_OP       [ shift and go to state 90 ]
  ! NOT_EQUALS_OP   [ shift and go to state 92 ]
  ! COMPARE_OP      [ shift and go to state 91 ]
  ! GREATER_OP      [ shift and go to state 123 ]
  ! LESS_OP         [ shift and go to state 102 ]
  ! GREATER_EQUAL_OP [ shift and go to state 106 ]
  ! LESS_EQUAL_OP   [ shift and go to state 89 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 118 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 114 ]
  ! PLUS_OP         [ shift and go to state 121 ]
  ! MINUS_OP        [ shift and go to state 98 ]
  ! CONCATENATE     [ shift and go to state 116 ]


state 178

    (101) expression -> expression BIT_RIGHT_SHIFT expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .)
    OR_STR_OP       reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .)
    XOR_STR_OP      reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .)
    AND_STR_OP      reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .)
    NOT_STR_OP      reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .)
    COMMA           reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .)
    ASSOCIATE_OP    reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .)
    ADV_ASSIGNMENT_OP reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .)
    ASSIGNMENT_OP   reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .)
    RANGE_OP        reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .)
    OR_OP           reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .)
    AND_OP          reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .)
    BIT_OR          reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .)
    BIT_XOR         reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .)
    BIT_AND         reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .)
    EQUALS_OP       reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .)
    NOT_EQUALS_OP   reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .)
    COMPARE_OP      reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .)
    GREATER_OP      reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .)
    LESS_OP         reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .)
    GREATER_EQUAL_OP reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .)
    LESS_EQUAL_OP   reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .)
    BIT_RIGHT_SHIFT reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .)
    BIT_LEFT_SHIFT  reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .)
    SEMICOLON       reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! DECREMENT_OP    [ reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! PLUS_OP         [ reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! MINUS_OP        [ reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! CONCATENATE     [ reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! DIVISION_OP     [ reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! MODULUS_OP      [ reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! REP_OP          [ reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! EXPONENT_OP     [ reduce using rule 101 (expression -> expression BIT_RIGHT_SHIFT expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]
  ! BIT_OR          [ shift and go to state 120 ]
  ! BIT_XOR         [ shift and go to state 97 ]
  ! BIT_AND         [ shift and go to state 108 ]
  ! EQUALS_OP       [ shift and go to state 90 ]
  ! NOT_EQUALS_OP   [ shift and go to state 92 ]
  ! COMPARE_OP      [ shift and go to state 91 ]
  ! GREATER_OP      [ shift and go to state 123 ]
  ! LESS_OP         [ shift and go to state 102 ]
  ! GREATER_EQUAL_OP [ shift and go to state 106 ]
  ! LESS_EQUAL_OP   [ shift and go to state 89 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 118 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 114 ]


state 179

    (86) expression -> expression ADV_ASSIGNMENT_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    OR_STR_OP       reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    XOR_STR_OP      reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    AND_STR_OP      reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    NOT_STR_OP      reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    COMMA           reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    ASSOCIATE_OP    reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    SEMICOLON       reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    ADV_ASSIGNMENT_OP shift and go to state 119
    ASSIGNMENT_OP   shift and go to state 105
    RANGE_OP        shift and go to state 96
    OR_OP           shift and go to state 101
    AND_OP          shift and go to state 113
    BIT_OR          shift and go to state 120
    BIT_XOR         shift and go to state 97
    BIT_AND         shift and go to state 108
    EQUALS_OP       shift and go to state 90
    NOT_EQUALS_OP   shift and go to state 92
    COMPARE_OP      shift and go to state 91
    GREATER_OP      shift and go to state 123
    LESS_OP         shift and go to state 102
    GREATER_EQUAL_OP shift and go to state 106
    LESS_EQUAL_OP   shift and go to state 89
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! RANGE_OP        [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! OR_OP           [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! AND_OP          [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! BIT_OR          [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! BIT_XOR         [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! BIT_AND         [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! EQUALS_OP       [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! COMPARE_OP      [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! GREATER_OP      [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! LESS_OP         [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! REP_OP          [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 86 (expression -> expression ADV_ASSIGNMENT_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]


state 180

    (91) expression -> expression BIT_OR expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 91 (expression -> expression BIT_OR expression .)
    OR_STR_OP       reduce using rule 91 (expression -> expression BIT_OR expression .)
    XOR_STR_OP      reduce using rule 91 (expression -> expression BIT_OR expression .)
    AND_STR_OP      reduce using rule 91 (expression -> expression BIT_OR expression .)
    NOT_STR_OP      reduce using rule 91 (expression -> expression BIT_OR expression .)
    COMMA           reduce using rule 91 (expression -> expression BIT_OR expression .)
    ASSOCIATE_OP    reduce using rule 91 (expression -> expression BIT_OR expression .)
    ADV_ASSIGNMENT_OP reduce using rule 91 (expression -> expression BIT_OR expression .)
    ASSIGNMENT_OP   reduce using rule 91 (expression -> expression BIT_OR expression .)
    RANGE_OP        reduce using rule 91 (expression -> expression BIT_OR expression .)
    OR_OP           reduce using rule 91 (expression -> expression BIT_OR expression .)
    AND_OP          reduce using rule 91 (expression -> expression BIT_OR expression .)
    BIT_OR          reduce using rule 91 (expression -> expression BIT_OR expression .)
    BIT_XOR         reduce using rule 91 (expression -> expression BIT_OR expression .)
    SEMICOLON       reduce using rule 91 (expression -> expression BIT_OR expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    BIT_AND         shift and go to state 108
    EQUALS_OP       shift and go to state 90
    NOT_EQUALS_OP   shift and go to state 92
    COMPARE_OP      shift and go to state 91
    GREATER_OP      shift and go to state 123
    LESS_OP         shift and go to state 102
    GREATER_EQUAL_OP shift and go to state 106
    LESS_EQUAL_OP   shift and go to state 89
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 91 (expression -> expression BIT_OR expression .) ]
  ! DECREMENT_OP    [ reduce using rule 91 (expression -> expression BIT_OR expression .) ]
  ! BIT_AND         [ reduce using rule 91 (expression -> expression BIT_OR expression .) ]
  ! EQUALS_OP       [ reduce using rule 91 (expression -> expression BIT_OR expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 91 (expression -> expression BIT_OR expression .) ]
  ! COMPARE_OP      [ reduce using rule 91 (expression -> expression BIT_OR expression .) ]
  ! GREATER_OP      [ reduce using rule 91 (expression -> expression BIT_OR expression .) ]
  ! LESS_OP         [ reduce using rule 91 (expression -> expression BIT_OR expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 91 (expression -> expression BIT_OR expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 91 (expression -> expression BIT_OR expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 91 (expression -> expression BIT_OR expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 91 (expression -> expression BIT_OR expression .) ]
  ! PLUS_OP         [ reduce using rule 91 (expression -> expression BIT_OR expression .) ]
  ! MINUS_OP        [ reduce using rule 91 (expression -> expression BIT_OR expression .) ]
  ! CONCATENATE     [ reduce using rule 91 (expression -> expression BIT_OR expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 91 (expression -> expression BIT_OR expression .) ]
  ! DIVISION_OP     [ reduce using rule 91 (expression -> expression BIT_OR expression .) ]
  ! MODULUS_OP      [ reduce using rule 91 (expression -> expression BIT_OR expression .) ]
  ! REP_OP          [ reduce using rule 91 (expression -> expression BIT_OR expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 91 (expression -> expression BIT_OR expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 91 (expression -> expression BIT_OR expression .) ]
  ! EXPONENT_OP     [ reduce using rule 91 (expression -> expression BIT_OR expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]
  ! BIT_OR          [ shift and go to state 120 ]
  ! BIT_XOR         [ shift and go to state 97 ]


state 181

    (103) expression -> expression PLUS_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 103 (expression -> expression PLUS_OP expression .)
    OR_STR_OP       reduce using rule 103 (expression -> expression PLUS_OP expression .)
    XOR_STR_OP      reduce using rule 103 (expression -> expression PLUS_OP expression .)
    AND_STR_OP      reduce using rule 103 (expression -> expression PLUS_OP expression .)
    NOT_STR_OP      reduce using rule 103 (expression -> expression PLUS_OP expression .)
    COMMA           reduce using rule 103 (expression -> expression PLUS_OP expression .)
    ASSOCIATE_OP    reduce using rule 103 (expression -> expression PLUS_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 103 (expression -> expression PLUS_OP expression .)
    ASSIGNMENT_OP   reduce using rule 103 (expression -> expression PLUS_OP expression .)
    RANGE_OP        reduce using rule 103 (expression -> expression PLUS_OP expression .)
    OR_OP           reduce using rule 103 (expression -> expression PLUS_OP expression .)
    AND_OP          reduce using rule 103 (expression -> expression PLUS_OP expression .)
    BIT_OR          reduce using rule 103 (expression -> expression PLUS_OP expression .)
    BIT_XOR         reduce using rule 103 (expression -> expression PLUS_OP expression .)
    BIT_AND         reduce using rule 103 (expression -> expression PLUS_OP expression .)
    EQUALS_OP       reduce using rule 103 (expression -> expression PLUS_OP expression .)
    NOT_EQUALS_OP   reduce using rule 103 (expression -> expression PLUS_OP expression .)
    COMPARE_OP      reduce using rule 103 (expression -> expression PLUS_OP expression .)
    GREATER_OP      reduce using rule 103 (expression -> expression PLUS_OP expression .)
    LESS_OP         reduce using rule 103 (expression -> expression PLUS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 103 (expression -> expression PLUS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 103 (expression -> expression PLUS_OP expression .)
    BIT_RIGHT_SHIFT reduce using rule 103 (expression -> expression PLUS_OP expression .)
    BIT_LEFT_SHIFT  reduce using rule 103 (expression -> expression PLUS_OP expression .)
    PLUS_OP         reduce using rule 103 (expression -> expression PLUS_OP expression .)
    MINUS_OP        reduce using rule 103 (expression -> expression PLUS_OP expression .)
    CONCATENATE     reduce using rule 103 (expression -> expression PLUS_OP expression .)
    SEMICOLON       reduce using rule 103 (expression -> expression PLUS_OP expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 103 (expression -> expression PLUS_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 103 (expression -> expression PLUS_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 103 (expression -> expression PLUS_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 103 (expression -> expression PLUS_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 103 (expression -> expression PLUS_OP expression .) ]
  ! REP_OP          [ reduce using rule 103 (expression -> expression PLUS_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 103 (expression -> expression PLUS_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 103 (expression -> expression PLUS_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 103 (expression -> expression PLUS_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]
  ! BIT_OR          [ shift and go to state 120 ]
  ! BIT_XOR         [ shift and go to state 97 ]
  ! BIT_AND         [ shift and go to state 108 ]
  ! EQUALS_OP       [ shift and go to state 90 ]
  ! NOT_EQUALS_OP   [ shift and go to state 92 ]
  ! COMPARE_OP      [ shift and go to state 91 ]
  ! GREATER_OP      [ shift and go to state 123 ]
  ! LESS_OP         [ shift and go to state 102 ]
  ! GREATER_EQUAL_OP [ shift and go to state 106 ]
  ! LESS_EQUAL_OP   [ shift and go to state 89 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 118 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 114 ]
  ! PLUS_OP         [ shift and go to state 121 ]
  ! MINUS_OP        [ shift and go to state 98 ]
  ! CONCATENATE     [ shift and go to state 116 ]


state 182

    (111) expression -> expression SEARCH_MODIFY_NEG expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    OR_STR_OP       reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    XOR_STR_OP      reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    AND_STR_OP      reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    NOT_STR_OP      reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    COMMA           reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    ASSOCIATE_OP    reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    ADV_ASSIGNMENT_OP reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    ASSIGNMENT_OP   reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    RANGE_OP        reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    OR_OP           reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    AND_OP          reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    BIT_OR          reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    BIT_XOR         reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    BIT_AND         reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    EQUALS_OP       reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    NOT_EQUALS_OP   reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    COMPARE_OP      reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    GREATER_OP      reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    LESS_OP         reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    GREATER_EQUAL_OP reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    LESS_EQUAL_OP   reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    BIT_RIGHT_SHIFT reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    BIT_LEFT_SHIFT  reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    PLUS_OP         reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    MINUS_OP        reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    CONCATENATE     reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    MULTIPLICATION_OP reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    DIVISION_OP     reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    MODULUS_OP      reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    REP_OP          reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    SEARCH_MODIFY   reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    SEARCH_MODIFY_NEG reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    SEMICOLON       reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .) ]
  ! DECREMENT_OP    [ reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .) ]
  ! EXPONENT_OP     [ reduce using rule 111 (expression -> expression SEARCH_MODIFY_NEG expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]
  ! BIT_OR          [ shift and go to state 120 ]
  ! BIT_XOR         [ shift and go to state 97 ]
  ! BIT_AND         [ shift and go to state 108 ]
  ! EQUALS_OP       [ shift and go to state 90 ]
  ! NOT_EQUALS_OP   [ shift and go to state 92 ]
  ! COMPARE_OP      [ shift and go to state 91 ]
  ! GREATER_OP      [ shift and go to state 123 ]
  ! LESS_OP         [ shift and go to state 102 ]
  ! GREATER_EQUAL_OP [ shift and go to state 106 ]
  ! LESS_EQUAL_OP   [ shift and go to state 89 ]
  ! BIT_RIGHT_SHIFT [ shift and go to state 118 ]
  ! BIT_LEFT_SHIFT  [ shift and go to state 114 ]
  ! PLUS_OP         [ shift and go to state 121 ]
  ! MINUS_OP        [ shift and go to state 98 ]
  ! CONCATENATE     [ shift and go to state 116 ]
  ! MULTIPLICATION_OP [ shift and go to state 109 ]
  ! DIVISION_OP     [ shift and go to state 95 ]
  ! MODULUS_OP      [ shift and go to state 104 ]
  ! REP_OP          [ shift and go to state 115 ]
  ! SEARCH_MODIFY   [ shift and go to state 88 ]
  ! SEARCH_MODIFY_NEG [ shift and go to state 122 ]


state 183

    (97) expression -> expression GREATER_OP expression .
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS reduce using rule 97 (expression -> expression GREATER_OP expression .)
    OR_STR_OP       reduce using rule 97 (expression -> expression GREATER_OP expression .)
    XOR_STR_OP      reduce using rule 97 (expression -> expression GREATER_OP expression .)
    AND_STR_OP      reduce using rule 97 (expression -> expression GREATER_OP expression .)
    NOT_STR_OP      reduce using rule 97 (expression -> expression GREATER_OP expression .)
    COMMA           reduce using rule 97 (expression -> expression GREATER_OP expression .)
    ASSOCIATE_OP    reduce using rule 97 (expression -> expression GREATER_OP expression .)
    ADV_ASSIGNMENT_OP reduce using rule 97 (expression -> expression GREATER_OP expression .)
    ASSIGNMENT_OP   reduce using rule 97 (expression -> expression GREATER_OP expression .)
    RANGE_OP        reduce using rule 97 (expression -> expression GREATER_OP expression .)
    OR_OP           reduce using rule 97 (expression -> expression GREATER_OP expression .)
    AND_OP          reduce using rule 97 (expression -> expression GREATER_OP expression .)
    BIT_OR          reduce using rule 97 (expression -> expression GREATER_OP expression .)
    BIT_XOR         reduce using rule 97 (expression -> expression GREATER_OP expression .)
    BIT_AND         reduce using rule 97 (expression -> expression GREATER_OP expression .)
    EQUALS_OP       reduce using rule 97 (expression -> expression GREATER_OP expression .)
    NOT_EQUALS_OP   reduce using rule 97 (expression -> expression GREATER_OP expression .)
    COMPARE_OP      reduce using rule 97 (expression -> expression GREATER_OP expression .)
    GREATER_OP      reduce using rule 97 (expression -> expression GREATER_OP expression .)
    LESS_OP         reduce using rule 97 (expression -> expression GREATER_OP expression .)
    GREATER_EQUAL_OP reduce using rule 97 (expression -> expression GREATER_OP expression .)
    LESS_EQUAL_OP   reduce using rule 97 (expression -> expression GREATER_OP expression .)
    SEMICOLON       reduce using rule 97 (expression -> expression GREATER_OP expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93

  ! INCREMENT_OP    [ reduce using rule 97 (expression -> expression GREATER_OP expression .) ]
  ! DECREMENT_OP    [ reduce using rule 97 (expression -> expression GREATER_OP expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 97 (expression -> expression GREATER_OP expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 97 (expression -> expression GREATER_OP expression .) ]
  ! PLUS_OP         [ reduce using rule 97 (expression -> expression GREATER_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 97 (expression -> expression GREATER_OP expression .) ]
  ! CONCATENATE     [ reduce using rule 97 (expression -> expression GREATER_OP expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 97 (expression -> expression GREATER_OP expression .) ]
  ! DIVISION_OP     [ reduce using rule 97 (expression -> expression GREATER_OP expression .) ]
  ! MODULUS_OP      [ reduce using rule 97 (expression -> expression GREATER_OP expression .) ]
  ! REP_OP          [ reduce using rule 97 (expression -> expression GREATER_OP expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 97 (expression -> expression GREATER_OP expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 97 (expression -> expression GREATER_OP expression .) ]
  ! EXPONENT_OP     [ reduce using rule 97 (expression -> expression GREATER_OP expression .) ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! COMMA           [ shift and go to state 103 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]
  ! ADV_ASSIGNMENT_OP [ shift and go to state 119 ]
  ! ASSIGNMENT_OP   [ shift and go to state 105 ]
  ! RANGE_OP        [ shift and go to state 96 ]
  ! OR_OP           [ shift and go to state 101 ]
  ! AND_OP          [ shift and go to state 113 ]
  ! BIT_OR          [ shift and go to state 120 ]
  ! BIT_XOR         [ shift and go to state 97 ]
  ! BIT_AND         [ shift and go to state 108 ]
  ! EQUALS_OP       [ shift and go to state 90 ]
  ! NOT_EQUALS_OP   [ shift and go to state 92 ]
  ! COMPARE_OP      [ shift and go to state 91 ]
  ! GREATER_OP      [ shift and go to state 123 ]
  ! LESS_OP         [ shift and go to state 102 ]
  ! GREATER_EQUAL_OP [ shift and go to state 106 ]
  ! LESS_EQUAL_OP   [ shift and go to state 89 ]


state 184

    (47) functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS .

    RETURN          reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS .)
    IDENTIFIER      reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS .)
    WHILE           reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS .)
    FOR             reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS .)
    PRINT           reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS .)
    SUB             reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS .)
    LAST            reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS .)
    NEXT            reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS .)
    IF              reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS .)
    PRIVATE         reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS .)
    LOCAL           reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS .)
    ARRAY           reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS .)
    HASH            reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS .)
    VARIABLE        reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS .)
    $end            reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS .)
    BLOCK_ENDS      reduce using rule 47 (functionCall -> IDENTIFIER OPEN_PARANTHESIS parameters CLOSE_PARANTHESIS .)


state 185

    (50) parameters -> empty empty . empty
    (7) empty -> .

    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)

    empty                          shift and go to state 204

state 186

    (48) parameters -> expression COMMA . parameters
    (84) expression -> expression COMMA . expression
    (48) parameters -> . expression COMMA parameters
    (49) parameters -> . expression empty empty
    (50) parameters -> . empty empty empty
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (7) empty -> .
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)
    OPEN_PARANTHESIS shift and go to state 35

    term                           shift and go to state 41
    parameters                     shift and go to state 205
    expression                     shift and go to state 206
    empty                          shift and go to state 129

state 187

    (49) parameters -> expression empty . empty
    (7) empty -> .

    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)

    empty                          shift and go to state 207

state 188

    (52) forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON . expression SEMICOLON expression CLOSE_PARANTHESIS block
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 208
    empty                          shift and go to state 39

state 189

    (35) assignment -> lefthandside decList CLOSE_PARANTHESIS assignmenttype . expression SEMICOLON
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 209
    empty                          shift and go to state 39

state 190

    (44) declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .

    RETURN          reduce using rule 44 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    IDENTIFIER      reduce using rule 44 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    WHILE           reduce using rule 44 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    FOR             reduce using rule 44 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    PRINT           reduce using rule 44 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    SUB             reduce using rule 44 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    LAST            reduce using rule 44 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    NEXT            reduce using rule 44 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    IF              reduce using rule 44 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    PRIVATE         reduce using rule 44 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    LOCAL           reduce using rule 44 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    ARRAY           reduce using rule 44 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    HASH            reduce using rule 44 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    VARIABLE        reduce using rule 44 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    $end            reduce using rule 44 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)
    BLOCK_ENDS      reduce using rule 44 (declaration -> lefthandside decList CLOSE_PARANTHESIS SEMICOLON .)


state 191

    (36) assignmenttype -> ADV_ASSIGNMENT_OP .

    PLUS_OP         reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    MINUS_OP        reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    BIT_FLIP        reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    NOT_OP          reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    INCREMENT_OP    reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    DECREMENT_OP    reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    OPEN_PARANTHESIS reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    NUMBER          reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    SCI_NOT         reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    FLOAT           reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    HEXADECIMAL     reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    OCTAL           reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    ARRAY           reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    HASH            reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    VARIABLE        reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    STRING          reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)
    RES_STRING      reduce using rule 36 (assignmenttype -> ADV_ASSIGNMENT_OP .)


state 192

    (37) assignmenttype -> ASSIGNMENT_OP .

    PLUS_OP         reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    MINUS_OP        reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    BIT_FLIP        reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    NOT_OP          reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    INCREMENT_OP    reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    DECREMENT_OP    reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    OPEN_PARANTHESIS reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    NUMBER          reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    SCI_NOT         reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    FLOAT           reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    HEXADECIMAL     reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    OCTAL           reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    ARRAY           reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    HASH            reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    VARIABLE        reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    STRING          reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)
    RES_STRING      reduce using rule 37 (assignmenttype -> ASSIGNMENT_OP .)


state 193

    (34) assignment -> lefthandside decList empty assignmenttype . expression SEMICOLON
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 210
    empty                          shift and go to state 39

state 194

    (43) declaration -> lefthandside decList empty SEMICOLON .

    RETURN          reduce using rule 43 (declaration -> lefthandside decList empty SEMICOLON .)
    IDENTIFIER      reduce using rule 43 (declaration -> lefthandside decList empty SEMICOLON .)
    WHILE           reduce using rule 43 (declaration -> lefthandside decList empty SEMICOLON .)
    FOR             reduce using rule 43 (declaration -> lefthandside decList empty SEMICOLON .)
    PRINT           reduce using rule 43 (declaration -> lefthandside decList empty SEMICOLON .)
    SUB             reduce using rule 43 (declaration -> lefthandside decList empty SEMICOLON .)
    LAST            reduce using rule 43 (declaration -> lefthandside decList empty SEMICOLON .)
    NEXT            reduce using rule 43 (declaration -> lefthandside decList empty SEMICOLON .)
    IF              reduce using rule 43 (declaration -> lefthandside decList empty SEMICOLON .)
    PRIVATE         reduce using rule 43 (declaration -> lefthandside decList empty SEMICOLON .)
    LOCAL           reduce using rule 43 (declaration -> lefthandside decList empty SEMICOLON .)
    ARRAY           reduce using rule 43 (declaration -> lefthandside decList empty SEMICOLON .)
    HASH            reduce using rule 43 (declaration -> lefthandside decList empty SEMICOLON .)
    VARIABLE        reduce using rule 43 (declaration -> lefthandside decList empty SEMICOLON .)
    $end            reduce using rule 43 (declaration -> lefthandside decList empty SEMICOLON .)
    BLOCK_ENDS      reduce using rule 43 (declaration -> lefthandside decList empty SEMICOLON .)


state 195

    (45) decList -> COMMA type decList .

    CLOSE_PARANTHESIS reduce using rule 45 (decList -> COMMA type decList .)
    SEMICOLON       reduce using rule 45 (decList -> COMMA type decList .)
    ADV_ASSIGNMENT_OP reduce using rule 45 (decList -> COMMA type decList .)
    ASSIGNMENT_OP   reduce using rule 45 (decList -> COMMA type decList .)


state 196

    (46) decList -> empty empty empty .

    CLOSE_PARANTHESIS reduce using rule 46 (decList -> empty empty empty .)
    SEMICOLON       reduce using rule 46 (decList -> empty empty empty .)
    ADV_ASSIGNMENT_OP reduce using rule 46 (decList -> empty empty empty .)
    ASSIGNMENT_OP   reduce using rule 46 (decList -> empty empty empty .)


state 197

    (24) ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS . block
    (25) ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS . block ELSE block
    (3) block -> . BLOCK_BEGIN statements BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 4

    block                          shift and go to state 211

state 198

    (51) whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .

    RETURN          reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    IDENTIFIER      reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    WHILE           reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    FOR             reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    PRINT           reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    SUB             reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    LAST            reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    NEXT            reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    IF              reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    PRIVATE         reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    LOCAL           reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    ARRAY           reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    HASH            reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    VARIABLE        reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    $end            reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    BLOCK_ENDS      reduce using rule 51 (whileStatement -> WHILE OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)


state 199

    (29) printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .

    RETURN          reduce using rule 29 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    IDENTIFIER      reduce using rule 29 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    WHILE           reduce using rule 29 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    FOR             reduce using rule 29 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    PRINT           reduce using rule 29 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    SUB             reduce using rule 29 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    LAST            reduce using rule 29 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    NEXT            reduce using rule 29 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    IF              reduce using rule 29 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    PRIVATE         reduce using rule 29 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    LOCAL           reduce using rule 29 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    ARRAY           reduce using rule 29 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    HASH            reduce using rule 29 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    VARIABLE        reduce using rule 29 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    $end            reduce using rule 29 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)
    BLOCK_ENDS      reduce using rule 29 (printStatement -> PRINT OPEN_PARANTHESIS string1 CLOSE_PARANTHESIS SEMICOLON .)


state 200

    (30) printStatement -> PRINT empty string1 empty SEMICOLON .

    RETURN          reduce using rule 30 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    IDENTIFIER      reduce using rule 30 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    WHILE           reduce using rule 30 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    FOR             reduce using rule 30 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    PRINT           reduce using rule 30 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    SUB             reduce using rule 30 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    LAST            reduce using rule 30 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    NEXT            reduce using rule 30 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    IF              reduce using rule 30 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    PRIVATE         reduce using rule 30 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    LOCAL           reduce using rule 30 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    ARRAY           reduce using rule 30 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    HASH            reduce using rule 30 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    VARIABLE        reduce using rule 30 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    $end            reduce using rule 30 (printStatement -> PRINT empty string1 empty SEMICOLON .)
    BLOCK_ENDS      reduce using rule 30 (printStatement -> PRINT empty string1 empty SEMICOLON .)


state 201

    (61) variable -> VARIABLE OPEN_BRACKET NUMBER . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 212


state 202

    (62) variable -> VARIABLE BLOCK_BEGIN string . BLOCK_ENDS

    BLOCK_ENDS      shift and go to state 213


state 203

    (60) variable -> VARIABLE empty empty . empty
    (7) empty -> .

    SEMICOLON       reduce using rule 7 (empty -> .)
    INCREMENT_OP    reduce using rule 7 (empty -> .)
    DECREMENT_OP    reduce using rule 7 (empty -> .)
    OR_STR_OP       reduce using rule 7 (empty -> .)
    XOR_STR_OP      reduce using rule 7 (empty -> .)
    AND_STR_OP      reduce using rule 7 (empty -> .)
    NOT_STR_OP      reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)
    ASSOCIATE_OP    reduce using rule 7 (empty -> .)
    ADV_ASSIGNMENT_OP reduce using rule 7 (empty -> .)
    ASSIGNMENT_OP   reduce using rule 7 (empty -> .)
    RANGE_OP        reduce using rule 7 (empty -> .)
    OR_OP           reduce using rule 7 (empty -> .)
    AND_OP          reduce using rule 7 (empty -> .)
    BIT_OR          reduce using rule 7 (empty -> .)
    BIT_XOR         reduce using rule 7 (empty -> .)
    BIT_AND         reduce using rule 7 (empty -> .)
    EQUALS_OP       reduce using rule 7 (empty -> .)
    NOT_EQUALS_OP   reduce using rule 7 (empty -> .)
    COMPARE_OP      reduce using rule 7 (empty -> .)
    GREATER_OP      reduce using rule 7 (empty -> .)
    LESS_OP         reduce using rule 7 (empty -> .)
    GREATER_EQUAL_OP reduce using rule 7 (empty -> .)
    LESS_EQUAL_OP   reduce using rule 7 (empty -> .)
    BIT_RIGHT_SHIFT reduce using rule 7 (empty -> .)
    BIT_LEFT_SHIFT  reduce using rule 7 (empty -> .)
    PLUS_OP         reduce using rule 7 (empty -> .)
    MINUS_OP        reduce using rule 7 (empty -> .)
    CONCATENATE     reduce using rule 7 (empty -> .)
    MULTIPLICATION_OP reduce using rule 7 (empty -> .)
    DIVISION_OP     reduce using rule 7 (empty -> .)
    MODULUS_OP      reduce using rule 7 (empty -> .)
    REP_OP          reduce using rule 7 (empty -> .)
    SEARCH_MODIFY   reduce using rule 7 (empty -> .)
    SEARCH_MODIFY_NEG reduce using rule 7 (empty -> .)
    EXPONENT_OP     reduce using rule 7 (empty -> .)
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)

    empty                          shift and go to state 214

state 204

    (50) parameters -> empty empty empty .

    CLOSE_PARANTHESIS reduce using rule 50 (parameters -> empty empty empty .)


state 205

    (48) parameters -> expression COMMA parameters .

    CLOSE_PARANTHESIS reduce using rule 48 (parameters -> expression COMMA parameters .)


state 206

    (84) expression -> expression COMMA expression .
    (48) parameters -> expression . COMMA parameters
    (49) parameters -> expression . empty empty
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression
    (7) empty -> .

  ! reduce/reduce conflict for CLOSE_PARANTHESIS resolved using rule 7 (empty -> .)
    COMMA           reduce using rule 84 (expression -> expression COMMA expression .)
    OR_STR_OP       reduce using rule 84 (expression -> expression COMMA expression .)
    XOR_STR_OP      reduce using rule 84 (expression -> expression COMMA expression .)
    AND_STR_OP      reduce using rule 84 (expression -> expression COMMA expression .)
    NOT_STR_OP      reduce using rule 84 (expression -> expression COMMA expression .)
    ASSOCIATE_OP    reduce using rule 84 (expression -> expression COMMA expression .)
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    ADV_ASSIGNMENT_OP shift and go to state 119
    ASSIGNMENT_OP   shift and go to state 105
    RANGE_OP        shift and go to state 96
    OR_OP           shift and go to state 101
    AND_OP          shift and go to state 113
    BIT_OR          shift and go to state 120
    BIT_XOR         shift and go to state 97
    BIT_AND         shift and go to state 108
    EQUALS_OP       shift and go to state 90
    NOT_EQUALS_OP   shift and go to state 92
    COMPARE_OP      shift and go to state 91
    GREATER_OP      shift and go to state 123
    LESS_OP         shift and go to state 102
    GREATER_EQUAL_OP shift and go to state 106
    LESS_EQUAL_OP   shift and go to state 89
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93
    CLOSE_PARANTHESIS reduce using rule 7 (empty -> .)

  ! INCREMENT_OP    [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! DECREMENT_OP    [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! ADV_ASSIGNMENT_OP [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! ASSIGNMENT_OP   [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! RANGE_OP        [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! OR_OP           [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! AND_OP          [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! BIT_OR          [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! BIT_XOR         [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! BIT_AND         [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! EQUALS_OP       [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! NOT_EQUALS_OP   [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! COMPARE_OP      [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! GREATER_OP      [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! LESS_OP         [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! BIT_RIGHT_SHIFT [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! BIT_LEFT_SHIFT  [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! PLUS_OP         [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! MINUS_OP        [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! CONCATENATE     [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! MULTIPLICATION_OP [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! DIVISION_OP     [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! MODULUS_OP      [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! REP_OP          [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! SEARCH_MODIFY   [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! SEARCH_MODIFY_NEG [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! EXPONENT_OP     [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! CLOSE_PARANTHESIS [ reduce using rule 84 (expression -> expression COMMA expression .) ]
  ! COMMA           [ shift and go to state 186 ]
  ! OR_STR_OP       [ shift and go to state 112 ]
  ! XOR_STR_OP      [ shift and go to state 107 ]
  ! AND_STR_OP      [ shift and go to state 100 ]
  ! NOT_STR_OP      [ shift and go to state 94 ]
  ! ASSOCIATE_OP    [ shift and go to state 111 ]

    empty                          shift and go to state 187

state 207

    (49) parameters -> expression empty empty .

    CLOSE_PARANTHESIS reduce using rule 49 (parameters -> expression empty empty .)


state 208

    (52) forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression . SEMICOLON expression CLOSE_PARANTHESIS block
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    SEMICOLON       shift and go to state 215
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    OR_STR_OP       shift and go to state 112
    XOR_STR_OP      shift and go to state 107
    AND_STR_OP      shift and go to state 100
    NOT_STR_OP      shift and go to state 94
    COMMA           shift and go to state 103
    ASSOCIATE_OP    shift and go to state 111
    ADV_ASSIGNMENT_OP shift and go to state 119
    ASSIGNMENT_OP   shift and go to state 105
    RANGE_OP        shift and go to state 96
    OR_OP           shift and go to state 101
    AND_OP          shift and go to state 113
    BIT_OR          shift and go to state 120
    BIT_XOR         shift and go to state 97
    BIT_AND         shift and go to state 108
    EQUALS_OP       shift and go to state 90
    NOT_EQUALS_OP   shift and go to state 92
    COMPARE_OP      shift and go to state 91
    GREATER_OP      shift and go to state 123
    LESS_OP         shift and go to state 102
    GREATER_EQUAL_OP shift and go to state 106
    LESS_EQUAL_OP   shift and go to state 89
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93


state 209

    (35) assignment -> lefthandside decList CLOSE_PARANTHESIS assignmenttype expression . SEMICOLON
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    SEMICOLON       shift and go to state 216
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    OR_STR_OP       shift and go to state 112
    XOR_STR_OP      shift and go to state 107
    AND_STR_OP      shift and go to state 100
    NOT_STR_OP      shift and go to state 94
    COMMA           shift and go to state 103
    ASSOCIATE_OP    shift and go to state 111
    ADV_ASSIGNMENT_OP shift and go to state 119
    ASSIGNMENT_OP   shift and go to state 105
    RANGE_OP        shift and go to state 96
    OR_OP           shift and go to state 101
    AND_OP          shift and go to state 113
    BIT_OR          shift and go to state 120
    BIT_XOR         shift and go to state 97
    BIT_AND         shift and go to state 108
    EQUALS_OP       shift and go to state 90
    NOT_EQUALS_OP   shift and go to state 92
    COMPARE_OP      shift and go to state 91
    GREATER_OP      shift and go to state 123
    LESS_OP         shift and go to state 102
    GREATER_EQUAL_OP shift and go to state 106
    LESS_EQUAL_OP   shift and go to state 89
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93


state 210

    (34) assignment -> lefthandside decList empty assignmenttype expression . SEMICOLON
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    SEMICOLON       shift and go to state 217
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    OR_STR_OP       shift and go to state 112
    XOR_STR_OP      shift and go to state 107
    AND_STR_OP      shift and go to state 100
    NOT_STR_OP      shift and go to state 94
    COMMA           shift and go to state 103
    ASSOCIATE_OP    shift and go to state 111
    ADV_ASSIGNMENT_OP shift and go to state 119
    ASSIGNMENT_OP   shift and go to state 105
    RANGE_OP        shift and go to state 96
    OR_OP           shift and go to state 101
    AND_OP          shift and go to state 113
    BIT_OR          shift and go to state 120
    BIT_XOR         shift and go to state 97
    BIT_AND         shift and go to state 108
    EQUALS_OP       shift and go to state 90
    NOT_EQUALS_OP   shift and go to state 92
    COMPARE_OP      shift and go to state 91
    GREATER_OP      shift and go to state 123
    LESS_OP         shift and go to state 102
    GREATER_EQUAL_OP shift and go to state 106
    LESS_EQUAL_OP   shift and go to state 89
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93


state 211

    (24) ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .
    (25) ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block . ELSE block

    RETURN          reduce using rule 24 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    IDENTIFIER      reduce using rule 24 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    WHILE           reduce using rule 24 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    FOR             reduce using rule 24 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    PRINT           reduce using rule 24 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    SUB             reduce using rule 24 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    LAST            reduce using rule 24 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    NEXT            reduce using rule 24 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    IF              reduce using rule 24 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    PRIVATE         reduce using rule 24 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    LOCAL           reduce using rule 24 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    ARRAY           reduce using rule 24 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    HASH            reduce using rule 24 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    VARIABLE        reduce using rule 24 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    $end            reduce using rule 24 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    BLOCK_ENDS      reduce using rule 24 (ifthen -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block .)
    ELSE            shift and go to state 218


state 212

    (61) variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .

    COMMA           reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    INCREMENT_OP    reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    DECREMENT_OP    reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    OR_STR_OP       reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    XOR_STR_OP      reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    AND_STR_OP      reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    NOT_STR_OP      reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    ASSOCIATE_OP    reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    ADV_ASSIGNMENT_OP reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    ASSIGNMENT_OP   reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    RANGE_OP        reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    OR_OP           reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    AND_OP          reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    BIT_OR          reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    BIT_XOR         reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    BIT_AND         reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    EQUALS_OP       reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    NOT_EQUALS_OP   reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    COMPARE_OP      reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    GREATER_OP      reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    LESS_OP         reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    GREATER_EQUAL_OP reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    LESS_EQUAL_OP   reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    BIT_RIGHT_SHIFT reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    BIT_LEFT_SHIFT  reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    PLUS_OP         reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    MINUS_OP        reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    CONCATENATE     reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    MULTIPLICATION_OP reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    DIVISION_OP     reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    MODULUS_OP      reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    REP_OP          reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    SEARCH_MODIFY   reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    SEARCH_MODIFY_NEG reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    EXPONENT_OP     reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    CLOSE_PARANTHESIS reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)
    SEMICOLON       reduce using rule 61 (variable -> VARIABLE OPEN_BRACKET NUMBER CLOSE_BRACKET .)


state 213

    (62) variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .

    COMMA           reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    INCREMENT_OP    reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    DECREMENT_OP    reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    OR_STR_OP       reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    XOR_STR_OP      reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    AND_STR_OP      reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    NOT_STR_OP      reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    ASSOCIATE_OP    reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    ADV_ASSIGNMENT_OP reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    ASSIGNMENT_OP   reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    RANGE_OP        reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    OR_OP           reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    AND_OP          reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    BIT_OR          reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    BIT_XOR         reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    BIT_AND         reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    EQUALS_OP       reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    NOT_EQUALS_OP   reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    COMPARE_OP      reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    GREATER_OP      reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    LESS_OP         reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    GREATER_EQUAL_OP reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    LESS_EQUAL_OP   reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    BIT_RIGHT_SHIFT reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    BIT_LEFT_SHIFT  reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    PLUS_OP         reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    MINUS_OP        reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    CONCATENATE     reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    MULTIPLICATION_OP reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    DIVISION_OP     reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    MODULUS_OP      reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    REP_OP          reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    SEARCH_MODIFY   reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    SEARCH_MODIFY_NEG reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    EXPONENT_OP     reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    CLOSE_PARANTHESIS reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)
    SEMICOLON       reduce using rule 62 (variable -> VARIABLE BLOCK_BEGIN string BLOCK_ENDS .)


state 214

    (60) variable -> VARIABLE empty empty empty .

    COMMA           reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    INCREMENT_OP    reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    DECREMENT_OP    reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    OR_STR_OP       reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    XOR_STR_OP      reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    AND_STR_OP      reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    NOT_STR_OP      reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    ASSOCIATE_OP    reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    ADV_ASSIGNMENT_OP reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    ASSIGNMENT_OP   reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    RANGE_OP        reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    OR_OP           reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    AND_OP          reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    BIT_OR          reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    BIT_XOR         reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    BIT_AND         reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    EQUALS_OP       reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    NOT_EQUALS_OP   reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    COMPARE_OP      reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    GREATER_OP      reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    LESS_OP         reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    GREATER_EQUAL_OP reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    LESS_EQUAL_OP   reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    BIT_RIGHT_SHIFT reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    BIT_LEFT_SHIFT  reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    PLUS_OP         reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    MINUS_OP        reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    CONCATENATE     reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    MULTIPLICATION_OP reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    DIVISION_OP     reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    MODULUS_OP      reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    REP_OP          reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    SEARCH_MODIFY   reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    SEARCH_MODIFY_NEG reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    EXPONENT_OP     reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    CLOSE_PARANTHESIS reduce using rule 60 (variable -> VARIABLE empty empty empty .)
    SEMICOLON       reduce using rule 60 (variable -> VARIABLE empty empty empty .)


state 215

    (52) forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON . expression CLOSE_PARANTHESIS block
    (71) expression -> . PLUS_OP expression
    (72) expression -> . MINUS_OP expression
    (73) expression -> . BIT_FLIP expression
    (74) expression -> . NOT_OP expression
    (75) expression -> . INCREMENT_OP expression
    (76) expression -> . DECREMENT_OP expression
    (77) expression -> . expression INCREMENT_OP
    (78) expression -> . expression DECREMENT_OP
    (79) expression -> . term
    (80) expression -> . expression OR_STR_OP expression
    (81) expression -> . expression XOR_STR_OP expression
    (82) expression -> . expression AND_STR_OP expression
    (83) expression -> . expression NOT_STR_OP expression
    (84) expression -> . expression COMMA expression
    (85) expression -> . expression ASSOCIATE_OP expression
    (86) expression -> . expression ADV_ASSIGNMENT_OP expression
    (87) expression -> . expression ASSIGNMENT_OP expression
    (88) expression -> . expression RANGE_OP expression
    (89) expression -> . expression OR_OP expression
    (90) expression -> . expression AND_OP expression
    (91) expression -> . expression BIT_OR expression
    (92) expression -> . expression BIT_XOR expression
    (93) expression -> . expression BIT_AND expression
    (94) expression -> . expression EQUALS_OP expression
    (95) expression -> . expression NOT_EQUALS_OP expression
    (96) expression -> . expression COMPARE_OP expression
    (97) expression -> . expression GREATER_OP expression
    (98) expression -> . expression LESS_OP expression
    (99) expression -> . expression GREATER_EQUAL_OP expression
    (100) expression -> . expression LESS_EQUAL_OP expression
    (101) expression -> . expression BIT_RIGHT_SHIFT expression
    (102) expression -> . expression BIT_LEFT_SHIFT expression
    (103) expression -> . expression PLUS_OP expression
    (104) expression -> . expression MINUS_OP expression
    (105) expression -> . expression CONCATENATE expression
    (106) expression -> . expression MULTIPLICATION_OP expression
    (107) expression -> . expression DIVISION_OP expression
    (108) expression -> . expression MODULUS_OP expression
    (109) expression -> . expression REP_OP expression
    (110) expression -> . expression SEARCH_MODIFY expression
    (111) expression -> . expression SEARCH_MODIFY_NEG expression
    (112) expression -> . expression EXPONENT_OP expression
    (63) term -> . empty number empty
    (64) term -> . empty type empty
    (65) term -> . empty variable empty
    (66) term -> . empty string empty
    (67) term -> . OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
    (7) empty -> .

    PLUS_OP         shift and go to state 43
    MINUS_OP        shift and go to state 36
    BIT_FLIP        shift and go to state 38
    NOT_OP          shift and go to state 37
    INCREMENT_OP    shift and go to state 42
    DECREMENT_OP    shift and go to state 40
    OPEN_PARANTHESIS shift and go to state 35
    NUMBER          reduce using rule 7 (empty -> .)
    SCI_NOT         reduce using rule 7 (empty -> .)
    FLOAT           reduce using rule 7 (empty -> .)
    HEXADECIMAL     reduce using rule 7 (empty -> .)
    OCTAL           reduce using rule 7 (empty -> .)
    ARRAY           reduce using rule 7 (empty -> .)
    HASH            reduce using rule 7 (empty -> .)
    VARIABLE        reduce using rule 7 (empty -> .)
    STRING          reduce using rule 7 (empty -> .)
    RES_STRING      reduce using rule 7 (empty -> .)

    term                           shift and go to state 41
    expression                     shift and go to state 219
    empty                          shift and go to state 39

state 216

    (35) assignment -> lefthandside decList CLOSE_PARANTHESIS assignmenttype expression SEMICOLON .

    RETURN          reduce using rule 35 (assignment -> lefthandside decList CLOSE_PARANTHESIS assignmenttype expression SEMICOLON .)
    IDENTIFIER      reduce using rule 35 (assignment -> lefthandside decList CLOSE_PARANTHESIS assignmenttype expression SEMICOLON .)
    WHILE           reduce using rule 35 (assignment -> lefthandside decList CLOSE_PARANTHESIS assignmenttype expression SEMICOLON .)
    FOR             reduce using rule 35 (assignment -> lefthandside decList CLOSE_PARANTHESIS assignmenttype expression SEMICOLON .)
    PRINT           reduce using rule 35 (assignment -> lefthandside decList CLOSE_PARANTHESIS assignmenttype expression SEMICOLON .)
    SUB             reduce using rule 35 (assignment -> lefthandside decList CLOSE_PARANTHESIS assignmenttype expression SEMICOLON .)
    LAST            reduce using rule 35 (assignment -> lefthandside decList CLOSE_PARANTHESIS assignmenttype expression SEMICOLON .)
    NEXT            reduce using rule 35 (assignment -> lefthandside decList CLOSE_PARANTHESIS assignmenttype expression SEMICOLON .)
    IF              reduce using rule 35 (assignment -> lefthandside decList CLOSE_PARANTHESIS assignmenttype expression SEMICOLON .)
    PRIVATE         reduce using rule 35 (assignment -> lefthandside decList CLOSE_PARANTHESIS assignmenttype expression SEMICOLON .)
    LOCAL           reduce using rule 35 (assignment -> lefthandside decList CLOSE_PARANTHESIS assignmenttype expression SEMICOLON .)
    ARRAY           reduce using rule 35 (assignment -> lefthandside decList CLOSE_PARANTHESIS assignmenttype expression SEMICOLON .)
    HASH            reduce using rule 35 (assignment -> lefthandside decList CLOSE_PARANTHESIS assignmenttype expression SEMICOLON .)
    VARIABLE        reduce using rule 35 (assignment -> lefthandside decList CLOSE_PARANTHESIS assignmenttype expression SEMICOLON .)
    $end            reduce using rule 35 (assignment -> lefthandside decList CLOSE_PARANTHESIS assignmenttype expression SEMICOLON .)
    BLOCK_ENDS      reduce using rule 35 (assignment -> lefthandside decList CLOSE_PARANTHESIS assignmenttype expression SEMICOLON .)


state 217

    (34) assignment -> lefthandside decList empty assignmenttype expression SEMICOLON .

    RETURN          reduce using rule 34 (assignment -> lefthandside decList empty assignmenttype expression SEMICOLON .)
    IDENTIFIER      reduce using rule 34 (assignment -> lefthandside decList empty assignmenttype expression SEMICOLON .)
    WHILE           reduce using rule 34 (assignment -> lefthandside decList empty assignmenttype expression SEMICOLON .)
    FOR             reduce using rule 34 (assignment -> lefthandside decList empty assignmenttype expression SEMICOLON .)
    PRINT           reduce using rule 34 (assignment -> lefthandside decList empty assignmenttype expression SEMICOLON .)
    SUB             reduce using rule 34 (assignment -> lefthandside decList empty assignmenttype expression SEMICOLON .)
    LAST            reduce using rule 34 (assignment -> lefthandside decList empty assignmenttype expression SEMICOLON .)
    NEXT            reduce using rule 34 (assignment -> lefthandside decList empty assignmenttype expression SEMICOLON .)
    IF              reduce using rule 34 (assignment -> lefthandside decList empty assignmenttype expression SEMICOLON .)
    PRIVATE         reduce using rule 34 (assignment -> lefthandside decList empty assignmenttype expression SEMICOLON .)
    LOCAL           reduce using rule 34 (assignment -> lefthandside decList empty assignmenttype expression SEMICOLON .)
    ARRAY           reduce using rule 34 (assignment -> lefthandside decList empty assignmenttype expression SEMICOLON .)
    HASH            reduce using rule 34 (assignment -> lefthandside decList empty assignmenttype expression SEMICOLON .)
    VARIABLE        reduce using rule 34 (assignment -> lefthandside decList empty assignmenttype expression SEMICOLON .)
    $end            reduce using rule 34 (assignment -> lefthandside decList empty assignmenttype expression SEMICOLON .)
    BLOCK_ENDS      reduce using rule 34 (assignment -> lefthandside decList empty assignmenttype expression SEMICOLON .)


state 218

    (25) ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE . block
    (3) block -> . BLOCK_BEGIN statements BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 4

    block                          shift and go to state 220

state 219

    (52) forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression . CLOSE_PARANTHESIS block
    (77) expression -> expression . INCREMENT_OP
    (78) expression -> expression . DECREMENT_OP
    (80) expression -> expression . OR_STR_OP expression
    (81) expression -> expression . XOR_STR_OP expression
    (82) expression -> expression . AND_STR_OP expression
    (83) expression -> expression . NOT_STR_OP expression
    (84) expression -> expression . COMMA expression
    (85) expression -> expression . ASSOCIATE_OP expression
    (86) expression -> expression . ADV_ASSIGNMENT_OP expression
    (87) expression -> expression . ASSIGNMENT_OP expression
    (88) expression -> expression . RANGE_OP expression
    (89) expression -> expression . OR_OP expression
    (90) expression -> expression . AND_OP expression
    (91) expression -> expression . BIT_OR expression
    (92) expression -> expression . BIT_XOR expression
    (93) expression -> expression . BIT_AND expression
    (94) expression -> expression . EQUALS_OP expression
    (95) expression -> expression . NOT_EQUALS_OP expression
    (96) expression -> expression . COMPARE_OP expression
    (97) expression -> expression . GREATER_OP expression
    (98) expression -> expression . LESS_OP expression
    (99) expression -> expression . GREATER_EQUAL_OP expression
    (100) expression -> expression . LESS_EQUAL_OP expression
    (101) expression -> expression . BIT_RIGHT_SHIFT expression
    (102) expression -> expression . BIT_LEFT_SHIFT expression
    (103) expression -> expression . PLUS_OP expression
    (104) expression -> expression . MINUS_OP expression
    (105) expression -> expression . CONCATENATE expression
    (106) expression -> expression . MULTIPLICATION_OP expression
    (107) expression -> expression . DIVISION_OP expression
    (108) expression -> expression . MODULUS_OP expression
    (109) expression -> expression . REP_OP expression
    (110) expression -> expression . SEARCH_MODIFY expression
    (111) expression -> expression . SEARCH_MODIFY_NEG expression
    (112) expression -> expression . EXPONENT_OP expression

    CLOSE_PARANTHESIS shift and go to state 221
    INCREMENT_OP    shift and go to state 117
    DECREMENT_OP    shift and go to state 110
    OR_STR_OP       shift and go to state 112
    XOR_STR_OP      shift and go to state 107
    AND_STR_OP      shift and go to state 100
    NOT_STR_OP      shift and go to state 94
    COMMA           shift and go to state 103
    ASSOCIATE_OP    shift and go to state 111
    ADV_ASSIGNMENT_OP shift and go to state 119
    ASSIGNMENT_OP   shift and go to state 105
    RANGE_OP        shift and go to state 96
    OR_OP           shift and go to state 101
    AND_OP          shift and go to state 113
    BIT_OR          shift and go to state 120
    BIT_XOR         shift and go to state 97
    BIT_AND         shift and go to state 108
    EQUALS_OP       shift and go to state 90
    NOT_EQUALS_OP   shift and go to state 92
    COMPARE_OP      shift and go to state 91
    GREATER_OP      shift and go to state 123
    LESS_OP         shift and go to state 102
    GREATER_EQUAL_OP shift and go to state 106
    LESS_EQUAL_OP   shift and go to state 89
    BIT_RIGHT_SHIFT shift and go to state 118
    BIT_LEFT_SHIFT  shift and go to state 114
    PLUS_OP         shift and go to state 121
    MINUS_OP        shift and go to state 98
    CONCATENATE     shift and go to state 116
    MULTIPLICATION_OP shift and go to state 109
    DIVISION_OP     shift and go to state 95
    MODULUS_OP      shift and go to state 104
    REP_OP          shift and go to state 115
    SEARCH_MODIFY   shift and go to state 88
    SEARCH_MODIFY_NEG shift and go to state 122
    EXPONENT_OP     shift and go to state 93


state 220

    (25) ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .

    RETURN          reduce using rule 25 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    IDENTIFIER      reduce using rule 25 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    WHILE           reduce using rule 25 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    FOR             reduce using rule 25 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    PRINT           reduce using rule 25 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    SUB             reduce using rule 25 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    LAST            reduce using rule 25 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    NEXT            reduce using rule 25 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    IF              reduce using rule 25 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    PRIVATE         reduce using rule 25 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    LOCAL           reduce using rule 25 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    ARRAY           reduce using rule 25 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    HASH            reduce using rule 25 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    VARIABLE        reduce using rule 25 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    $end            reduce using rule 25 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)
    BLOCK_ENDS      reduce using rule 25 (ifthenelse -> IF OPEN_PARANTHESIS expression CLOSE_PARANTHESIS block ELSE block .)


state 221

    (52) forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS . block
    (3) block -> . BLOCK_BEGIN statements BLOCK_ENDS

    BLOCK_BEGIN     shift and go to state 4

    block                          shift and go to state 222

state 222

    (52) forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .

    RETURN          reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    IDENTIFIER      reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    WHILE           reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    FOR             reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    PRINT           reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    SUB             reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    LAST            reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    NEXT            reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    IF              reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    PRIVATE         reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    LOCAL           reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    ARRAY           reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    HASH            reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    VARIABLE        reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    BLOCK_ENDS      reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)
    $end            reduce using rule 52 (forStatement -> FOR OPEN_PARANTHESIS expression SEMICOLON expression SEMICOLON expression CLOSE_PARANTHESIS block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 51 resolved using rule (statements -> statement empty)
WARNING: rejected rule (empty -> <empty>) in state 51
WARNING: reduce/reduce conflict in state 81 resolved using rule (empty -> <empty>)
WARNING: rejected rule (type -> variable) in state 81
WARNING: reduce/reduce conflict in state 206 resolved using rule (empty -> <empty>)
WARNING: rejected rule (expression -> expression COMMA expression) in state 206
